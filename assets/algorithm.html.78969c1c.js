import{_ as n,o as s,c as a,d as p}from"./app.ede35192.js";const t={},e=p(`<h1 id="javascript\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#javascript\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5" aria-hidden="true">#</a> JavaScript\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5</h1><h2 id="\u6808" tabindex="-1"><a class="header-anchor" href="#\u6808" aria-hidden="true">#</a> \u6808</h2><p>\u6808\u662F\u4E00\u79CD\u9075\u4ECE<strong>\u540E\u8FDB\u5148\u51FA</strong>(<code>LIFO</code>)\u539F\u5219\u7684\u6709\u5E8F\u96C6\u5408\uFF0C\u65B0\u6DFB\u52A0\u6216\u5F85\u5220\u9664\u7684\u5143\u7D20\u90FD\u4FDD\u5B58\u5728\u6808\u7684\u540C\u4E00\u7AEF\uFF0C\u79F0\u4E4B\u4E3A\u6808\u9876\uFF0C\u53E6\u4E00\u7AEF\u53EB\u6808\u5E95\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span> <span class="token operator">=</span> element
    <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count
  <span class="token punctuation">}</span>
  <span class="token function">isEmpty</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">--</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span>
    <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token function">peek</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token function">clear</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>str<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u961F\u5217\u548C\u53CC\u7AEF\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217\u548C\u53CC\u7AEF\u961F\u5217" aria-hidden="true">#</a> \u961F\u5217\u548C\u53CC\u7AEF\u961F\u5217</h2><h3 id="\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217" aria-hidden="true">#</a> \u961F\u5217</h3><p>\u961F\u5217\u662F\u4E00\u79CD\u9075\u5FAA<strong>\u5148\u8FDB\u5148\u51FA</strong>(<code>FIFO</code>)\u539F\u5219\u7684\u4E00\u7EC4\u6709\u5E8F\u7684\u9879\uFF0C\u961F\u5217\u5728\u5C3E\u90E8\u6DFB\u52A0\u65B0\u5143\u7D20\uFF0C\u5E76\u4ECE\u9876\u90E8\u79FB\u9664\u5143\u7D20\uFF0C\u800C\u53CC\u7AEF\u961F\u5217\u662F\u4E00\u79CD\u5C06\u6808\u7684\u539F\u5219\u548C\u961F\u5217\u7684\u539F\u5219\u6DF7\u5408\u5728\u4E00\u8D77\u7684\u6570\u636E\u7ED3\u6784\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount
  <span class="token punctuation">}</span>
  <span class="token function">isEmpty</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token function">enqueue</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span> <span class="token operator">=</span> element
    <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token function">dequeue</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span>
    <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token operator">++</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token function">peek</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token function">clear</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> objStr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      objStr <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>objStr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> objStr
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u6D4B\u8BD5\u961F\u5217\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token string">&#39;AAA&#39;</span><span class="token punctuation">)</span>
queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token string">&#39;BBB&#39;</span><span class="token punctuation">)</span>
queue<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token string">&#39;CCC&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// AAA,BBB,CCC</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment">// AAA</span>
queue<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
queue<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CC\u7AEF\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u53CC\u7AEF\u961F\u5217" aria-hidden="true">#</a> \u53CC\u7AEF\u961F\u5217</h3><p>\u53CC\u7AEF\u961F\u5217\u662F\u4E00\u79CD\u5141\u8BB8\u6211\u4EEC\u540C\u65F6\u4ECE\u524D\u7AEF\u548C\u540E\u7AEF\u6DFB\u52A0\u548C\u79FB\u9664\u5143\u7D20\u7684\u7279\u6B8A\u961F\u5217\uFF0C\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u53CC\u7AEF\u961F\u5217\u7684\u4E00\u4E2A\u5E38\u89C1\u5E94\u7528\u662F\u5B58\u50A8\u4E00\u7CFB\u5217\u64A4\u9500\u64CD\u4F5C\uFF0C\u6BCF\u5F53\u7528\u6237\u5728\u8F6F\u4EF6\u4E2D\u8FDB\u884C\u4E86\u4E00\u4E2A\u64CD\u4F5C\uFF0C\u8BE5\u64CD\u4F5C\u88AB\u5B58\u5728\u4E00\u4E2A\u53CC\u7AEF\u961F\u5217\u4E2D\uFF0C\u5F53\u7528\u6237\u70B9\u51FB\u64A4\u9500\u6309\u94AE\u65F6\uFF0C\u8BE5\u64CD\u4F5C\u4F1A\u88AB\u4ECE\u53CC\u7AEF\u961F\u5217\u4E2D\u5F39\u51FA\uFF0C\u8868\u793A\u5B83\u88AB\u4ECE\u540E\u9762\u79FB\u9664\u4E86\u3002\u5728\u8FDB\u884C\u9884\u5148\u5B9A\u4E49\u7684\u4E00\u5B9A\u6570\u91CF\u7684\u64CD\u4F5C\u540E\uFF0C\u6700\u65B0\u8FDB\u884C\u7684\u64CD\u4F5C\u4F1A\u88AB\u4ECE\u53CC\u7AEF\u961F\u5217\u7684\u524D\u7AEF\u79FB\u9664\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Deque</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">addBack</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">addFront</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addBack</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// lowestCount = 0,\u5168\u90E8\u540E\u79FB\u4E00\u6B65</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> element<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">removeFront</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">peekFront</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lowestCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h2><h3 id="\u94FE\u8868-1" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868-1" aria-hidden="true">#</a> \u94FE\u8868</h3><p>\u5728\u5927\u591A\u6570\u8BED\u8A00\u4E2D\u6570\u7EC4\u7684\u5927\u5C0F\u662F\u56FA\u5B9A\u7684\uFF0C\u5728\u6570\u7EC4\u7684\u8D77\u70B9\u6216\u8005\u4E2D\u95F4\u63D2\u5165\u6216\u79FB\u9664\u9879\u7684\u6210\u672C\u5F88\u9AD8\u3002\u800C\u94FE\u8868\u7684\u51FA\u73B0\u89E3\u51B3\u4E86\u8FD9\u4E2A\u95EE\u9898</p><p>\u94FE\u8868\u5B58\u50A8\u6709\u5E8F\u7684\u5143\u7D20\u96C6\u5408\uFF0C\u4F46\u4E0D\u540C\u4E8E\u6570\u7EC4\uFF0C\u94FE\u8868\u4E2D\u7684\u5143\u7D20\u5728\u5185\u5B58\u4E2D\u5E76\u4E0D\u662F\u8FDE\u7EED\u653E\u7F6E\u7684\u3002\u6BCF\u4E2A\u4E0E\u5143\u7D20\u7531\u4E00\u4E2A\u5B58\u50A8\u81EA\u8EAB\u7684\u8282\u70B9\u548C\u4E00\u4E2A\u6307\u5411\u4E0B\u4E00\u4E2A\u5143\u7D20\u7684\u5F15\u7528\u7EC4\u6210\uFF0C\u6240\u4EE5\u94FE\u8868\u7684\u4E00\u4E2A\u597D\u5904\u5728\u4E8E\uFF1A\u6DFB\u52A0\u548C\u79FB\u9664\u5143\u7D20\u7684\u65F6\u5019\u4E0D\u9700\u8981\u79FB\u52A8\u5176\u5B83\u5143\u7D20\u3002</p><p>\u7136\u800C\uFF0C\u94FE\u8868\u9700\u8981\u4F7F\u7528\u6307\u9488\uFF0C\u56E0\u6B64\u4E0D\u50CF\u5728\u6570\u7EC4\u4E2D\u53EF\u4EE5\u76F4\u63A5\u8BBF\u95EE\u4EFB\u4F55\u4F4D\u7F6E\u7684\u4EFB\u4F55\u5143\u7D20\uFF0C\u94FE\u8868\u9700\u8981\u6211\u4EEC\u4ECE\u8D77\u70B9\u6216\u8005\u5934\u5F00\u59CB\u8FED\u4EE3\u94FE\u8868\u76F4\u5230\u627E\u5230\u6240\u9700\u7684\u5143\u7D20\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">=</span> element
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53CC\u5411\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u53CC\u5411\u94FE\u8868" aria-hidden="true">#</a> \u53CC\u5411\u94FE\u8868</h3><p>\u53CC\u5411\u94FE\u8868\u548C\u666E\u901A\u94FE\u8868\u7684\u533A\u522B\u5728\u4E8E\uFF1A\u5728\u94FE\u8868\u4E2D\uFF0C\u4E00\u4E2A\u8282\u70B9\u53EA\u6709\u94FE\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u94FE\u63A5\uFF0C\u800C\u5728\u53CC\u5411\u94FE\u8868\u4E2D\uFF0C\u94FE\u8868\u662F\u53CC\u5411\u7684\uFF0C\u4E00\u4E2A\u94FE\u5411\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u53E6\u4E00\u4E2A\u94FE\u5411\u524D\u4E00\u4E2A\u5143\u7D20\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">DoublyNode</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> next<span class="token punctuation">,</span> prev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> next<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> prev
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5FAA\u73AF\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF\u94FE\u8868" aria-hidden="true">#</a> \u5FAA\u73AF\u94FE\u8868</h3><p>\u5FAA\u73AF\u94FE\u8868\u53EF\u4EE5\u50CF\u666E\u901A(\u5355\u5411)\u94FE\u8868\u4E00\u6837\u53EA\u6709\u5355\u5411\u5F15\u7528\uFF0C\u4E5F\u53EF\u4EE5\u50CF\u53CC\u5411\u94FE\u8868\u4E00\u6837\u6709\u53CC\u5411\u5F15\u7528\u3002</p><p>\u5FAA\u73AF\u94FE\u8868\u548C\u666E\u901A(\u5355\u5411)\u94FE\u8868\u7684\u552F\u4E00\u533A\u522B\u5728\u4E8E\uFF1A\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u6307\u9488\u4E0D\u662F<code>null</code>\u6216\u8005<code>undefined</code>\uFF0C\u800C\u662F\u6307\u5411\u7B2C\u4E00\u4E2A\u5143\u7D20<code>head</code>\u3002</p><h2 id="\u96C6\u5408set" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408set" aria-hidden="true">#</a> \u96C6\u5408Set</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Set</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">has</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> element <span class="token keyword">in</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items
  <span class="token punctuation">}</span>
  <span class="token function">add</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>element<span class="token punctuation">]</span> <span class="token operator">=</span> element
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">delete</span> <span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">[</span>element<span class="token punctuation">]</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token function">clear</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">size</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">)</span><span class="token punctuation">.</span>length
  <span class="token punctuation">}</span>
  <span class="token function">values</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>items<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u5178\u548C\u6563\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5178\u548C\u6563\u5217\u8868" aria-hidden="true">#</a> \u5B57\u5178\u548C\u6563\u5217\u8868</h2><h3 id="\u5B57\u5178" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5178" aria-hidden="true">#</a> \u5B57\u5178</h3><div class="custom-container tip"><p class="custom-container-title">\u6982\u5FF5</p><p>\u5728\u5B57\u5178Dictionary\uFF08\u6216\u6620\u5C04Map\uFF09\u4E2D\uFF0C\u6211\u4EEC\u7528[\u952E\uFF0C\u503C]\u5BF9\u7684\u5F62\u5F0F\u6765\u5B58\u50A8\u6570\u636E\u3002</p><p>\u5728\u6563\u5217\u8868\u4E2D\u4E5F\u662F\u4E00\u6837\uFF08\u4E5F\u662F\u4EE5[\u952E\uFF0C\u503C]\u5BF9\u7684\u5F62\u5F0F\u6765\u5B58\u50A8\u6570\u636E\uFF09\u3002</p><p>\u4F46\u662F\u4E24\u79CD\u6570\u636E\u7ED3\u6784\u7684\u5B9E\u73B0\u65B9\u5F0F\u7565\u6709\u4E0D\u540C\uFF0C\u4F8B\u5982\u5B57\u5178\u4E2D\u7684\u6BCF\u4E2A\u952E\u53EA\u80FD\u6709\u4E00\u4E2A\u503C</p></div><blockquote><p>\u5B57\u5178\u4E5F\u79F0\u6620\u5C04\u3001\u7B26\u53F7\u8868\u6216\u5173\u8054\u6570\u7EC4\u3002\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u5B57\u5178\u7ECF\u5E38\u7528\u6765\u4FDD\u5B58\u5BF9\u8C61\u7684\u5F15\u7528\u5730\u5740</p></blockquote><h3 id="\u6563\u5217\u8868hashtable" tabindex="-1"><a class="header-anchor" href="#\u6563\u5217\u8868hashtable" aria-hidden="true">#</a> \u6563\u5217\u8868HashTable</h3><p>\u6563\u5217\u8868\u4E5F\u53EB<code>HashTable</code>\u7C7B\u6216\u8005<code>HashMap</code>\u7C7B\uFF0C\u5B83\u662F<code>Dictionary</code>\u7C7B\u7684\u4E00\u79CD\u6563\u5217\u5B9E\u73B0\u65B9\u5F0F\u3002</p><p><strong>\u6563\u5217\u7B97\u6CD5</strong>\uFF1A\u6563\u5217\u7B97\u6CD5\u7684\u4F5C\u7528\u662F\u5C3D\u53EF\u80FD\u7684\u5FEB\u7684\u5728\u6570\u636E\u7ED3\u6784\u4E2D\u627E\u5230\u4E00\u4E2A\u503C\uFF0C\u56E0\u4E3A\u5B83\u662F\u5B57\u5178\u7684\u4E00\u79CD\u5B9E\u73B0\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528\u4F5C\u5173\u8054\u6570\u7EC4\uFF0C\u5B83\u4E5F\u53EF\u4EE5\u7528\u6765\u5BF9\u6570\u636E\u5E93\u8FDB\u884C\u7D22\u5F15\u3002\u5F53\u6211\u4EEC\u4F7F\u7528\u5173\u7CFB\u578B\u6570\u636E\u5E93\u7684\u65F6\u5019\uFF0C\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8868\u65F6\uFF0C\u4E00\u4E2A\u4E0D\u9519\u7684\u505A\u6CD5\u662F\u540C\u65F6\u521B\u5EFA\u4E00\u4E2A\u7D22\u5F15\u6765\u66F4\u5FEB\u7684\u67E5\u8BE2\u5230\u8BB0\u5F55\u7684<code>key</code>\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6563\u5217\u8868\u53EF\u4EE5\u7528\u6765\u4FDD\u5B58\u952E\u548C\u5BF9\u8868\u4E2D\u8BB0\u5F55\u7684\u5F15\u7528\u3002</p><p>\u6563\u5217\u8868\u7684\u521B\u5EFA\u9700\u8981\u4E00\u4E2Ahash\u51FD\u6570\u751F\u6210\u952E\uFF0C\u5373\u6563\u5217\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">loseloseHashCode</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> key <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> key<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> tableKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toStrFn</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> hash <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tableKey<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hash <span class="token operator">+=</span> tableKey<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> hash <span class="token operator">%</span> <span class="token number">37</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loseloseHashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u66F4\u597D\u7684\u6563\u5217\u51FD\u6570\u53EF\u4EE5\u964D\u4F4E\u51B2\u7A81</span>
<span class="token function">djb2HashCode</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> tableKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toStrFn</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> hash <span class="token operator">=</span> <span class="token number">5381</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tableKey<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hash <span class="token operator">=</span> <span class="token punctuation">(</span>hash <span class="token operator">*</span> <span class="token number">33</span><span class="token punctuation">)</span> <span class="token operator">+</span> tableKey<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> hash <span class="token operator">%</span> <span class="token number">1013</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u65F6\u5019\uFF0C\u4E00\u4E9B\u952E\u4F1A\u6709\u76F8\u540C\u7684\u6563\u5217\u503C\u3002\u4E0D\u540C\u7684\u503C\u5728\u6563\u5217\u8868\u4E2D\u5BF9\u5E94\u76F8\u540C\u4F4D\u7F6E\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u79F0\u5176\u4E3A\u51B2\u7A81\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u5904\u7406\u51B2\u7A81\u6709\u51E0\u79CD\u65B9\u6CD5\uFF1A</p><ul><li><p>\u5206\u79BB\u94FE\u63A5\uFF1A\u5305\u62EC\u4E3A\u6563\u5217\u8868\u7684\u6BCF\u4E00\u4E2A\u4F4D\u7F6E\u521B\u5EFA\u4E00\u4E2A<strong>\u94FE\u8868</strong>\u5E76\u5C06\u5143\u7D20\u5B58\u50A8\u5728\u91CC\u9762\u3002\u5B83\u662F\u89E3\u51B3\u51B2\u7A81\u7684\u6700\u7B80\u5355\u7684\u65B9\u6CD5\uFF0C\u4F46\u662F\u5728HashTable\u5B9E\u4F8B\u4E4B\u5916\u8FD8\u9700\u8981\u989D\u5916\u7684\u5B58\u50A8\u7A7A\u95F4</p></li><li><p>\u7EBF\u6027\u63A2\u67E5\uFF1A\u5C06\u5143\u7D20\u76F4\u63A5\u5B58\u50A8\u5230\u8868\u4E2D\uFF0C\u800C\u4E0D\u662F\u5728\u5355\u72EC\u7684\u6570\u636E\u7ED3\u6784\u4E2D</p><p>\u7EBF\u6027\u63A2\u67E5\u6280\u672F\u5206\u4E3A\u4E24\u79CD\u3002\u7B2C\u4E00\u79CD\u662F\u8F6F\u5220\u9664\u65B9\u6CD5\u3002\u6211\u4EEC\u4F7F\u7528\u4E00\u4E2A\u7279\u6B8A\u7684\u503C\uFF08\u6807\u8BB0\uFF09\u6765\u8868\u793A\u952E\u503C\u5BF9\u88AB\u5220\u9664\u4E86\uFF08\u60F0\u6027\u5220\u9664\u6216\u8F6F\u5220\u9664\uFF09\uFF0C\u800C\u4E0D\u662F\u771F\u7684\u5220\u9664\u5B83\u3002\u7ECF\u8FC7\u4E00\u6BB5\u65F6\u95F4\uFF0C\u6563\u5217\u8868\u88AB\u64CD\u4F5C\u8FC7\u540E\uFF0C\u6211\u4EEC\u4F1A\u5F97\u5230\u4E00\u4E2A\u6807\u8BB0\u4E86\u82E5\u5E72\u5220\u9664\u4F4D\u7F6E\u7684\u6563\u5217\u8868\u3002\u8FD9\u4F1A\u9010\u6E10\u964D\u4F4E\u6563\u5217\u8868\u7684\u6548\u7387\uFF0C\u56E0\u4E3A\u641C\u7D22\u952E\u503C\u4F1A\u968F\u65F6\u95F4\u53D8\u5F97\u66F4\u6162\u3002\u80FD\u5FEB\u901F\u8BBF\u95EE\u5E76\u627E\u5230\u4E00\u4E2A\u952E\u662F\u6211\u4EEC\u4F7F\u7528\u6563\u5217\u8868\u7684\u4E00\u4E2A\u91CD\u8981\u539F\u56E0\u3002</p><p>\u7B2C\u4E8C\u79CD\u65B9\u6CD5\u9700\u8981\u68C0\u9A8C\u662F\u5426\u6709\u5FC5\u8981\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5143\u7D20\u79FB\u52A8\u5230\u4E4B\u524D\u7684\u4F4D\u7F6E\u3002\u5F53\u641C\u7D22\u4E00\u4E2A\u952E\u7684\u65F6\u5019\uFF0C\u8FD9\u79CD\u65B9\u6CD5\u53EF\u4EE5\u907F\u514D\u627E\u5230\u4E00\u4E2A\u7A7A\u4F4D\u7F6E\u3002\u5982\u679C\u79FB\u52A8\u5143\u7D20\u662F\u5FC5\u8981\u7684\uFF0C\u6211\u4EEC\u5C31\u9700\u8981\u5728\u6563\u5217\u8868\u4E2D\u632A\u52A8\u952E\u503C\u5BF9\u3002</p></li><li><p>\u53CC\u6563\u5217</p></li></ul></div><h2 id="\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u6811</h2><div class="custom-container tip"><p class="custom-container-title">Binary Search Tree</p><p>\u4E8C\u53C9\u6811\u4E2D\u7684\u8282\u70B9\u6700\u591A\u53EA\u80FD\u6709\u4E24\u4E2A\u5B50\u8282\u70B9\uFF1A\u4E00\u4E2A\u662F\u5DE6\u4FA7\u5B50\u8282\u70B9\uFF0C\u53E6\u4E00\u4E2A\u662F\u53F3\u4FA7\u5B50\u8282\u70B9\u3002\u8FD9\u4E2A\u5B9A\u4E49\u6709\u52A9\u4E8E\u6211\u4EEC\u5199\u51FA\u66F4\u9AD8\u6548\u5730\u5728\u6811\u4E2D\u63D2\u5165\u3001\u67E5\u627E\u548C\u5220\u9664\u8282\u70B9\u7684\u7B97\u6CD5\u3002\u4E8C\u53C9\u6811\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\u7684\u5E94\u7528\u975E\u5E38\u5E7F\u6CDB\u3002</p><p>\u4E8C\u53C9\u641C\u7D22\u6811\uFF08BST\uFF09\u662F\u4E8C\u53C9\u6811\u7684\u4E00\u79CD\uFF0C\u4F46\u662F\u53EA\u5141\u8BB8\u4F60\u5728\u5DE6\u4FA7\u8282\u70B9\u5B58\u50A8\uFF08\u6BD4\u7236\u8282\u70B9\uFF09\u5C0F\u7684\u503C\uFF0C\u5728\u53F3\u4FA7\u8282\u70B9\u5B58\u50A8\uFF08\u6BD4\u7236\u8282\u70B9\uFF09\u5927\u7684\u503C\u3002</p></div><h3 id="insert" tabindex="-1"><a class="header-anchor" href="#insert" aria-hidden="true">#</a> insert</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">insertNode</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">compareFn</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> node<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">===</span> Compare<span class="token punctuation">.</span><span class="token constant">LESS_THAN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6BD4\u5F53\u524D\u8282\u70B9\u5C0F\uFF0C\u653E\u5DE6\u8FB9</span>
      node<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6BD4\u5F53\u524D\u8282\u70B9\u5927\uFF0C\u653E\u53F3\u8FB9</span>
      node<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u904D\u5386</h3><div class="custom-container tip"><p class="custom-container-title">\u4E8C\u53C9\u6811\u7684\u904D\u5386</p><ul><li>\u524D\u5E8F\u904D\u5386\uFF1A\u82E5\u4E8C\u53C9\u6811\u4E3A\u7A7A\uFF0C\u5219\u7A7A\u64CD\u4F5C\u8FD4\u56DE\uFF0C\u5426\u5219<strong>\u5148\u8BBF\u95EE\u6839\u7ED3\u70B9</strong>\uFF0C\u7136\u540E\u524D\u5E8F\u904D\u5386\u5DE6\u5B50\u6811\uFF0C\u518D\u524D\u5E8F\u904D\u5386\u53F3\u5B50\u6811\u3002</li><li>\u4E2D\u5E8F\u904D\u5386\uFF1A\u82E5\u6811\u4E3A\u7A7A\uFF0C\u5219\u7A7A\u64CD\u4F5C\u8FD4\u56DE\uFF0C\u5426\u5219\u4ECE\u6839\u7ED3\u70B9\u5F00\u59CB\uFF08\u6CE8\u610F\u5E76\u4E0D\u662F\u5148\u8BBF\u95EE\u6839\u7ED3\u70B9)\uFF0C\u4E2D\u5E8F\u904D\u5386\u6839\u7ED3\u70B9\u7684\u5DE6\u5B50\u6811\uFF0C<strong>\u7136\u540E\u8BBF\u95EE\u6839\u7ED3\u70B9</strong>\uFF0C\u6700\u540E\u4E2D\u5E8F\u904D\u5386\u53F3\u5B50\u6811\u3002</li><li>\u540E\u5E8F\u904D\u5386\uFF1A\u82E5\u6811\u4E3A\u7A7A\uFF0C\u5219\u7A7A\u64CD\u4F5C\u8FD4\u56DE\uFF0C\u5426\u5219\u4ECE\u5DE6\u5230\u53F3\u5148\u53F6\u5B50\u540E\u7ED3\u70B9\u7684\u65B9\u5F0F\u904D\u5386\u8BBF\u95EE\u5DE6\u53F3\u5B50\u6811\uFF0C<strong>\u6700\u540E\u8BBF\u95EE\u6839\u7ED3\u70B9</strong>\u3002</li></ul></div><h3 id="\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" aria-hidden="true">#</a> \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868</h3><ol><li>\u5148\u7ED9\u9012\u5F52\u7B97\u6CD5\u7684\u57FA\u7EBF\u6761\u4EF6</li><li>\u7136\u540E\u8C03\u7528\u81EA\u8EAB\u5373\u9012\u5F52</li><li>\u6700\u540E\u518D\u64CD\u4F5C\u5F53\u524D\u8282\u70B9 \uFF08\u540E\u5E8F\u904D\u5386\uFF09</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reversePrint</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">reversePrint</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="avl\u4E0E\u7EA2\u9ED1\u6811" tabindex="-1"><a class="header-anchor" href="#avl\u4E0E\u7EA2\u9ED1\u6811" aria-hidden="true">#</a> AVL\u4E0E\u7EA2\u9ED1\u6811</h3><ul><li>AVL: \u4E00\u822C\u7528\u5E73\u8861\u56E0\u5B50\u5224\u65AD\u662F\u5426\u5E73\u8861\u5E76\u901A\u8FC7\u65CB\u8F6C\u6765\u5B9E\u73B0\u5E73\u8861\uFF0C\u5DE6\u53F3\u5B50\u6811\u6811\u9AD8\u4E0D\u8D85\u8FC71\uFF0C\u548C\u7EA2\u9ED1\u6811\u76F8\u6BD4\uFF0CAVL\u6811\u662F\u9AD8\u5EA6\u5E73\u8861\u7684\u4E8C\u53C9\u6811\uFF0C\u5E73\u8861\u6761\u4EF6\u5FC5\u987B\u6EE1\u8DB3\uFF08\u6240\u6709\u8282\u70B9\u7684\u5DE6\u53F3\u5B50\u6811\u9AD8\u5EA6\u5DEE\u4E0D\u8D85\u8FC71\uFF09\u3002\u4E0D\u7BA1\u6211\u4EEC\u662F\u6267\u884C\u63D2\u5165\u8FD8\u662F\u5220\u9664\u64CD\u4F5C\uFF0C\u53EA\u8981\u4E0D\u6EE1\u8DB3\u4E0A\u9762\u7684\u6761\u4EF6\uFF0C\u5C31\u8981\u901A\u8FC7\u65CB\u8F6C\u6765\u4FDD\u6301\u5E73\u8861\uFF0C\u800C\u7684\u7531\u4E8E\u65CB\u8F6C\u6BD4\u8F83\u8017\u65F6\uFF0C\u7531\u6B64\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053AVL\u6811\u9002\u5408\u7528\u4E8E\u63D2\u5165\u4E0E\u5220\u9664\u6B21\u6570\u6BD4\u8F83\u5C11\uFF0C\u4F46\u67E5\u627E\u591A\u7684\u60C5\u51B5</li><li>\u7EA2\u9ED1\u6811\uFF1A\u4E5F\u662F\u4E00\u79CD\u5E73\u8861\u4E8C\u53C9\u6811\uFF0C\u4F46\u6BCF\u4E2A\u8282\u70B9\u6709\u4E00\u4E2A\u5B58\u50A8\u4F4D\u8868\u793A\u8282\u70B9\u7684\u989C\u8272\uFF0C\u53EF\u4EE5\u662F\u7EA2\u6216\u9ED1\u3002\u901A\u8FC7\u5BF9\u4EFB\u4F55\u4E00\u6761\u4ECE\u6839\u5230\u53F6\u5B50\u7684\u8DEF\u5F84\u4E0A\u5404\u4E2A\u8282\u70B9\u7740\u8272\u7684\u65B9\u5F0F\u7684\u9650\u5236\uFF0C\u7EA2\u9ED1\u6811\u786E\u4FDD\u6CA1\u6709\u4E00\u6761\u8DEF\u5F84\u4F1A\u6BD4\u5176\u5B83\u8DEF\u5F84\u957F\u51FA\u4E24\u500D\uFF0C\u56E0\u6B64\uFF0C\u7EA2\u9ED1\u6811\u662F\u4E00\u79CD\u5F31\u5E73\u8861\u4E8C\u53C9\u6811\uFF08\u7531\u4E8E\u662F\u5F31\u5E73\u8861\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u76F8\u540C\u7684\u8282\u70B9\u60C5\u51B5\u4E0B\uFF0CAVL\u6811\u7684\u9AD8\u5EA6&lt;=\u7EA2\u9ED1\u6811\uFF09\uFF0C\u76F8\u5BF9\u4E8E\u8981\u6C42\u4E25\u683C\u7684AVL\u6811\u6765\u8BF4\uFF0C\u5B83\u7684\u65CB\u8F6C\u6B21\u6570\u5C11\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u641C\u7D22\uFF0C\u63D2\u5165\uFF0C\u5220\u9664\u64CD\u4F5C\u8F83\u591A\u7684\u60C5\u51B5\u4E0B\uFF0C\u7528\u7EA2\u9ED1\u6811\u3002</li></ul><h3 id="\u91CD\u5EFA\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u91CD\u5EFA\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u91CD\u5EFA\u4E8C\u53C9\u6811</h3><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/rebuildBT.png" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">buildTree</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">preorder<span class="token punctuation">,</span> inorder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>preorder<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rootVal <span class="token operator">=</span> preorder<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rootNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>rootVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>preorder<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> rootNode<span class="token punctuation">;</span> 
    <span class="token keyword">const</span> index <span class="token operator">=</span> inorder<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>rootVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootNode<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">buildTree</span><span class="token punctuation">(</span>preorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> inorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rootNode<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">buildTree</span><span class="token punctuation">(</span>preorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> inorder<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> rootNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u53C9\u5806\u4E0E\u5806\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u5806\u4E0E\u5806\u6392\u5E8F" aria-hidden="true">#</a> \u4E8C\u53C9\u5806\u4E0E\u5806\u6392\u5E8F</h2><div class="custom-container tip"><p class="custom-container-title">\u5806</p><ul><li>\u5806\u662F\u4E00\u4E2A\u5B8C\u5168\u4E8C\u53C9\u6811\u3002</li><li>\u5B8C\u5168\u4E8C\u53C9\u6811\uFF1A \u4E8C\u53C9\u6811\u9664\u5F00\u6700\u540E\u4E00\u5C42\uFF0C\u5176\u4ED6\u5C42\u7ED3\u70B9\u6570\u90FD\u8FBE\u5230\u6700\u5927\uFF0C\u6700\u540E\u4E00\u5C42\u7684\u6240\u6709\u7ED3\u70B9\u90FD\u96C6\u4E2D\u5728\u5DE6\u8FB9\uFF08\u5DE6\u8FB9\u7ED3\u70B9\u6392\u5217\u6EE1\u7684\u60C5\u51B5\u4E0B\uFF0C\u53F3\u8FB9\u624D\u80FD\u7F3A\u5931\u7ED3\u70B9\uFF09\u3002</li><li>\u5927\u9876\u5806\uFF1A\u6839\u7ED3\u70B9\u4E3A\u6700\u5927\u503C\uFF0C\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u5927\u4E8E\u6216\u7B49\u4E8E\u5176\u5B69\u5B50\u7ED3\u70B9\u7684\u503C\u3002</li><li>\u5C0F\u9876\u5806\uFF1A\u6839\u7ED3\u70B9\u4E3A\u6700\u5C0F\u503C\uFF0C\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u5C0F\u4E8E\u6216\u7B49\u4E8E\u5176\u5B69\u5B50\u7ED3\u70B9\u7684\u503C\u3002</li><li>\u5806\u7684\u5B58\u50A8\uFF1A \u5806\u7531\u6570\u7EC4\u6765\u5B9E\u73B0\uFF0C\u76F8\u5F53\u4E8E\u5BF9\u4E8C\u53C9\u6811\u505A\u5C42\u5E8F\u904D\u5386\u3002</li></ul></div><h3 id="\u4E8C\u53C9\u5806" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u5806" aria-hidden="true">#</a> \u4E8C\u53C9\u5806</h3><p>\u4E8C\u53C9\u5806\u662F\u4E00\u79CD\u7279\u4FD7\u7684\u4E8C\u53C9\u6811\uFF0C\u4E8C\u53C9\u5806\u662F\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\u4E00\u79CD\u975E\u5E38\u8457\u540D\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u7531\u4E8E\u5B83\u80FD\u9AD8\u6548\u3001\u5FEB\u901F\u5730\u627E\u51FA\u6700\u5927\u503C\u548C\u6700\u5C0F\u503C\uFF0C\u5E38\u88AB\u5E94\u7528\u4E8E\u4F18\u5148\u961F\u5217\u3002\u5B83\u4E5F\u88AB\u7528\u4E8E\u8457\u540D\u7684\u5806\u6392\u5E8F\u7B97\u6CD5\u4E2D\u3002</p><ul><li>\u5B83\u662F\u4E00\u68F5<strong>\u5B8C\u5168\u4E8C\u53C9\u6811</strong>\uFF0C\u8868\u793A\u6811\u7684\u6BCF\u4E00\u5C42\u90FD\u6709\u5DE6\u4FA7\u548C\u53F3\u4FA7\u5B50\u8282\u70B9\uFF08\u9664\u4E86\u6700\u540E\u4E00\u5C42\u7684\u53F6\u8282\u70B9\uFF09\uFF0C\u5E76\u4E14\u6700\u540E\u4E00\u5C42\u7684\u53F6\u8282\u70B9\u5C3D\u53EF\u80FD\u90FD\u662F\u5DE6\u4FA7\u5B50\u8282\u70B9\uFF0C\u8FD9\u53EB\u4F5C\u7ED3\u6784\u7279\u6027\u3002</li><li>\u4E8C\u53C9\u5806\u4E0D\u662F<strong>\u6700\u5C0F\u5806 MinHeap</strong>\u5C31\u662F<strong>\u6700\u5927\u5806 MaxHeap</strong>\u3002\u6700\u5C0F\u5806\u5141\u8BB8\u4F60\u5FEB\u901F\u5BFC\u51FA\u6811\u7684\u6700\u5C0F\u503C\uFF0C\u6700\u5927\u5806\u5141\u8BB8\u4F60\u5FEB\u901F\u5BFC\u51FA\u6811\u7684\u6700\u5927\u503C\u3002\u6240\u6709\u7684\u8282\u70B9\u90FD\u5927\u4E8E\u7B49\u4E8E\uFF08\u6700\u5927\u5806\uFF09\u6216\u5C0F\u4E8E\u7B49\u4E8E\uFF08\u6700\u5C0F\u5806\uFF09\u6BCF\u4E2A\u5B83\u7684\u5B50\u8282\u70B9\u3002\u8FD9\u53EB\u4F5C\u5806\u7279\u6027\u3002</li></ul><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/minHeap.jpeg" alt=""></p><h3 id="\u5806\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5806\u6392\u5E8F" aria-hidden="true">#</a> \u5806\u6392\u5E8F</h3><p>\u4E8C\u53C9\u6811\u505A\u5347\u5E8F\u6392\u5E8F\uFF0C\u603B\u5171\u5206\u4E3A\u4E09\u6B65\uFF1A</p><ol><li>\u5C06\u521D\u59CB\u4E8C\u53C9\u6811\u8F6C\u5316\u4E3A\u5927\u9876\u5806\uFF08heapify\uFF09\uFF08\u5B9E\u8D28\u662F\u4ECE\u7B2C\u4E00\u4E2A\u975E\u53F6\u5B50\u7ED3\u70B9\u5F00\u59CB\uFF0C\u4ECE\u4E0B\u81F3\u4E0A\uFF0C\u4ECE\u53F3\u81F3\u5DE6\uFF0C\u5BF9\u6BCF\u4E00\u4E2A\u975E\u53F6\u5B50\u7ED3\u70B9\u505AshiftDown\u64CD\u4F5C\uFF09\uFF0C\u6B64\u65F6<strong>\u6839\u7ED3\u70B9\u4E3A\u6700\u5927\u503C</strong>\uFF0C\u5C06\u5176\u4E0E\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u4EA4\u6362\u3002</li><li>\u9664\u5F00\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u5C06\u5176\u4F59\u8282\u70B9\u7EC4\u6210\u7684\u65B0\u5806\u8F6C\u5316\u4E3A\u5927\u9876\u5806\uFF08\u5B9E\u8D28\u4E0A\u662F\u5BF9\u6839\u8282\u70B9\u505AshiftDown\u64CD\u4F5C\uFF09\uFF0C\u6B64\u65F6\u6839\u7ED3\u70B9\u4E3A\u6B21\u6700\u5927\u503C\uFF0C\u5C06\u5176\u4E0E\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u4EA4\u6362\u3002</li><li>\u91CD\u590D\u6B65\u9AA42\uFF0C\u76F4\u5230\u5806\u4E2D\u5143\u7D20\u4E2A\u6570\u4E3A1\uFF08\u6216\u5176\u5BF9\u5E94\u6570\u7EC4\u7684\u957F\u5EA6\u4E3A1\uFF09\uFF0C\u6392\u5E8F\u5B8C\u6210\u3002</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4EA4\u6362\u4E24\u4E2A\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">A</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token constant">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token constant">A</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06 i \u7ED3\u70B9\u4EE5\u4E0B\u7684\u5806\u6574\u7406\u4E3A\u5927\u9876\u5806\uFF0C\u6CE8\u610F\u8FD9\u4E00\u6B65\u5B9E\u73B0\u7684\u57FA\u7840\u5B9E\u9645\u4E0A\u662F\uFF1A</span>
<span class="token comment">// \u5047\u8BBE \u7ED3\u70B9 i \u4EE5\u4E0B\u7684\u5B50\u5806\u5DF2\u7ECF\u662F\u4E00\u4E2A\u5927\u9876\u5806\uFF0CshiftDown\u51FD\u6570\u5B9E\u73B0\u7684</span>
<span class="token comment">// \u529F\u80FD\u662F\u5B9E\u9645\u4E0A\u662F\uFF1A\u627E\u5230 \u7ED3\u70B9 i \u5728\u5305\u62EC\u7ED3\u70B9 i \u7684\u5806\u4E2D\u7684\u6B63\u786E\u4F4D\u7F6E\u3002\u540E\u9762</span>
<span class="token comment">// \u5C06\u5199\u4E00\u4E2A for \u5FAA\u73AF\uFF0C\u4ECE\u7B2C\u4E00\u4E2A\u975E\u53F6\u5B50\u7ED3\u70B9\u5F00\u59CB\uFF0C\u5BF9\u6BCF\u4E00\u4E2A\u975E\u53F6\u5B50\u7ED3\u70B9</span>
<span class="token comment">// \u90FD\u6267\u884C shiftDown\u64CD\u4F5C\uFF0C\u6240\u4EE5\u5C31\u6EE1\u8DB3\u4E86\u7ED3\u70B9 i \u4EE5\u4E0B\u7684\u5B50\u5806\u5DF2\u7ECF\u662F\u4E00\u5927</span>
<span class="token comment">//\u9876\u5806</span>
<span class="token keyword">function</span> <span class="token function">shiftDown</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">A</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> length</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u7236\u8282\u70B9</span>
<span class="token comment">// j&lt;length \u7684\u76EE\u7684\u662F\u5BF9\u7ED3\u70B9 i \u4EE5\u4E0B\u7684\u7ED3\u70B9\u5168\u90E8\u505A\u987A\u5E8F\u8C03\u6574</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>length<span class="token punctuation">;</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    temp <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u5C06 A[i] \u53D6\u51FA\uFF0C\u6574\u4E2A\u8FC7\u7A0B\u76F8\u5F53\u4E8E\u627E\u5230 A[i] \u5E94\u5904\u4E8E\u7684\u4F4D\u7F6E</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span> length <span class="token operator">&amp;&amp;</span> <span class="token constant">A</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token constant">A</span><span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
      j<span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">// \u627E\u5230\u4E24\u4E2A\u5B69\u5B50\u4E2D\u8F83\u5927\u7684\u4E00\u4E2A\uFF0C\u518D\u4E0E\u7236\u8282\u70B9\u6BD4\u8F83</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> <span class="token constant">A</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">swap</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C\u7236\u8282\u70B9\u5C0F\u4E8E\u5B50\u8282\u70B9:\u4EA4\u6362\uFF1B\u5426\u5219\u8DF3\u51FA</span>
      i <span class="token operator">=</span> j<span class="token punctuation">;</span>  <span class="token comment">// \u4EA4\u6362\u540E\uFF0Ctemp \u7684\u4E0B\u6807\u53D8\u4E3A j</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5806\u6392\u5E8F</span>
<span class="token keyword">function</span> <span class="token function">heapSort</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">A</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521D\u59CB\u5316\u5927\u9876\u5806\uFF0C\u4ECE\u7B2C\u4E00\u4E2A\u975E\u53F6\u5B50\u7ED3\u70B9\u5F00\u59CB</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">shiftDown</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6392\u5E8F\uFF0C\u6BCF\u4E00\u6B21for\u5FAA\u73AF\u627E\u51FA\u4E00\u4E2A\u5F53\u524D\u6700\u5927\u503C\uFF0C\u6570\u7EC4\u957F\u5EA6\u51CF\u4E00</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">swap</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6839\u8282\u70B9\u4E0E\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u4EA4\u6362</span>
    <span class="token function">shiftDown</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u6839\u8282\u70B9\u5F00\u59CB\u8C03\u6574\uFF0C\u5E76\u4E14\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u5DF2\u7ECF\u4E3A\u5F53</span>
                         <span class="token comment">// \u524D\u6700\u5927\u503C\uFF0C\u4E0D\u9700\u8981\u518D\u53C2\u4E0E\u6BD4\u8F83\uFF0C\u6240\u4EE5\u7B2C\u4E09\u4E2A\u53C2\u6570</span>
                         <span class="token comment">// \u4E3A i\uFF0C\u5373\u6BD4\u8F83\u5230\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\u524D\u4E00\u4E2A\u5373\u53EF</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> Arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">heapSort</span><span class="token punctuation">(</span>Arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>Arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u590D\u6742\u5EA6\u5206\u6790\uFF1AadjustHeap \u51FD\u6570\u4E2D\u76F8\u5F53\u4E8E\u5806\u7684\u6BCF\u4E00\u5C42\u53EA\u904D\u5386\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u56E0\u4E3A \u5177\u6709n\u4E2A\u7ED3\u70B9\u7684\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6\u4E3A[log2n]+1\uFF0C\u6240\u4EE5 shiftDown\u7684\u590D\u6742\u5EA6\u4E3A O(logn)\uFF0C\u800C\u5916\u5C42\u5FAA\u73AF\u5171\u6709 f(n) \u6B21\uFF0C\u6240\u4EE5\u6700\u7EC8\u7684\u590D\u6742\u5EA6\u4E3A O(nlogn)\u3002</p><h2 id="dfs\u4E0Ebfs" tabindex="-1"><a class="header-anchor" href="#dfs\u4E0Ebfs" aria-hidden="true">#</a> DFS\u4E0EBFS</h2><p>\u{1F4D7} \u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF08Depth First Search, \u7B80\u79F0 DFS\uFF09 \u4E0E\u5E7F\u5EA6\u4F18\u5148\u904D\u5386\uFF08Breath First Search\uFF09\u662F\u56FE\u8BBA\u4E2D\u4E24\u79CD\u975E\u5E38\u91CD\u8981\u7684\u7B97\u6CD5\uFF0C\u751F\u4EA7\u4E0A\u5E7F\u6CDB\u7528\u4E8E\u62D3\u6251\u6392\u5E8F\uFF0C\u5BFB\u8DEF\uFF08\u8D70\u8FF7\u5BAB\uFF09\uFF0C\u641C\u7D22\u5F15\u64CE\uFF0C\u722C\u866B\u7B49\u3002</p><h3 id="\u6DF1\u5EA6\u4F18\u5148\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u5EA6\u4F18\u5148\u904D\u5386" aria-hidden="true">#</a> \u6DF1\u5EA6\u4F18\u5148\u904D\u5386</h3><p>\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u4E3B\u8981\u601D\u8DEF\u662F\u4ECE\u56FE\u4E2D\u4E00\u4E2A\u672A\u8BBF\u95EE\u7684\u9876\u70B9 V \u5F00\u59CB\uFF0C\u6CBF\u7740\u4E00\u6761\u8DEF\u4E00\u76F4\u8D70\u5230\u5E95\uFF0C\u7136\u540E\u4ECE\u8FD9\u6761\u8DEF\u5C3D\u5934\u7684\u8282\u70B9\u56DE\u9000\u5230\u4E0A\u4E00\u4E2A\u8282\u70B9\uFF0C\u518D\u4ECE\u53E6\u4E00\u6761\u8DEF\u5F00\u59CB\u8D70\u5230\u5E95...\uFF0C\u4E0D\u65AD\u9012\u5F52\u91CD\u590D\u6B64\u8FC7\u7A0B\uFF0C\u76F4\u5230\u6240\u6709\u7684\u9876\u70B9\u90FD\u904D\u5386\u5B8C\u6210\u3002</p><p>\u8FD9\u5C31\u662F\u6811\u7684<strong>\u524D\u5E8F\u904D\u5386</strong>,\u5B9E\u9645\u4E0A\u4E0D\u7BA1\u662F\u524D\u5E8F\u904D\u5386\uFF0C\u8FD8\u662F\u4E2D\u5E8F\u904D\u5386\uFF0C\u4EA6\u6216\u662F\u540E\u5E8F\u904D\u5386\uFF0C\u90FD\u5C5E\u4E8E<strong>\u6DF1\u5EA6\u4F18\u5148\u904D\u5386</strong>\u3002</p><p><strong>1\u3001\u9012\u5F52\u5B9E\u73B0</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">preOrderTraverse</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preOrderTraverseNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2\u3001\u904D\u5386\u5B9E\u73B0</strong></p><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/DFS.png" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dfsWithStack</span><span class="token punctuation">(</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5148\u628A\u6839\u8282\u70B9\u538B\u6808</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> treeNode <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u8282\u70B9</span>
        <span class="token function">process</span><span class="token punctuation">(</span>treeNode<span class="token punctuation">)</span>

        <span class="token comment">// \u5148\u538B\u53F3\u8282\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>treeNode<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>treeNode<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u518D\u538B\u5DE6\u8282\u70B9</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>treeNode<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>treeNode<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E7F\u5EA6\u4F18\u5148\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5E7F\u5EA6\u4F18\u5148\u904D\u5386" aria-hidden="true">#</a> \u5E7F\u5EA6\u4F18\u5148\u904D\u5386</h3><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/BFS.png" alt=""></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;value = &quot;</span> <span class="token operator">+</span> node<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Node</span> left <span class="token operator">=</span> node<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Node</span> right <span class="token operator">=</span> node<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><p>\u{1F4D7} \u52A8\u6001\u89C4\u5212\u8DDF\u5E26\u5907\u5FD8\u5F55\u7684\u9012\u5F52\u89E3\u6CD5\u57FA\u672C\u601D\u60F3\u662F\u4E00\u81F4\u7684\uFF0C\u90FD\u662F\u51CF\u5C11\u91CD\u590D\u8BA1\u7B97\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E5F\u90FD\u662F\u5DEE\u4E0D\u591A\u3002\u4F46\u662F\u5462\uFF1A</p><ul><li>\u5E26\u5907\u5FD8\u5F55\u7684\u9012\u5F52\uFF0C\u662F\u4ECEf(10)\u5F80f(1\uFF09\u65B9\u5411\u5EF6\u4F38\u6C42\u89E3\u7684\uFF0C\u6240\u4EE5\u4E5F\u79F0\u4E3A<strong>\u81EA\u9876\u5411\u4E0B</strong>\u7684\u89E3\u6CD5\u3002</li><li>\u52A8\u6001\u89C4\u5212\u4ECE\u8F83\u5C0F\u95EE\u9898\u7684\u89E3\uFF0C\u7531\u4EA4\u53E0\u6027\u8D28\uFF0C\u9010\u6B65\u51B3\u7B56\u51FA\u8F83\u5927\u95EE\u9898\u7684\u89E3\uFF0C\u5B83\u662F\u4ECEf(1)\u5F80f(10\uFF09\u65B9\u5411\uFF0C\u5F80\u4E0A\u63A8\u6C42\u89E3\uFF0C\u6240\u4EE5\u79F0\u4E3A<strong>\u81EA\u5E95\u5411\u4E0A</strong>\u7684\u89E3\u6CD5\u3002</li></ul><p>\u52A8\u6001\u89C4\u5212\u6709\u51E0\u4E2A\u5178\u578B\u7279\u5F81\uFF0C<strong>\u6700\u4F18\u5B50\u7ED3\u6784\u3001\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\u3001\u8FB9\u754C\u3001\u91CD\u53E0\u5B50\u95EE\u9898</strong>\u3002\u5728\u9752\u86D9\u8DF3\u9636\u6216\u6590\u6CE2\u90A3\u5951\u6570\u95EE\u9898\u4E2D\uFF1A</p><ul><li>f(n-1)\u548Cf(n-2) \u79F0\u4E3A f(n) \u7684\u6700\u4F18\u5B50\u7ED3\u6784</li><li>f(n)= f\uFF08n-1\uFF09+f\uFF08n-2\uFF09\u5C31\u79F0\u4E3A\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B</li><li>f(1) = 1, f(2) = 2 \u5C31\u662F\u8FB9\u754C\u5566</li><li>\u6BD4\u5982f(10)= f(9)+f(8),f(9) = f(8) + f(7) ,f(8)\u5C31\u662F\u91CD\u53E0\u5B50\u95EE\u9898\u3002</li></ul><h3 id="\u8BB0\u5FC6\u5316\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u8BB0\u5FC6\u5316\u9012\u5F52" aria-hidden="true">#</a> \u8BB0\u5FC6\u5316\u9012\u5F52</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>

<span class="token keyword">var</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">1000000007</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span><span class="token punctuation">(</span>cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> result
    <span class="token keyword">return</span> cache<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u52A8\u6001\u89C4\u5212-1" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212-1" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u8FB9\u754C</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u4F18\u5B50\u7ED3\u6784 f(n-1)\u548Cf(n-2)</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">1000000007</span><span class="token punctuation">;</span> <span class="token comment">// \u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B f(n)= f\uFF08n-1\uFF09+f\uFF08n-2\uFF09</span>
        b <span class="token operator">=</span> a<span class="token punctuation">;</span>
        a <span class="token operator">=</span> result
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6392\u5E8F\u548C\u641C\u7D22\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u548C\u641C\u7D22\u7B97\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u548C\u641C\u7D22\u7B97\u6CD5</h2><h3 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h3><div class="custom-container tip"><p class="custom-container-title">\u5192\u6CE1\u6392\u5E8F</p><ul><li>\u5192\u6CE1\u6392\u5E8F\u662F\u6BD4\u8F83\u76F8\u90BB\u7684\u4E24\u4E2A\u9879\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u6BD4\u7B2C\u4E8C\u4E2A\u5927\uFF0C\u5219\u4EA4\u6362\u5B83\u4EEC\u3002</li><li>\u5143\u7D20\u9879\u5411\u4E0A\u79FB\u52A8\u81F3\u6B63\u786E\u7684\u987A\u5E8F\uFF0C\u5C31\u597D\u50CF\u6C14\u6CE1\u5347\u81F3\u8868\u9762\u4E00\u6837\uFF0C\u5192\u6CE1\u6392\u5E8F\u56E0\u6B64\u800C\u5F97\u540D\u3002</li><li>\u5192\u6CE1\u6392\u5E8F\u53EF\u80FD\u662F\u6240\u6709\u6392\u5E8F\u7B97\u6CD5\u4E2D\u6700\u7B80\u5355\u7684\uFF0C\u4F46\u4ECE\u8FD0\u884C\u65F6\u95F4\u7684\u89D2\u5EA6\u800C\u8A00\uFF0C\u5192\u6CE1\u6392\u5E8F\u662F\u6700\u5DEE\u7684\u4E00\u4E2A\u3002</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toggleItem</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> index1<span class="token punctuation">,</span> index2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>array<span class="token punctuation">[</span>index1<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>index2<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>array<span class="token punctuation">[</span>index2<span class="token punctuation">]</span><span class="token punctuation">,</span> array<span class="token punctuation">[</span>index1<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> arr
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6BCF\u4E00\u6B21\u5916\u5FAA\u73AF\u4E4B\u540E\uFF0C\u90FD\u80FD\u786E\u5B9A\u4E00\u4E2A\u6700\u5927\u503C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6BCF\u6B21\u5185\u5FAA\u73AF\uFF0C\u95F4\u9694\u5BF9\u6BD4\u627E\u5230\u6700\u5927\u7684\u503C\uFF0C\u653E\u5230\u540E\u9762</span>
            <span class="token comment">// \u5982\u679C\u524D\u8005\u6BD4\u540E\u8005\u5927\uFF0C\u8C03\u6362\u4F4D\u7F6E\u8FBE\u5230\u4ECE\u5C0F\u5230\u5927\u7684\u6548\u679C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">toggleItem</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h3><div class="custom-container tip"><p class="custom-container-title">\u9009\u62E9\u6392\u5E8F</p><ul><li>\u9009\u62E9\u6392\u5E8F\u7B97\u6CD5\u662F\u4E00\u79CD\u539F\u5740\u6BD4\u8F83\u6392\u5E8F\u7B97\u6CD5\u3002</li><li>\u9009\u62E9\u6392\u5E8F\u5927\u81F4\u7684\u601D\u8DEF\u662F\u627E\u5230\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u6700\u5C0F\u503C\u5E76\u5C06\u5176\u653E\u7F6E\u5728\u7B2C\u4E00\u4F4D\uFF0C\u63A5\u7740\u627E\u5230\u7B2C\u4E8C\u5C0F\u7684\u503C\u5C06\u5176\u653E\u5728\u7B2C\u4E8C\u4F4D\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> arr
    <span class="token keyword">let</span> minIndex<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token comment">// \u6BCF\u6B21\u5185\u5FAA\u73AF\uFF0C\u904D\u5386\u5BF9\u6BD4\u627E\u5230\u6700\u5C0F\u503C\u7684\u7D22\u5F15\uFF0C\u6240\u4EE5\u6BCF\u6B21\u90FD\u80FD\u786E\u5B9A\u4E00\u4E2A\u6700\u5C0F\u503C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                minIndex <span class="token operator">=</span> j
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u627E\u5230\u6BD4\u5F53\u524D\u5F00\u59CB\u6570\u503C\u66F4\u5C0F\u7684\u7D22\u5F15\uFF0C\u4EA4\u6362\u4F4D\u7F6E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>minIndex <span class="token operator">!==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">toggleItem</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> minIndex<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h3><p>\u5982\u679C\u8981\u5C06<code>[1,2,3,0]</code>\u6570\u7EC4\u5F53\u4E2D\u76840\u79FB\u52A8\u5230\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u6211\u4EEC\u9700\u8981\u8BBE\u7F6E\u4E00\u4E2A\u53D8\u91CF<code>temp</code>\u4FDD\u5B58<code>arr[3]</code>\uFF1B</p><p>\u7136\u540E\u4ECE\u53F3\u5411\u5DE6\u904D\u5386\u5C06\u6240\u6709\u6570\u7EC4\u9879\u7684\u7D22\u5F15\u53F3\u79FB\u4E00\u4F4D\uFF0C\u6700\u540E\u628A<code>0temp\u8D4B\u503C\u7ED9</code>arr[0]\`\u5373\u53EF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 0</span>
<span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    i<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [0, 1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63D2\u5165\u6392\u5E8F\u6BCF\u6B21\u6392\u4E00\u4E2A\u6570\u7EC4\u9879\uFF0C\u4EE5\u6B64\u65B9\u5F0F\u6784\u5EFA\u6700\u540E\u7684\u6392\u5E8F\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
        length
    <span class="token punctuation">}</span> <span class="token operator">=</span> array
    <span class="token keyword">let</span> temp<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>
        temp <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        array<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F</strong>\uFF1A\u5728\u6392\u5E8F\u5C0F\u578B\u6570\u7EC4\u65F6\uFF0C\u6B64\u7B97\u6CD5\u6BD4\u9009\u62E9\u6392\u5E8F\u548C\u5192\u6CE1\u6392\u5E8F\u6027\u80FD\u8981\u597D</p><h3 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h3><p>\u{1F4D7} \u5F52\u5E76\u6392\u5E8F\u662F\u7B2C\u4E00\u4E2A\u53EF\u4EE5\u5B9E\u9645\u4F7F\u7528\u7684\u6392\u5E8F\u7B97\u6CD5\uFF0C\u6211\u4EEC\u4E4B\u524D\u7684\u4E09\u79CD\u7B97\u6CD5\u6027\u80FD\u4E0D\u662F\u7279\u522B\u7684\u597D\uFF0C\u4F46\u5F52\u5E76\u6392\u5E8F\u6027\u80FD\u4E0D\u9519\uFF0C\u5728<code>JavaScript</code>\u4E2D\uFF0C<code>Array.prototype.sort()</code>\u65B9\u6CD5\uFF0C<code>ECMAScript</code>\u5E76\u6CA1\u6709\u5B9A\u4E49\u4F7F\u7528\u54EA\u79CD\u6392\u5E8F\u7B97\u6CD5\uFF0C\u800C\u662F\u4EA4\u7ED9\u6D4F\u89C8\u5668\u5382\u5546\u81EA\u5DF1\u53BB\u5B9E\u73B0\uFF0C\u800C\u5BF9\u4E8E\u8C37\u6B4C<code>V8\u5F15\u64CE</code>\uFF0C\u5176\u4F7F\u7528\u4E86\u5FEB\u901F\u6392\u5E8F\u7684\u53D8\u4F53\uFF1B\u5728<code>Firefox</code>\u6D4F\u89C8\u5668\u4E2D\uFF0C\u5219\u662F\u4F7F\u7528\u4E86\u5F52\u5E76\u6392\u5E8F\u3002</p><h4 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h4><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/mergeSort.png" alt=""></p><p>\u9996\u5148\uFF0C\u5047\u8BBE\u6211\u4EEC\u6709\u4E24\u4E2A\u5DF2\u7ECF\u662F\u6392\u5E8F\u8FC7\u7684\u6570\u7EC4\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u5C06\u8FD9\u4E24\u4E2A\u6570\u7EC4\u5408\u5E76\u6210\u4E00\u4E2A\u7684<code>merge</code>\u65B9\u6CD5:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9700\u8981\u4E00\u4E2A\u989D\u5916\u7684\u6570\u7EC4\u7A7A\u95F4\u4FDD\u5B58\u7ED3\u679C</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F53left\u548Cright\u90FD\u8FD8\u6709\u672A\u904D\u5386\u9879\u65F6</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> left<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> right<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u627E\u5230left\u548Cright\u5F53\u4E2D\u7684\u6700\u5C0F\u4E00\u9879push\u5230result,\u7136\u540E\u7D22\u5F15\u81EA\u589E1</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> right<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">?</span> right<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">:</span> left<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// left\u5982\u679C\u5DF2\u7ECF\u904D\u5386\u5B8C, \u5C06right\u8FDE\u63A5\u5230result,\u53CD\u4E4B\u5C06left\u7684\u5269\u4F59\u9879\u8FDE\u63A5\u5230result</span>
    <span class="token comment">// result.concat(i &lt; left.length ? left.slice(i) : right.slice(j))</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>i <span class="token operator">==</span> left<span class="token punctuation">.</span>length <span class="token operator">?</span> right<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">:</span> left<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [0, 1, 2, 4]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [0, 2, 3, 4, 5]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [0, 1] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F52\u5E76\u6392\u5E8F\u662F\u4E00\u79CD\u5206\u800C\u6CBB\u4E4B\u7684\u7B97\u6CD5\uFF0C\u5176\u601D\u60F3\u662F\u5C06\u539F\u59CB\u6570\u7EC4\u5207\u5206\u4E3A\u8F83\u5C0F\u7684\u6570\u7EC4\uFF0C\u76F4\u5230\u6BCF\u4E2A\u5C0F\u6570\u7EC4\u53EA\u6709\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u63A5\u7740\u5C06\u5C0F\u6570\u7EC4\u5F52\u5E76\u6210\u8F83\u5927\u7684\u6570\u7EC4\uFF0C\u76F4\u5230\u6700\u540E\u53EA\u6709\u4E00\u4E2A\u6392\u5E8F\u5B8C\u6BD5\u7684\u5927\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> length <span class="token punctuation">}</span> <span class="token operator">=</span> array
        <span class="token keyword">const</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> middle<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>middle<span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">)</span>
        array <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6, 7, 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h4><ul><li>\u5F52\u5E76\u6392\u5E8F\u662F<strong>\u7A33\u5B9A</strong>\u6392\u5E8F\uFF0C\u5B83\u4E5F\u662F\u4E00\u79CD\u5341\u5206\u9AD8\u6548\u7684\u6392\u5E8F\uFF0C\u80FD\u5229\u7528\u5B8C\u5168\u4E8C\u53C9\u6811\u7279\u6027\u7684\u6392\u5E8F\u4E00\u822C\u6027\u80FD\u90FD\u4E0D\u4F1A\u592A\u5DEE\u3002\u4ECE\u4E0A\u6587\u7684\u56FE\u4E2D\u53EF\u770B\u51FA\uFF0C\u6BCF\u6B21\u5408\u5E76\u64CD\u4F5C\u7684\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)\uFF0C\u800C\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u6DF1\u5EA6\u4E3A|log2n|\u3002\u603B\u7684\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(nlogn)\u3002\u800C\u4E14\uFF0C\u5F52\u5E76\u6392\u5E8F\u7684\u6700\u597D\uFF0C\u6700\u574F\uFF0C\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u5747\u4E3AO(nlogn)\u3002</li><li>\u5F52\u5E76\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u5C31\u662F\u90A3\u4E2A\u4E34\u65F6\u7684\u6570\u7EC4\u548C\u9012\u5F52\u65F6\u538B\u5165\u6808\u7684\u6570\u636E\u5360\u7528\u7684\u7A7A\u95F4\uFF1An + logn\uFF1B\u6240\u4EE5\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A: O(n)</li></ul><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h3><p>\u{1F4D7} \u5FEB\u901F\u6392\u5E8F\u4E5F\u8BB8\u662F\u6700\u5E38\u7528\u7684\u6392\u5E8F\u7B97\u6CD5\u4E86\u3002\u5B83\u7684\u590D\u6742\u5EA6\u4E3AO(nlog(n))\uFF0C\u4E14\u6027\u80FD\u901A\u5E38\u6BD4\u5176\u4ED6\u590D\u6742\u5EA6\u4E3AO(nlog(n))\u7684\u6392\u5E8F\u7B97\u6CD5\u8981\u597D\u3002</p><p>\u548C\u5F52\u5E76\u6392\u5E8F\u4E00\u6837\uFF0C\u5FEB\u901F\u6392\u5E8F\u4E5F\u4F7F\u7528<strong>\u5206\u800C\u6CBB\u4E4B</strong>\u7684\u65B9\u6CD5\uFF0C\u5C06\u539F\u59CB\u6570\u7EC4\u5206\u4E3A\u8F83\u5C0F\u7684\u6570\u7EC4\uFF08\u4F46\u5B83\u6CA1\u6709\u50CF\u5F52\u5E76\u6392\u5E8F\u90A3\u6837\u5C06\u5B83\u4EEC\u5206\u5272\u5F00\uFF09\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u5FEB\u901F\u6392\u5E8F\u7684\u601D\u60F3\u5F88\u7B80\u5355\uFF0C\u6574\u4E2A\u6392\u5E8F\u8FC7\u7A0B\u53EA\u9700\u8981\u4E09\u6B65\uFF1A</p><ul><li>\u5728\u6570\u636E\u96C6\u4E4B\u4E2D\uFF0C\u9009\u62E9\u4E00\u4E2A\u5143\u7D20\u4F5C\u4E3A&quot;\u57FA\u51C6&quot;\uFF08pivot\uFF09\u3002</li><li>\u6240\u6709\u5C0F\u4E8E&quot;\u57FA\u51C6&quot;\u7684\u5143\u7D20\uFF0C\u90FD\u79FB\u5230&quot;\u57FA\u51C6&quot;\u7684\u5DE6\u8FB9\uFF1B\u6240\u6709\u5927\u4E8E&quot;\u57FA\u51C6&quot;\u7684\u5143\u7D20\uFF0C\u90FD\u79FB\u5230&quot;\u57FA\u51C6&quot;\u7684\u53F3\u8FB9\u3002</li><li>\u5BF9&quot;\u57FA\u51C6&quot;\u5DE6\u8FB9\u548C\u53F3\u8FB9\u7684\u4E24\u4E2A\u5B50\u96C6\uFF0C\u4E0D\u65AD\u91CD\u590D\u7B2C\u4E00\u6B65\u548C\u7B2C\u4E8C\u6B65\uFF0C\u76F4\u5230\u6240\u6709\u5B50\u96C6\u53EA\u5269\u4E0B\u4E00\u4E2A\u5143\u7D20\u4E3A\u6B62\u3002</li></ul></div><h4 id="\u57FA\u672C\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u5B9E\u73B0" aria-hidden="true">#</a> \u57FA\u672C\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
  <span class="token keyword">const</span> mid <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
      right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u{1F41B} \u9700\u5728\u539F\u6570\u7EC4\u5F53\u4E2D\u79FB\u9664\u4E2D\u503C\uFF0C\u5426\u5219\u9012\u5F52\u4F1A\u6808\u6EA2\u51FA</p><p>[6, 3, 5] \u5982\u679C\u4E0D\u79FB\u9664\u4E2D\u503C3\uFF0C\u4F1A\u5168push\u5728right\uFF0C\u9020\u6210\u6B7B\u5FAA\u73AF</p><p>[3, 5] \u5982\u679C\u4E0D\u79FB\u9664\u4E2D\u503C5\uFF0C\u4F1A\u5168push\u5728left\uFF0C\u9020\u6210\u6B7B\u5FAA\u73AF</p></blockquote><h4 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h4><p>\u4F7F\u7528\u6570\u7EC4\u9996\u9879\u4F5C\u4E3A\u57FA\u51C6\uFF0C\u5DE6\u6307\u9488\u5BFB\u627E\u6BD4\u57FA\u51C6\u5927\u7684\uFF0C\u53F3\u6307\u9488\u5BFB\u627E\u6BD4\u57FA\u51C6\u5C0F\u7684\uFF0C\u4EA4\u6362\u4F4D\u7F6E</p><p>\u5F53\u5DE6\u53F3\u6307\u9488\u91CD\u5408\uFF0C\u5373\u4E00\u6B21\u904D\u5386\u5B8C\uFF0C\u4EA4\u6362\u57FA\u51C6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> begin<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>begin <span class="token operator">&gt;=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>begin<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> begin<span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> end<span class="token punctuation">;</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          right<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>right <span class="token operator">&gt;</span> left <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          left<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>begin<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>begin<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> begin<span class="token punctuation">,</span> right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BA1\u6570\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u6392\u5E8F" aria-hidden="true">#</a> \u8BA1\u6570\u6392\u5E8F</h3><p>\u{1F4D7} \u8BA1\u6570\u6392\u5E8F\u662F\u6211\u4EEC\u5B66\u5230\u7684\u7B2C\u4E00\u4E2A<strong>\u5206\u5E03\u5F0F</strong>\u6392\u5E8F\uFF0C\u5206\u5E03\u5F0F\u6392\u5E8F\u4F7F\u7528\u5DF2\u7EC4\u7EC7\u597D\u7684\u8F85\u52A9\u6570\u636E\u7ED3\u6784\uFF0C\u7136\u540E\u8FDB\u884C\u5408\u5E76\uFF0C\u5F97\u5230\u6392\u597D\u5E8F\u7684\u6570\u7EC4\u3002\u8BA1\u6570\u6392\u5E8F\u4F7F\u7528\u4E00\u4E2A\u7528\u6765\u5B58\u50A8\u6BCF\u4E2A\u5143\u7D20\u5728\u539F\u59CB\u6570\u7EC4\u4E2D\u51FA\u73B0\u6B21\u6570\u7684\u4E34\u65F6\u6570\u7EC4\uFF0C\u5728\u6240\u6709\u5143\u7D20\u90FD\u8BA1\u6570\u5B8C\u5B8C\u6210\u540E\uFF0C\u4E34\u65F6\u6570\u7EC4\u5DF2\u6392\u597D\u5E8F\u5E76\u53EF\u8FED\u4EE3\u5DF2\u6784\u5EFA\u6392\u5E8F\u540E\u7684\u7ED3\u679C\u6570\u7EC4\u3002</p><p>\u8BA1\u6570\u6392\u5E8F\u662F\u4E00\u79CD\u7528\u6765<strong>\u6392\u5E8F\u6574\u6570</strong>\u4F18\u79C0\u7684\u7B97\u6CD5\uFF0C\u5B83\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u975E\u5E38\u7B80\u5355\uFF0C\u4F46\u5176\u989D\u5916\u5F15\u5165\u4E86\u8F85\u52A9\u6570\u636E\u7ED3\u6784\u4ECE\u800C\u9700\u8981<strong>\u66F4\u591A\u7684\u5185\u5B58\u7A7A\u95F4</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">countingSort</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> array
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> maxValue <span class="token operator">=</span> <span class="token function">findMaxValue</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
    <span class="token keyword">const</span> counts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>maxValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    array<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>counts<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            counts<span class="token punctuation">[</span>item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
        counts<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token operator">++</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> sortIndex <span class="token operator">=</span> <span class="token number">0</span>
    counts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>item <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            array<span class="token punctuation">[</span>sortIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> index
            item<span class="token operator">--</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">findMaxValue</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> max <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            max <span class="token operator">=</span> array<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> max
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">countingSort</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u987A\u5E8F\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u641C\u7D22" aria-hidden="true">#</a> \u987A\u5E8F\u641C\u7D22</h3><p>\u{1F4D7} \u987A\u5E8F\u641C\u7D22(\u7EBF\u6027\u641C\u7D22)\u662F\u6700\u57FA\u672C\u7684\u641C\u7D22\u7B97\u6CD5\uFF0C\u5B83\u7684\u673A\u5236\u662F\uFF0C\u5C06\u6BCF\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u5143\u7D20\u548C\u6211\u4EEC\u8981\u627E\u7684\u5143\u7D20\u505A\u6BD4\u8F83\uFF0C\u4E00\u76F4\u5230\u627E\u5230\u4F4D\u7F6E\u3002\u987A\u5E8F\u641C\u7D22\u662F\u6700\u4F4E\u6548\u7684\u4E00\u79CD\u641C\u7D22\u7B97\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sequentSearch</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> index
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/sequentSearch.png" alt=""></p><h3 id="\u4E8C\u5206\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206\u641C\u7D22" aria-hidden="true">#</a> \u4E8C\u5206\u641C\u7D22</h3><p>\u{1F4D7} \u4E8C\u5206\u641C\u7D22\u7B97\u6CD5\u7684\u539F\u7406\u548C\u731C\u6570\u5B57\u6E38\u620F\u7C7B\u4F3C\uFF0C\u5047\u8BBE\u67091-100\u7684\u6570\uFF0C\u4E00\u4E2A\u4EBA\u731C\uFF0C\u53E6\u4E00\u4E2A\u4EBA\u53EA\u9700\u8981\u56DE\u7B54\u9AD8\u4E86\u8FD8\u662F\u4F4E\u4E86\uFF0C\u4E00\u76F4\u5230\u627E\u5230\u8FD9\u4E2A\u6570\u4F4D\u7F6E\u3002</p><p>\u4E8C\u5206\u641C\u7D22\u7B97\u6CD5\u5BF9\u6570\u636E\u7ED3\u6784\u6709\u4E00\u5B9A\u7684\u8981\u6C42\uFF0C\u5B83\u9996\u5148\u8981\u6C42\u6570\u636E\u7ED3\u6784\u5DF2\u7ECF\u662F<strong>\u6392\u597D\u5E8F</strong>\u7684\uFF0C\u5176\u6B21\u5B83\u8FD8\u8981\u9075\u5B88\u5982\u4E0B\u7684\u89C4\u5219\uFF1A</p><div class="custom-container tip"><p class="custom-container-title">\u4E8C\u5206\u641C\u7D22</p><ol><li><p>\u9996\u5148\u9009\u62E9\u6570\u7EC4\u7684\u4E2D\u95F4\u503C\u3002</p></li><li><p>\u5982\u679C\u9009\u4E2D\u7684\u503C\u662F\u5F85\u641C\u7D22\u7684\u503C\uFF0C\u90A3\u4E48\u505C\u6B62\u641C\u7D22\u3002</p></li><li><p>\u5982\u679C\u5F85\u641C\u7D22\u7684\u503C\u6BD4\u9009\u4E2D\u7684\u503C\u8981\u5C0F\uFF0C\u5219\u8FD4\u56DE\u6B65\u9AA41\u5E76\u5728\u9009\u4E2D\u503C\u5DE6\u8FB9\u7684\u5B50\u6570\u7EC4\u4E2D\u67E5\u627E\u3002</p></li><li><p>\u5982\u679C\u5F85\u641C\u7D22\u7684\u503C\u6BD4\u9009\u4E2D\u7684\u503C\u8981\u5927\uFF0C\u5219\u8FD4\u56DE\u6B65\u9AA41\u5E76\u5728\u9009\u4E2D\u503C\u7684\u53F3\u8FB9\u7684\u5B50\u6570\u7EC4\u4E2D\u67E5\u627E\u3002</p></li></ol></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">binarySearch</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> low <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> high <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>low <span class="token operator">+</span> high<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> element <span class="token operator">=</span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u5206\u6790\uFF1A\u4E3A\u4E86\u8FDB\u4E00\u6B65\u7B80\u5355\u5316\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86\u5185\u7F6E\u7684<code>Array.prototype.sort()</code>\u65B9\u6CD5\u6765\u8FDB\u884C\u6392\u5E8F\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6211\u4EEC\u4E4B\u524D\u5B66\u5230\u7684\u4EFB\u4F55\u6392\u5E8F\u7B97\u6CD5\u6765\u66FF\u6362\u3002</p><p>\u4EE5\u4E0B\u662F\u4E8C\u5206\u641C\u7D22\u7B97\u6CD5\u7684\u641C\u7D22\u793A\u610F\u56FE\uFF1A</p><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/algorithm/binarySearch.png" alt=""></p><h3 id="\u5185\u63D2\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#\u5185\u63D2\u641C\u7D22" aria-hidden="true">#</a> \u5185\u63D2\u641C\u7D22</h3><p>\u{1F516} \u5185\u63D2\u641C\u7D22\uFF08\u63D2\u503C\u67E5\u627E\uFF09\u662F\u6539\u826F\u7248\u7684\u4E8C\u5206\u641C\u7D22\u3002\u4E8C\u5206\u641C\u7D22\u603B\u662F\u57FA\u4E8E\u4E2D\u95F4\u4F4D\u7F6E\u4E0A\u7684\u503C\u4E3A\u53C2\u7167\u7269\uFF0C\u800C\u5185\u63D2\u641C\u7D22\u4F1A\u9009\u62E9\u63A5\u8FD1\u67E5\u627E\u7684\u503C\u4F5C\u4E3A\u53C2\u7167\u7269\u3002</p><p>\u5373\u901A\u8FC7\u4E00\u4E2A\u8BA1\u7B97\u540E\u7684\u6BD4\u4F8B\u503C\u83B7\u5F97\u53C2\u7167\u7684\u4E0B\u6807\uFF0C\u8FD9\u4E2A\u503C\u76F8\u6BD4\u4E8C\u5206\u641C\u7D22\u7684\u4E2D\u95F4\u503C\uFF0C\u4E00\u822C\u4F1A\u66F4\u63A5\u8FD1\u6211\u4EEC\u8981\u67E5\u627E\u7684\u503C\uFF0C\u4ECE\u800C\u51CF\u5C11\u4E86\u641C\u7D22\u7684\u65F6\u95F4\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><ol><li>\u9009\u62E9\u671F\u671B\u6BD4\u4F8B delta = (\u9009\u62E9\u7684\u503C-\u6700\u5C0F\u503C)/(\u6700\u5927\u503C-\u6700\u5C0F\u503C)</li><li>\u53C2\u8003\u4E0B\u6807 position = \u6700\u5C0F\u503C + Math.floort((\u6700\u5927\u503C-\u6700\u5C0F\u503C) * delta )</li></ol></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">interpolationSearch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>length<span class="token punctuation">}</span> <span class="token operator">=</span>array
    <span class="token keyword">let</span> low <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> high <span class="token operator">=</span> length<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">let</span> delta <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        delta <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">-</span>array<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token operator">-</span>array<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token punctuation">)</span>
        position <span class="token operator">=</span> low <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>high <span class="token operator">-</span> low<span class="token punctuation">)</span> <span class="token operator">*</span> delta<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> position
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>position<span class="token punctuation">]</span> <span class="token operator">&lt;</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            low <span class="token operator">=</span> position <span class="token operator">+</span><span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            high <span class="token operator">=</span> position <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">interpolationSearch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u63D2\u641C\u7D22\u7684\u9AD8\u6548\u6027\u53EA\u9488\u5BF9\u5747\u5300\u5206\u5E03\u7684\u6570\u7EC4\uFF0C\u800C\u5BF9\u4E8E\u5206\u5E03\u4E0D\u5747\u5300\u7684\u6570\u7EC4\uFF0C\u63D2\u503C\u67E5\u627E\u4FBF\u4E0D\u518D\u9002\u7528\u4E86</p><h3 id="\u968F\u673A\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u968F\u673A\u7B97\u6CD5" aria-hidden="true">#</a> \u968F\u673A\u7B97\u6CD5</h3><p>\u{1F516} \u5C06\u4E00\u4E2A\u6570\u7EC4\u4E2D\u7684\u503C\u8FDB\u884C<strong>\u968F\u673A\u6392\u5217</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> randomIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> randomIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u65E5\u5E38\u8BB0\u5F55" tabindex="-1"><a class="header-anchor" href="#\u65E5\u5E38\u8BB0\u5F55" aria-hidden="true">#</a> \u65E5\u5E38\u8BB0\u5F55</h2><h3 id="\u6811\u7684\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u6811\u7684\u8DEF\u5F84" aria-hidden="true">#</a> \u6811\u7684\u8DEF\u5F84</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ab&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cd&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ef&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ce&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eg&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">initPath</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> parentNestPId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>parentNestPId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span>nestPId <span class="token operator">=</span> node<span class="token punctuation">.</span>id
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span>nestPId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>parentNestPId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>node<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token operator">=&gt;</span> <span class="token function">initPath</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> node<span class="token punctuation">.</span>nestPId<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">m</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">initPath</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> data
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// [</span>
<span class="token comment">//     {</span>
<span class="token comment">//       &quot;id&quot;: &quot;ab&quot;,</span>
<span class="token comment">//       &quot;children&quot;: [</span>
<span class="token comment">//         {</span>
<span class="token comment">//           &quot;id&quot;: &quot;cd&quot;,</span>
<span class="token comment">//           &quot;nestPId&quot;: &quot;ab&gt;cd&quot;,</span>
<span class="token comment">//           &quot;children&quot;: [</span>
<span class="token comment">//             {</span>
<span class="token comment">//               &quot;id&quot;: &quot;ef&quot;,</span>
<span class="token comment">//               &quot;children&quot;: [],</span>
<span class="token comment">//               &quot;nestPId&quot;: &quot;ab&gt;cd&gt;ef&quot;</span>
<span class="token comment">//             }</span>
<span class="token comment">//           ],</span>
<span class="token comment">//         },</span>
<span class="token comment">//         {</span>
<span class="token comment">//           &quot;id&quot;: &quot;ce&quot;,</span>
<span class="token comment">//           &quot;nestPId&quot;: &quot;ab&gt;ce&quot;,</span>
<span class="token comment">//           &quot;children&quot;: [</span>
<span class="token comment">//             {</span>
<span class="token comment">//               &quot;id&quot;: &quot;eg&quot;,</span>
<span class="token comment">//               &quot;children&quot;: [],</span>
<span class="token comment">//               &quot;nestPId&quot;: &quot;ab&gt;ce&gt;eg&quot;</span>
<span class="token comment">//             }</span>
<span class="token comment">//           ],</span>
<span class="token comment">//         }</span>
<span class="token comment">//       ],</span>
<span class="token comment">//       &quot;nestPId&quot;: &quot;ab&quot;</span>
<span class="token comment">//     }</span>
<span class="token comment">//   ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,150),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","algorithm.html.vue"]]);export{k as default};
