import{_ as n,o as s,c as a,d as p}from"./app.ede35192.js";const t={},e=p(`<h1 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h1><h2 id="\u6570\u636E\u9A71\u52A8" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u9A71\u52A8" aria-hidden="true">#</a> \u6570\u636E\u9A71\u52A8</h2><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/vue/new-vue.png" alt=""></p><ol><li><p>Vue\u6784\u9020\u51FD\u6570\uFF0C\u5728\u539F\u578B\u548C\u5B9E\u4F8B\u4E2D\u6DFB\u52A0\u5168\u5C40API\uFF0C\u521D\u59CB\u5316\u5404\u90E8\u5206\u529F\u80FD</p></li><li><p>new Vue\u4E4B\u540E\u901A\u8FC7init\u65B9\u6CD5\u5904\u7406\u5404\u7C7B\u6570\u636E\uFF0C$options</p></li><li><p>\u5B9E\u4F8B\u6302\u8F7D\uFF0C\u901A\u8FC7 <code>$mount</code> \u5B9E\u4F8B\u65B9\u6CD5\u6302\u8F7D <code>vm</code></p><p><code>mountComponent</code> \u6838\u5FC3\u5C31\u662F\u5148\u5B9E\u4F8B\u5316\u4E00\u4E2A\u6E32\u67D3<code>Watcher</code>\uFF0C\u5728\u5B83\u7684\u56DE\u8C03\u51FD\u6570\u4E2D\u4F1A\u8C03\u7528 <code>updateComponent</code> \u65B9\u6CD5\uFF0C\u5728\u6B64\u65B9\u6CD5\u4E2D\u8C03\u7528 <code>vm._render</code> \u65B9\u6CD5\u5148\u751F\u6210\u865A\u62DF Node</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5982\u679C\u4F7F\u7528\u4E86\u6A21\u677Ftemplate\u6216\u8005SFC\uFF0C\u9700\u8981\u901A\u8FC7compiler\u7F16\u8BD1\u6210render\u51FD\u6570</p></li><li><p>render\u51FD\u6570\uFF0C\u5185\u90E8\u4F7F\u7528createElement\u65B9\u6CD5\u8FD4\u56DEvnode</p></li><li><p>\u66F4\u65B0 DOM</p><p><code>_update</code> \u662F\u5B9E\u4F8B\u7684\u4E00\u4E2A\u79C1\u6709\u65B9\u6CD5\uFF0C\u5B83\u88AB\u8C03\u7528\u7684\u65F6\u673A\u6709 2 \u4E2A\uFF0C\u4E00\u4E2A\u662F\u9996\u6B21\u6E32\u67D3\uFF0C\u4E00\u4E2A\u662F\u6570\u636E\u66F4\u65B0\u7684\u65F6\u5019\u3002\u8BE5\u65B9\u6CD5\u5185\u90E8\u6700\u7EC8\u8C03\u7528\u4E86patch\u65B9\u6CD5\u8FDB\u884C\u8282\u70B9\u7684\u66F4\u65B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prevVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// initial render</span>
  vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$el<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* removeOnly */</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// updates  diff...</span>
  vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>prevVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="\u7EC4\u4EF6\u5316" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u5316" aria-hidden="true">#</a> \u7EC4\u4EF6\u5316</h2><h3 id="createcomponent" tabindex="-1"><a class="header-anchor" href="#createcomponent" aria-hidden="true">#</a> createComponent</h3><p>render\u51FD\u6570\u7684createElement\u7684\uFF0C\u78B0\u5230\u7EC4\u4EF6\u4F1A\u8D70<code>createComponent</code>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u7684\u4F5C\u7528:</p><ol><li>\u6784\u9020\u5B50\u7C7B\u6784\u9020\u51FD\u6570\uFF1ACtor,\u901A\u8FC7Vue.extend(\u7EC4\u4EF6\u914D\u7F6E\u5BF9\u8C61)\uFF0C\u4E2D\u95F4\u4F1A\u505A\u4E00\u4E9B\u914D\u7F6E\u7684\u5408\u5E76\uFF0C\u6700\u7EC8\u751F\u6210\u4E00\u4E2A\u6784\u9020\u51FD\u6570\u5373Vue\u7684\u5B50\u7C7B</li><li>\u5B89\u88C5\u7EC4\u4EF6\u94A9\u5B50\u51FD\u6570\uFF1A\u5C06\u94A9\u5B50\u51FD\u6570\u8FDB\u884C\u5904\u7406\u5408\u5E76\uFF0C\u653E\u5230vnodeData\u53C2\u6570\u4E2D</li><li>\u5B9E\u4F8B\u5316\uFF1Avnode = new VNode(name, vnodeData, \u2026, { Ctro, propsData, listeners, tag, children }, \u2026) \u6700\u7EC8\u751F\u6210\u7684\u7EC4\u4EF6<strong>vnode</strong>\u7684children\u662F\u7A7A\u7684\uFF0C\u540C\u65F6vnodeData\u643A\u5E26\u7740\u94A9\u5B50\u51FD\u6570\uFF0C\u8FD8\u6709\u7EC4\u4EF6\u6784\u9020\u51FD\u6570\uFF0C\u7EC4\u4EF6\u4FE1\u606F\u7B49\u7B49</li></ol><h2 id="\u54CD\u5E94\u5F0F\u6570\u636E\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F\u6570\u636E\u539F\u7406" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F\u6570\u636E\u539F\u7406</h2><h3 id="\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570</h3><p>\u4F20\u5165\u7684\u53C2\u6570\u5C31\u662F\u4E00\u4E2A\u5BF9\u8C61: <strong>options</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>
  router<span class="token punctuation">,</span>
  store<span class="token punctuation">,</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u6302\u8F7Dinit\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> initMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./init.js&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Vue\u5C31\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570 \u901A\u8FC7new\u5173\u952E\u5B57\u8FDB\u884C\u5B9E\u4F8B\u5316</span>
<span class="token keyword">function</span> <span class="token function">Vue</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u5F00\u59CB\u8FDB\u884CVue\u521D\u59CB\u5316\u5DE5\u4F5C</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_init</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// _init\u65B9\u6CD5\u662F\u6302\u8F7D\u5728Vue\u539F\u578B\u7684\u65B9\u6CD5 \u901A\u8FC7\u5F15\u5165\u6587\u4EF6\u7684\u65B9\u5F0F\u8FDB\u884C\u539F\u578B\u6302\u8F7D\u9700\u8981\u4F20\u5165Vue</span>
<span class="token comment">// \u6B64\u505A\u6CD5\u6709\u5229\u4E8E\u4EE3\u7801\u5206\u5272</span>
<span class="token function">initMixin</span><span class="token punctuation">(</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Vue<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>initMixin\u5B9E\u73B0\uFF1A\u5728Vue\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61\u4E0A\u58F0\u660E**_init**\u65B9\u6CD5\uFF0C\u4F9B Vue \u5B9E\u4F8B\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/init.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> initState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./state&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initMixin</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_init</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u91CC\u7684this\u4EE3\u8868\u8C03\u7528_init\u65B9\u6CD5\u7684\u5BF9\u8C61(\u5B9E\u4F8B\u5BF9\u8C61)</span>
    <span class="token comment">// this.$options\u5C31\u662F\u7528\u6237new Vue\u7684\u65F6\u5019\u4F20\u5165\u7684\u5C5E\u6027</span>
    vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token comment">// \u521D\u59CB\u5316\u72B6\u6001</span>
    <span class="token function">initState</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="initstate\u521D\u59CB\u5316\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#initstate\u521D\u59CB\u5316\u72B6\u6001" aria-hidden="true">#</a> initState\u521D\u59CB\u5316\u72B6\u6001</h3><p>\u987A\u5E8F\uFF1A<strong>prop &gt; methods &gt; data &gt; computed &gt; watch</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token parameter">vm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u4F20\u5165\u7684\u6570\u636E\u5BF9\u8C61</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initProps</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initMethod</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u59CB\u5316data</span>
    <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initWatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="observer-\u6570\u636E\u52AB\u6301" tabindex="-1"><a class="header-anchor" href="#observer-\u6570\u636E\u52AB\u6301" aria-hidden="true">#</a> Observer \u6570\u636E\u52AB\u6301</h3><p>\u6A21\u677F\u4F7F\u7528\u6570\u636E\u7B49\u540C\u4E8E\u7EC4\u4EF6\u4F7F\u7528\u6570\u636E\uFF0C\u6240\u4EE5\u5F53\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u4F1A\u5C06\u901A\u77E5\u53D1\u9001\u5230\u7EC4\u4EF6\uFF0C\u7136\u540E\u7EC4\u4EF6\u5185\u90E8\u518D\u901A\u8FC7\u865A\u62DFDOM\u91CD\u65B0\u6E32\u67D3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/obserber/index.js</span>
<span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u89C2\u6D4B\u503C</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">walk</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BF9\u8C61\u4E0A\u7684\u6240\u6709\u5C5E\u6027\u4F9D\u6B21\u8FDB\u884C\u89C2\u6D4B</span>
    <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> value <span class="token operator">=</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">defineReactive</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// Object.defineProperty\u6570\u636E\u52AB\u6301\u6838\u5FC3 \u517C\u5BB9\u6027\u5728ie9\u4EE5\u53CA\u4EE5\u4E0A</span>
<span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9012\u5F52\u5173\u952E</span>
  <span class="token comment">// --\u5982\u679Cvalue\u8FD8\u662F\u4E00\u4E2A\u5BF9\u8C61\u4F1A\u7EE7\u7EED\u8D70\u4E00\u904DodefineReactive \u5C42\u5C42\u904D\u5386\u4E00\u76F4\u5230value\u4E0D\u662F\u5BF9\u8C61\u624D\u505C\u6B62</span>
  <span class="token comment">//   \u601D\u8003\uFF1F\u5982\u679CVue\u6570\u636E\u5D4C\u5957\u5C42\u7EA7\u8FC7\u6DF1 &gt;&gt;\u6027\u80FD\u4F1A\u53D7\u5F71\u54CD</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6\u503C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">===</span> value<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BBE\u7F6E\u503C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u6B64\u5904\u53EF\u4EE5\u8FDB\u884C\u5BF9\u5E94\u7684\u89C6\u56FE\u66F4\u65B0\u901A\u77E5</span>
      value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u4F20\u8FC7\u6765\u7684\u662F\u5BF9\u8C61\u6216\u8005\u6570\u7EC4 \u8FDB\u884C\u5C5E\u6027\u52AB\u6301</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;[object Object]&quot;</span> <span class="token operator">||</span>
    Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7F3A\u70B9" aria-hidden="true">#</a> \u7F3A\u70B9</h4><p><code>Object.defineProperty</code></p><ul><li>\u5BF9\u8C61\u65B0\u589E\u6216\u8005\u5220\u9664\u7684\u5C5E\u6027\u65E0\u6CD5\u88AB set \u76D1\u542C\u5230</li><li>\u53EA\u6709\u5BF9\u8C61\u672C\u8EAB\u5B58\u5728\u7684\u5C5E\u6027\u4FEE\u6539\u624D\u4F1A\u88AB\u52AB\u6301</li></ul><h4 id="\u6570\u7EC4\u6570\u636E\u52AB\u6301" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u6570\u636E\u52AB\u6301" aria-hidden="true">#</a> \u6570\u7EC4\u6570\u636E\u52AB\u6301</h4><ol><li>\u8FD9\u6837\u9012\u5F52\u7684\u65B9\u5F0F\u5176\u5B9E\u65E0\u8BBA\u662F\u5BF9\u8C61\u8FD8\u662F\u6570\u7EC4\u90FD\u8FDB\u884C\u4E86\u89C2\u6D4B</li><li>\u4F46\u662F\u6211\u4EEC\u60F3\u4E00\u4E0B\u6B64\u65F6\u5982\u679C data \u5305\u542B\u6570\u7EC4\u6BD4\u5982 a:[1,2,3,4,5] \u90A3\u4E48\u6211\u4EEC\u6839\u636E\u4E0B\u6807\u53EF\u4EE5\u76F4\u63A5\u4FEE\u6539\u6570\u636E\u4E5F\u80FD\u89E6\u53D1 set</li><li>\u4F46\u662F\u5982\u679C\u4E00\u4E2A\u6570\u7EC4\u91CC\u9762\u6709\u4E0A\u5343\u4E0A\u4E07\u4E2A\u5143\u7D20 \u6BCF\u4E00\u4E2A\u5143\u7D20\u4E0B\u6807\u90FD\u6DFB\u52A0 get \u548C set \u65B9\u6CD5 \u8FD9\u6837\u5BF9\u4E8E<strong>\u6027\u80FD</strong>\u6765\u8BF4\u662F\u627F\u62C5\u4E0D\u8D77\u7684</li><li>\u6240\u4EE5\u6B64\u65B9\u6CD5\u53EA\u7528\u6765\u52AB\u6301\u5BF9\u8C61</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/obserber/index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMethods <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./array&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u5BF9\u6570\u7EC4\u505A\u4E86\u989D\u5916\u5224\u65AD</span>
      <span class="token comment">// \u901A\u8FC7\u91CD\u5199\u6570\u7EC4\u539F\u578B\u65B9\u6CD5\u6765\u5BF9\u6570\u7EC4\u7684\u4E03\u79CD\u65B9\u6CD5\u8FDB\u884C\u62E6\u622A   value.__proto__ === Array.prototype</span>
      value<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> arrayMethods<span class="token punctuation">;</span> 
      <span class="token comment">// \u5982\u679C\u6570\u7EC4\u91CC\u9762\u8FD8\u5305\u542B\u6570\u7EC4 \u9700\u8981\u9012\u5F52\u5224\u65AD</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">observeArray</span><span class="token punctuation">(</span><span class="token parameter">items</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">observe</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u5BF9\u6570\u7EC4\u4E0B\u6807\u7684\u62E6\u622A\u592A<strong>\u6D6A\u8D39\u6027\u80FD</strong> \u5BF9 Observer \u6784\u9020\u51FD\u6570\u4F20\u5165\u7684\u6570\u636E\u53C2\u6570\u589E\u52A0\u4E86\u6570\u7EC4\u7684\u5224\u65AD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/obserber/index.js</span>
<span class="token keyword">class</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u89C2\u6D4B\u503C</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&quot;__ob__&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">//  \u503C\u6307\u4EE3\u7684\u5C31\u662FObserver\u7684\u5B9E\u4F8B</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
      <span class="token comment">//  \u4E0D\u53EF\u679A\u4E3E</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u6570\u7EC4\u539F\u578B\u91CD\u5199\u4E4B\u524D\u54B1\u4EEC\u5148\u8981\u7406\u89E3\u8FD9\u6BB5\u4EE3\u7801\uFF1A</p><ol><li>\u8FD9\u6BB5\u4EE3\u7801\u7684\u610F\u601D\u5C31\u662F\u7ED9\u6BCF\u4E2A\u54CD\u5E94\u5F0F\u6570\u636E\u589E\u52A0\u4E86\u4E00\u4E2A\u4E0D\u53EF\u679A\u4E3E\u7684__ob__\u5C5E\u6027</li><li>\u5E76\u4E14\u6307\u5411\u4E86 Observer \u5B9E\u4F8B \uFF08\u6307\u5411\u81EA\u8EABvalue\uFF09</li><li>\u90A3\u4E48\u6211\u4EEC\u9996\u5148\u53EF\u4EE5\u6839\u636E\u8FD9\u4E2A\u5C5E\u6027\u6765\u9632\u6B62\u5DF2\u7ECF\u88AB\u54CD\u5E94\u5F0F\u89C2\u5BDF\u7684\u6570\u636E\u53CD\u590D\u88AB\u89C2\u6D4B (\u54CD\u5E94\u5F0F\u6807\u8BB0)</li><li>\u5176\u6B21 \u54CD\u5E94\u5F0F\u6570\u636E\u53EF\u4EE5\u4F7F\u7528__ob__\u6765\u83B7\u53D6 Observer \u5B9E\u4F8B\u7684\u76F8\u5173\u65B9\u6CD5 \u8FD9\u5BF9\u6570\u7EC4\u5F88\u5173\u952E</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/obserber/array.js</span>
<span class="token comment">// \u5148\u4FDD\u7559\u6570\u7EC4\u539F\u578B</span>
<span class="token keyword">const</span> arrayProto <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token comment">// \u7136\u540E\u5C06arrayMethods\u7EE7\u627F\u81EA\u6570\u7EC4\u539F\u578B</span>
<span class="token comment">// \u8FD9\u91CC\u662F\u9762\u5411\u5207\u7247\u7F16\u7A0B\u601D\u60F3\uFF08AOP\uFF09--\u4E0D\u7834\u574F\u5C01\u88C5\u7684\u524D\u63D0\u4E0B\uFF0C\u52A8\u6001\u7684\u6269\u5C55\u529F\u80FD</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> arrayMethods <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>arrayProto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> methodsToPatch <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;push&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;pop&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;shift&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;unshift&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;splice&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;reverse&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;sort&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
methodsToPatch<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">method</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  arrayMethods<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//   \u8FD9\u91CC\u4FDD\u7559\u539F\u578B\u65B9\u6CD5\u7684\u6267\u884C\u7ED3\u679C</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> arrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u53E5\u8BDD\u662F\u5173\u952E</span>
    <span class="token comment">// this\u4EE3\u8868\u7684\u5C31\u662F\u6570\u636E\u672C\u8EAB \u6BD4\u5982\u6570\u636E\u662F{a:[1,2,3]} \u90A3\u4E48\u6211\u4EEC\u4F7F\u7528a.push(4)  this\u5C31\u662Fa  ob\u5C31\u662Fa.__ob__ \u8FD9\u4E2A\u5C5E\u6027\u5C31\u662F\u4E0A\u6BB5\u4EE3\u7801\u589E\u52A0\u7684 \u4EE3\u8868\u7684\u662F\u8BE5\u6570\u636E\u5DF2\u7ECF\u88AB\u54CD\u5E94\u5F0F\u89C2\u5BDF\u8FC7\u4E86\u6307\u5411Observer\u5B9E\u4F8B</span>
    <span class="token keyword">const</span> ob <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>

    <span class="token comment">// \u8FD9\u91CC\u7684\u6807\u5FD7\u5C31\u662F\u4EE3\u8868\u6570\u7EC4\u6709\u65B0\u589E\u64CD\u4F5C</span>
    <span class="token keyword">let</span> inserted<span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&quot;push&quot;</span><span class="token operator">:</span>
      <span class="token keyword">case</span> <span class="token string">&quot;unshift&quot;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&quot;splice&quot;</span><span class="token operator">:</span>
        inserted <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6709\u65B0\u589E\u7684\u5143\u7D20 inserted\u662F\u4E00\u4E2A\u6570\u7EC4 \u8C03\u7528Observer\u5B9E\u4F8B\u7684observeArray\u5BF9\u6570\u7EC4\u6BCF\u4E00\u9879\u8FDB\u884C\u89C2\u6D4B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>inserted<span class="token punctuation">)</span> ob<span class="token punctuation">.</span><span class="token function">observeArray</span><span class="token punctuation">(</span>inserted<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E4B\u540E\u54B1\u4EEC\u8FD8\u53EF\u4EE5\u5728\u8FD9\u91CC\u68C0\u6D4B\u5230\u6570\u7EC4\u6539\u53D8\u4E86\u4E4B\u540E\u4ECE\u800C\u89E6\u53D1\u89C6\u56FE\u66F4\u65B0\u7684\u64CD\u4F5C--\u540E\u7EED\u6E90\u7801\u4F1A\u63ED\u6653</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/vue/initData.png" alt=""></p><h2 id="props\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#props\u5904\u7406" aria-hidden="true">#</a> props\u5904\u7406</h2><h3 id="props\u89C4\u8303\u5316" tabindex="-1"><a class="header-anchor" href="#props\u89C4\u8303\u5316" aria-hidden="true">#</a> props\u89C4\u8303\u5316</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>props\u89C4\u8303\u5316\uFF1A\u628A\u5404\u79CD\u4E0D\u662F\u89C4\u8303\u683C\u5F0F\u7684\u5F62\u5F0F\uFF0C\u89C4\u8303\u5316\u4E3A\u89C4\u8303\u683C\u5F0F\uFF0C\u65B9\u4FBF<code>Vue.js</code>\u5728\u540E\u7EED\u7684\u8FC7\u7A0B\u4E2D\u5904\u7406<code>props</code></li><li><code>props</code>\u89C4\u8303\u5316\u7684\u8FC7\u7A0B\u53D1\u751F\u5728<code>this._init()</code>\u65B9\u6CD5\u4E2D\u7684<code>mergeOptions</code>\u5408\u5E76\u914D\u7F6E\u4E2D\uFF0C\u8C03\u7528normalizeProps\uFF0C\u9488\u5BF9\u6570\u7EC4\u548C\u5BF9\u8C61\u8FDB\u884C\u4E0D\u540C\u7684\u5904\u7406</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">normalizeProps</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">options</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> <span class="token operator">?</span>Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> options<span class="token punctuation">.</span>props
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>props<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> val<span class="token punctuation">,</span> name
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i <span class="token operator">=</span> props<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> props<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> <span class="token function">camelize</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        res<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679Cprop\u4E0D\u662F\u5B57\u7B26\u4E32\u8868\u793A\u7684\u952E\u540D\uFF0C\u62A5\u9519</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;props must be strings when using array syntax.&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      val <span class="token operator">=</span> props<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      name <span class="token operator">=</span> <span class="token function">camelize</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      res<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        <span class="token operator">?</span> val
        <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> val <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid value for option &quot;props&quot;: expected an Array or an Object, </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">but got </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">toRawType</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      vm
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  options<span class="token punctuation">.</span>props <span class="token operator">=</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u6570\u7EC4\uFF1A\u7C7B\u578B\u68C0\u6D4B\u3001\u9A7C\u5CF0\u5904\u7406\u3001\u751F\u6210\u56FA\u5B9A\u952E\u503C\u5BF9\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89C4\u8303\u5316\u524D</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nick-name&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u89C4\u8303\u5316\u540E</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">nickName</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5BF9\u8C61\uFF1A\u904D\u5386\u9A7C\u5CF0\u5904\u7406\u3001\u76F4\u63A5\u4F7F\u7528\u666E\u901A\u5BF9\u8C61\u503C\u6216\u8005\u521B\u5EFA<code>{ type: Type }</code>\u683C\u5F0F\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89C4\u8303\u5316\u524D</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> Number
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u89C4\u8303\u5316\u540E</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Number
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="props\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#props\u521D\u59CB\u5316" aria-hidden="true">#</a> props\u521D\u59CB\u5316</h3><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/vue/initProps.png" alt=""></p><div class="custom-container tip"><p class="custom-container-title">props\u54CD\u5E94\u5F0F</p><p>\u200B \u5728\u5F00\u53D1\u73AF\u5883\u4E0B\uFF0Cprops\u7684\u54CD\u5E94\u5F0F\u52AB\u6301\u4E86setter\u65B9\u6CD5 \u200B \u8FD9\u6837\u505A\u662F\u4E3A\u4E86\u4FDD\u8BC1props\u4E3A**\u5355\u9879\u6570\u636E\u6D41\uFF1A**\u65E2\u6211\u4EEC\u4E0D\u80FD\u5728\u5B50\u7EC4\u4EF6\u4E2D\u76F4\u63A5\u4FEE\u6539\u7236\u7EC4\u4EF6\u4F20\u9012\u7684props\u503C</p></div><h4 id="props\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#props\u6821\u9A8C" aria-hidden="true">#</a> props\u6821\u9A8C</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">validateProp</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">propOptions</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  <span class="token literal-property property">propsData</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
  vm<span class="token operator">?</span><span class="token operator">:</span> Component</span>
<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prop <span class="token operator">=</span> propOptions<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">const</span> absent <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>propsData<span class="token punctuation">,</span> key<span class="token punctuation">)</span>  <span class="token comment">// \u7236\u7EC4\u4EF6\u6CA1\u6709\u4F20\u5165prop</span>
  <span class="token keyword">let</span> value <span class="token operator">=</span> propsData<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token comment">// boolean\u5904\u7406</span>
  <span class="token keyword">const</span> booleanIndex <span class="token operator">=</span> <span class="token function">getTypeIndex</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">,</span> prop<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>booleanIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>absent <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Boolean\u6CA1\u6709\u4F20\u5165\u5E76\u4E14\u6CA1\u6709\u9ED8\u8BA4\u503C =&gt; false</span>
      value <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token function">hyphenate</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4F20\u5165\u4E3A\u7A7A\u5B57\u7B26\u4E32\u6216\u8005\u4E3Afixed=&quot;fixed&quot;\u7684\u60C5\u51B5</span>
      <span class="token comment">// \u6839\u636EType\u7C7B\u578B\u548C\u4F18\u5148\u7EA7\u786E\u5B9A\u662F\u5426\u8981\u8BBE\u7F6E\u4E3Atrue</span>
      <span class="token keyword">const</span> stringIndex <span class="token operator">=</span> <span class="token function">getTypeIndex</span><span class="token punctuation">(</span>String<span class="token punctuation">,</span> prop<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>stringIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> booleanIndex <span class="token operator">&lt;</span> stringIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        value <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u9ED8\u8BA4\u503C\u8D4B\u503C\uFF0C\u54CD\u5E94\u5F0F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token function">getPropDefaultValue</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token comment">// since the default value is a fresh copy,</span>
    <span class="token comment">// make sure to observe it.</span>
    <span class="token keyword">const</span> prevShouldObserve <span class="token operator">=</span> shouldObserve
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span>prevShouldObserve<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span>
    <span class="token comment">// skip validation for weex recycle-list child component props</span>
    <span class="token operator">!</span><span class="token punctuation">(</span>__WEEX__ <span class="token operator">&amp;&amp;</span> <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">&#39;@binding&#39;</span> <span class="token keyword">in</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65AD\u8A00\uFF0C\u6821\u9A8C</span>
    <span class="token function">assertProp</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> absent<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="props\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#props\u66F4\u65B0" aria-hidden="true">#</a> props\u66F4\u65B0</h3><p>\u5F53\u7236\u7EC4\u4EF6\u503C\u66F4\u65B0\u65F6\uFF0C\u5B50\u7EC4\u4EF6\u7684\u503C\u4E5F\u4F1A\u53D1\u751F\u6539\u53D8\uFF0C\u540C\u65F6\u89E6\u53D1\u5B50\u7EC4\u4EF6\u7684<strong>\u91CD\u65B0\u6E32\u67D3</strong>\u3002</p><p>\u6211\u4EEC\u5148\u8DF3\u8FC7\u7236\u7EC4\u4EF6\u7684\u5177\u4F53\u7F16\u8BD1\u903B\u8F91\uFF0C\u76F4\u63A5\u770B\u7236\u7EC4\u4EF6\u7684\u503C\u66F4\u65B0\uFF0C\u6539\u53D8\u5B50\u7EC4\u4EF6<code>props</code>\u503C\u7684\u6B65\u9AA4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateChildComponent</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
  <span class="token literal-property property">propsData</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">listeners</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">parentVnode</span><span class="token operator">:</span> MountedComponentVNode<span class="token punctuation">,</span>
  <span class="token literal-property property">renderChildren</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u4EE3\u7801</span>
  <span class="token comment">// update props</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>propsData <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>_props
    <span class="token keyword">const</span> propKeys <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_propKeys <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u904D\u5386\`propsKey\`\u6765\u91CD\u65B0\u5BF9\u5B50\u7EC4\u4EF6\`props\`\u8FDB\u884C\u6821\u9A8C\u6C42\u503C\uFF0C\u6700\u540E\u8D4B\u503C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> propKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> propKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> <span class="token literal-property property">propOptions</span><span class="token operator">:</span> any <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props
      <span class="token comment">// \u68C0\u9A8C\u6700\u7EC8\u4F1A\u8FD4\u56DEvalue\uFF0C\u8BE5\u8D4B\u503C\u64CD\u4F5C\u89E6\u53D1setter\uFF0C\u89E6\u53D1\u5B50\u7EC4\u4EF6\u7684\u91CD\u65B0\u6E32\u67D3</span>
      props<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">validateProp</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> propOptions<span class="token punctuation">,</span> propsData<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// keep a copy of raw propsData</span>
    vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>propsData <span class="token operator">=</span> propsData
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u5206\u6790\uFF1A</p><ol><li>\u4EE5\u4E0A<code>vm</code>\u5B9E\u4F8B\u4E3A\u5B50\u7EC4\u4EF6\uFF0C<code>propsData</code>\u4E3A\u7236\u7EC4\u4EF6\u4E2D\u4F20\u9012\u7684<code>props</code>\u7684\u503C\uFF0C\u800C<code>_propKeys</code>\u662F\u4E4B\u524D<code>props</code>\u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\u7F13\u5B58\u8D77\u6765\u7684\u6240\u6709\u7684<code>props</code>\u7684key\u3002</li><li>\u5728\u7236\u7EC4\u4EF6\u503C\u66F4\u65B0\u540E\uFF0C\u4F1A\u901A\u8FC7\u904D\u5386<code>propsKey</code>\u6765\u91CD\u65B0\u5BF9\u5B50\u7EC4\u4EF6<code>props</code>\u8FDB\u884C<strong>\u6821\u9A8C\u6C42\u503C</strong>\uFF0C\u6700\u540E\u8D4B\u503C\u3002</li></ol><p>\u4EE5\u4E0A\u4EE3\u7801\u5C31\u662F\u5B50\u7EC4\u4EF6<code>props</code>\u66F4\u65B0\u7684\u8FC7\u7A0B\uFF0C\u5728<code>props</code>\u66F4\u65B0\u540E\u4F1A\u8FDB\u884C\u5B50\u7EC4\u4EF6\u7684\u91CD\u65B0\u6E32\u67D3\uFF0C\u8FD9\u4E2A\u91CD\u65B0\u6E32\u67D3\u7684\u8FC7\u7A0B\u5206\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ul><li>\u666E\u901A<code>props</code>\u503C\u88AB\u4FEE\u6539\uFF1A\u5F53<code>props</code>\u503C\u88AB\u4FEE\u6539\u540E\uFF0C\u5176\u4E2D\u6709\u6BB5\u4EE3\u7801<code>props[key] = validateProp(key, propOptions, propsData, vm)</code>\u6839\u636E\u54CD\u5E94\u5F0F\u539F\u7406\uFF0C\u4F1A\u89E6\u53D1\u5C5E\u6027\u7684<code>setter</code>\uFF0C\u8FDB\u800C\u5B50\u7EC4\u4EF6\u53EF\u4EE5\u91CD\u65B0\u6E32\u67D3\u3002</li><li>\u5BF9\u8C61<code>props</code>\u5185\u90E8\u5C5E\u6027\u53D8\u5316\uFF1A\u5F53\u8FD9\u79CD\u60C5\u51B5\u53D1\u751F\u65F6\uFF0C\u5E76\u6CA1\u6709\u89E6\u53D1\u5B50\u7EC4\u4EF6<code>prop</code>\u7684\u66F4\u65B0\uFF0C\u4F46\u662F\u5728\u5B50\u7EC4\u4EF6\u6E32\u67D3\u7684\u65F6\u5019\u8BFB\u53D6\u5230\u4E86<code>props</code>\uFF0C\u56E0\u6B64\u4F1A\u6536\u96C6\u5230\u8FD9\u4E2A<code>props</code>\u7684<code>render watcher</code>\uFF0C\u5F53\u5BF9\u8C61<code>props</code>\u5185\u90E8\u5C5E\u6027\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u6839\u636E\u54CD\u5E94\u5F0F\u539F\u7406\u4F9D\u7136\u4F1A\u89E6\u53D1<code>setter</code>\uFF0C\u8FDB\u800C\u5B50\u7EC4\u4EF6\u53EF\u4EE5\u91CD\u65B0\u8FDB\u884C\u6E32\u67D3</li></ul><h3 id="toggleobserving\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#toggleobserving\u4F5C\u7528" aria-hidden="true">#</a> toggleObserving\u4F5C\u7528</h3><p><code>toggleObserving</code>\u662F\u5B9A\u4E49\u5728<code>src/core/observer/index.js</code>\u6587\u4EF6\u4E2D\u7684\u4E00\u4E2A\u51FD\u6570\uFF0C\u5176\u4EE3\u7801\u5F88\u7B80\u5355\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">let</span> <span class="token literal-property property">shouldObserve</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">toggleObserving</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  shouldObserve <span class="token operator">=</span> value
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u7684\u4F5C\u7528\u5C31\u662F\u4FEE\u6539\u5F53\u524D\u6A21\u5757\u7684<code>shouldObserve</code>\u53D8\u91CF\uFF0C\u7528\u6765\u63A7\u5236\u5728<code>observe</code>\u7684\u8FC7\u7A0B\u4E2D\u662F\u5426\u9700\u8981\u628A\u5F53\u524D\u503C\u53D8\u6210\u4E00\u4E2A<code>observer</code>\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">observe</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">asRootData</span><span class="token operator">:</span> <span class="token operator">?</span>boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> value <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> <span class="token literal-property property">ob</span><span class="token operator">:</span> Observer <span class="token operator">|</span> <span class="token keyword">void</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&#39;__ob__&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>__ob__ <span class="token keyword">instanceof</span> <span class="token class-name">Observer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> value<span class="token punctuation">.</span>__ob__
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
    shouldObserve <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPlainObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span>value<span class="token punctuation">.</span>_isVue
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>asRootData <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ob<span class="token punctuation">.</span>vmCount<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ob
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u6765\u5206\u6790\uFF0C\u5728\u5904\u7406<code>props</code>\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4EC0\u4E48\u65F6\u5019<code>toggleObserving(true)</code>\uFF0C\u4EC0\u4E48\u65F6\u5019<code>toggleObserving(false)</code>\u4EE5\u53CA\u4E3A\u4EC0\u4E48\u9700\u8981\u8FD9\u6837\u5904\u7406\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initProps</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">propsOptions</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u7701\u7565defineReactive\u7684\u8FC7\u7A0B</span>
  <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>props</code>\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF1A \u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u5728\u6700\u5F00\u59CB\u5224\u65AD\u4E86\u5F53\u4E3A<strong>\u975E\u6839\u5B9E\u4F8B</strong>(\u5B50\u7EC4\u4EF6)\u7684\u65F6\u5019\uFF0C\u8FDB\u884C\u4E86<code>toggleObserving(false)</code>\u7684\u64CD\u4F5C\uFF0C\u8FD9\u6837\u505A\u7684\u76EE\u7684\u662F\u56E0\u4E3A\uFF1A\u5F53\u975E\u6839\u5B9E\u4F8B\u7684\u65F6\u5019\uFF0C\u7EC4\u4EF6\u7684<code>props</code>\u6765\u81EA\u4E8E\u7236\u7EC4\u4EF6\u3002\u5F53<code>props</code>\u4E3A\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\u65F6\uFF0C\u6839\u636E\u54CD\u5E94\u5F0F\u539F\u7406\uFF0C\u6211\u4EEC\u4F1A\u9012\u5F52\u904D\u5386\u5B50\u5C5E\u6027\u7136\u540E\u8FDB\u884C<code>observe(val)</code>\uFF0C\u800C\u6B63\u662F\u56E0\u4E3A<code>props</code>\u6765\u6E90\u4E8E\u7236\u7EC4\u4EF6\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u5176\u5B9E\u5DF2\u7ECF\u5728\u7236\u7EC4\u4EF6\u6267\u884C\u8FC7\u4E86\uFF0C\u5982\u679C\u4E0D\u505A\u4EFB\u4F55\u9650\u5236\uFF0C\u90A3\u4E48\u4F1A\u5728\u5B50\u7EC4\u4EF6\u4E2D\u53C8\u91CD\u590D\u4E00\u6B21\u8FD9\u6837\u7684\u8FC7\u7A0B\uFF0C\u56E0\u6B64\u8FD9\u91CC\u9700\u8981<code>toggleObserving(false)</code>\uFF0C\u7528\u6765\u907F\u514D\u9012\u5F52<code>props</code>\u5B50\u5C5E\u6027\u7684\u60C5\u51B5\uFF0C\u8FD9\u5C5E\u4E8E\u54CD\u5E94\u5F0F\u4F18\u5316\u7684\u4E00\u79CD\u624B\u6BB5\u3002\u5728\u4EE3\u7801\u6700\u540E\uFF0C\u53C8\u8C03\u7528\u4E86<code>toggleObserving(true)</code>\uFF0C\u628A<code>shouldObserve</code>\u7684\u503C\u8FD8\u539F\u3002</p><p><code>props</code>\u6821\u9A8C\u7684\u65F6\u5019\uFF1A \u6211\u4EEC\u5148\u6765\u770B<code>props</code>\u63D0\u4F9B\u4E86<code>default</code>\u9ED8\u8BA4\u503C\uFF0C\u4E14\u9ED8\u8BA4\u503C\u8FD4\u56DE\u4E86\u5BF9\u8C61\u6216\u8005\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">point</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
      <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span>
      <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u4EE5\u4E0A<code>point</code>\u548C<code>list</code><strong>\u53D6\u9ED8\u8BA4\u503C</strong>\u7684\u60C5\u51B5\uFF0C\u8FD9\u4E2A\u65F6\u5019\u7684<code>props</code>\u503C\u4E0E\u7236\u7EC4\u4EF6\u6CA1\u6709\u5173\u7CFB\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u65F6\u5019\u6211\u4EEC<strong>\u9700\u8981</strong><code>toggleObserving(true)</code>\uFF0C\u5728<code>observe</code>\u540E\u518D\u628A<code>shouldObserve</code>\u53D8\u91CF\u8BBE\u7F6E\u4E3A\u539F\u6765\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">validateProp</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u4EE3\u7801</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token function">getPropDefaultValue</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> prevShouldObserve <span class="token operator">=</span> shouldObserve 
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token function">observe</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span>prevShouldObserve<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>props</code>\u66F4\u65B0\u7684\u65F6\u5019\uFF1A \u5F53\u7236\u7EC4\u4EF6\u66F4\u65B0\u7684\u65F6\u5019\uFF0C\u4F1A\u8C03\u7528<code>updateChildComponent()</code>\u65B9\u6CD5\uFF0C\u7528\u6765\u66F4\u65B0\u5B50\u7EC4\u4EF6\u7684<code>props</code>\u503C\uFF0C\u8FD9\u4E2A\u65F6\u5019\u5176\u5B9E\u548C<code>props</code>\u521D\u59CB\u5316\u7684\u903B\u8F91\u4E00\u6837\uFF0C\u6211\u4EEC\u540C\u6837\u4E0D\u9700\u8981\u5BF9\u6307\u5411\u7236\u7EC4\u4EF6\u7684\u5BF9\u8C61\u6216\u6570\u7EC4<code>props</code>\u8FDB\u884C\u9012\u5F52\u5B50\u5C5E\u6027<code>observe</code>\u7684\u8FC7\u7A0B\uFF0C\u56E0\u6B64\u8FD9\u91CC\u9700\u8981\u6267\u884C<code>toggleObserving(false)</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">updateChildComponent</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// update props</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>propsData <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>_props
    <span class="token keyword">const</span> propKeys <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>_propKeys <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> propKeys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> propKeys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">const</span> <span class="token literal-property property">propOptions</span><span class="token operator">:</span> any <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token comment">// wtf flow?</span>
      props<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">validateProp</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> propOptions<span class="token punctuation">,</span> propsData<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">toggleObserving</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>propsData <span class="token operator">=</span> propsData
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6574\u4F53\u5904\u7406\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6574\u4F53\u5904\u7406\u6D41\u7A0B" aria-hidden="true">#</a> \u6574\u4F53\u5904\u7406\u6D41\u7A0B</h3><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/vue/props.png" alt=""></p><h2 id="methods\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#methods\u5904\u7406" aria-hidden="true">#</a> methods\u5904\u7406</h2><p>\u5BF9\u4E8Emethod\u7684\u5904\u7406\u5904\u5728props\u4E4B\u540E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u4EE3\u7801</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span> <span class="token function">initMethods</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>methods<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initMethods</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">methods</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F00\u53D1\u73AF\u5883\u4E0B\u7684\u4E00\u4E9B\u5224\u65AD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// method\u4E0D\u662F\u51FD\u6570\u7C7B\u578B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Method &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; has type &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; in the component definition. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Did you reference the function correctly?</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u76F8\u540C\u540D\u5B57\u5DF2\u7ECF\u5728props\u58F0\u660E\u4F7F\u7528\u5230</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Method &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; has already been defined as a prop.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u547D\u540D\u548C\u5DF2\u6709\u7684\u5B9E\u4F8B\u65B9\u6CD5\u51B2\u7A81</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Method &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; conflicts with an existing Vue instance method. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Avoid defining component methods that start with _ or $.</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> noop <span class="token operator">:</span> <span class="token function">bind</span><span class="token punctuation">(</span>methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>initMethods\u5728\u8FDB\u884C\u4E00\u4E9B\u68C0\u67E5\u540E\u6838\u5FC3\u4EE3\u7801\u662F\u5C06\u65B9\u6CD5\u7684this\u7ED1\u5B9A\u5230vm\u7EC4\u4EF6\u5B9E\u4F8B\u4E0A\uFF0C\u8FD9\u6837\u5728method\u51FD\u6570\u5185\u90E8\u53EF\u4EE5\u5F88\u65B9\u4FBF\u8BBF\u95EE\u5F53\u524D\u5B9E\u4F8B\u7684\u5176\u4ED6\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// function noop() {}  \u7A7A\u51FD\u6570</span>

vm<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> noop <span class="token operator">:</span> <span class="token function">bind</span><span class="token punctuation">(</span>methods<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="data\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#data\u5904\u7406" aria-hidden="true">#</a> data\u5904\u7406</h2><p>data\u7684\u524D\u7F6E\u5904\u7406\uFF0C\u533A\u5206\u662F\u6839\u5B9E\u4F8B\u8FD8\u662F\u5B50\u7EC4\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initState</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initData</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">observe</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initData</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>data
  <span class="token comment">// data\u4E3A\u51FD\u6570\uFF0C\u5219\u8C03\u7528\u8FD4\u56DE\u5BF9\u8C61</span>
  data <span class="token operator">=</span> vm<span class="token punctuation">.</span>_data <span class="token operator">=</span> <span class="token keyword">typeof</span> data <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
    <span class="token operator">?</span> <span class="token function">getData</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
    <span class="token operator">:</span> data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
      <span class="token string">&#39;data functions should return an object:\\n&#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&#39;</span><span class="token punctuation">,</span>
      vm
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// proxy data on instance</span>
  <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props
  <span class="token keyword">const</span> methods <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>methods
  <span class="token keyword">let</span> i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token comment">// \u547D\u540D\u4E0D\u80FD\u548Cmethod\u51B2\u7A81</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Method &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; has already been defined as a data property.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u547D\u540D\u4E0D\u80FD\u548Cprops\u51B2\u7A81</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The data property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already declared as a prop. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Use prop default value instead.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token comment">// \u4E0D\u80FD\u4EE5$\u548C_\u5F00\u5934</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isReserved</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// _data\u8BBF\u95EE\u4EE3\u7406</span>
      <span class="token function">proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_data</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6570\u636E\u54CD\u5E94\u5F0F</span>
  <span class="token function">observe</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* asRootData */</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>initData\u7684\u6B65\u9AA4\u4E3B\u8981\u5982\u4E0B</p><ul><li>\u7C7B\u578B\u5224\u65AD\u53D6\u503C <code>Function.call(vm,vm)</code></li><li>\u547D\u540D\u51B2\u7A81\u5224\u65AD</li><li>proxy\u8BBF\u95EE\u4EE3\u7406</li><li>\u6570\u636E\u54CD\u5E94\u5F0F</li></ul><h2 id="computed\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#computed\u5904\u7406" aria-hidden="true">#</a> computed\u5904\u7406</h2><h3 id="computed\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#computed\u521D\u59CB\u5316" aria-hidden="true">#</a> computed\u521D\u59CB\u5316</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// _computedWatchers\u7F13\u5B58\u5F53\u524D\u5B9E\u4F8B\u7684\u6240\u6709computed\u5BF9\u5E94\u7684watcher</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
  <span class="token comment">// computed properties are just getters during SSR</span>
  <span class="token keyword">const</span> isSSR <span class="token operator">=</span> <span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token comment">// \u51FD\u6570\u76F4\u63A5\u53D6\uFF0C\u5426\u5219\u53D6\u5BF9\u8C61\u7684get\u51FD\u6570</span>
    <span class="token keyword">const</span> getter <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> userDef <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get
   	<span class="token comment">// \u5F00\u53D1\u73AF\u5883\u4E0B\u7684null\u5224\u65AD\u548C\u62A5\u9519</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> getter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Getter is missing for computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        vm
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u521B\u5EFA\u5BF9\u5E94\u7684Watcher\u5B9E\u4F8B</span>
      watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
        vm<span class="token punctuation">,</span>
        getter <span class="token operator">||</span> noop<span class="token punctuation">,</span>
        noop<span class="token punctuation">,</span>
        computedWatcherOptions
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// component-defined computed properties are already defined on the</span>
    <span class="token comment">// component prototype. We only need to define computed properties defined</span>
    <span class="token comment">// at instantiation here.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u547D\u540D\u4E0D\u5B58\u5728vm\u4E0A\u5219\u58F0\u660Ecomputed</span>
      <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4E8E\u5B9E\u4F8B\u4E0A\uFF0C\u5224\u65AD\u662F\u5426\u548Cdata/props\u51B2\u7A81</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined in data.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined as a prop.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,81),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","vue.html.vue"]]);export{r as default};
