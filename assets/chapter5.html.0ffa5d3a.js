import{_ as p,r as e,o,c,a as n,e as l,d as s,b as a}from"./app.ede35192.js";const i={},u=s(`<h1 id="\u975E\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u975E\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848" aria-hidden="true">#</a> \u975E\u539F\u59CB\u503C\u7684\u54CD\u5E94\u5F0F\u65B9\u6848</h1><p>\u{1F516} \u5B9E\u73B0\u54CD\u5E94\u5F0F\u6570\u636E\u4E0D\u6B62\u662F\u5355\u7EAF\u5730\u5B9E\u73B0 get/set \u7684\u62E6\u622A\u64CD\u4F5C\u3002\u8FD8\u9700\u8981\u8003\u8651\u904D\u5386\u3001\u6570\u7EC4\u4EE5\u53CA\u96C6\u5408\u7C7B\u578B\u7684\u652F\u6301\u3002</p><h2 id="\u7406\u89E3-proxy-\u548C-reflect" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-proxy-\u548C-reflect" aria-hidden="true">#</a> \u7406\u89E3 Proxy \u548C Reflect</h2><h3 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h3><ul><li><p>Proxy\uFF1A\u521B\u5EFA\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\uFF0C\u5B83\u80FD\u591F\u5B9E\u73B0\u5BF9<strong>\u5176\u4ED6\u5BF9\u8C61</strong>\u7684\u4EE3\u7406\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0CProxy\u53EA\u80FD\u4EE3\u7406\u5BF9\u8C61\uFF0C\u65E0\u6CD5\u4EE3\u7406\u975E\u5BF9\u8C61\u503C\uFF0C\u6BD4\u5982\u5B57\u7B26\u4E32\u3001\u5E03\u5C14\u503C\u7B49\u7B49</p></li><li><p>\u4EE3\u7406\uFF1A\u6307\u5BF9\u4E00\u4E2A\u5BF9\u8C61<strong>\u57FA\u672C\u8BED\u4E49</strong>\u7684\u4EE3\u7406\u3002\u5B83\u5141\u8BB8\u6211\u4EEC<strong>\u62E6\u622A</strong>\u5E76<strong>\u91CD\u65B0\u5B9A\u4E49</strong>\u4E00\u4E2A\u5BF9\u8C61\u7684\u57FA\u672C\u64CD\u4F5C\u3002</p></li><li><p>\u57FA\u672C\u8BED\u4E49\uFF1A\u5BF9\u8C61\u5C5E\u6027\u503C\u7684\u8BFB\u53D6\u3001\u8BBE\u7F6E\uFF0C\u51FD\u6570\u7684\u8C03\u7528\u3002</p></li></ul><h3 id="\u57FA\u672C\u64CD\u4F5C\u4E0E\u590D\u5408\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u64CD\u4F5C\u4E0E\u590D\u5408\u64CD\u4F5C" aria-hidden="true">#</a> \u57FA\u672C\u64CD\u4F5C\u4E0E\u590D\u5408\u64CD\u4F5C</h3><h4 id="\u57FA\u672C\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u64CD\u4F5C" aria-hidden="true">#</a> \u57FA\u672C\u64CD\u4F5C</h4><p>\u6BD4\u5982\u8BFB\u53D6\u3001\u8BBE\u7F6E\u5BF9\u8C61\u5C5E\u6027\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> obj<span class="token punctuation">.</span>foo <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u26A0\uFE0F\u6CE8\u610F\uFF1A\u6211\u4EEC\u8FD9\u91CC\u64CD\u4F5C\u7684\u662F\u4EE3\u7406\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>  <span class="token comment">// 1</span>
p<span class="token punctuation">.</span>foo<span class="token operator">++</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>  <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570\u4E5F\u662F\u5BF9\u8C61\uFF0C\u6240\u4EE5\u8C03\u7528\u51FD\u6570\u4E5F\u662F\u5BF9\u4E00\u4E2A\u5BF9\u8C61\u7684\u57FA\u672C\u64CD\u4F5C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662F\uFF1A&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> thisArg<span class="token punctuation">,</span> argArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">target</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> <span class="token operator">...</span>argArray<span class="token punctuation">)</span>  <span class="token comment">// \u6211\u662FJerry</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">p2</span><span class="token punctuation">(</span><span class="token string">&#39;Jerry&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u590D\u5408\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u590D\u5408\u64CD\u4F5C" aria-hidden="true">#</a> \u590D\u5408\u64CD\u4F5C</h4><p>\u8C03\u7528\u5BF9\u8C61\u4E0B\u7684\u65B9\u6CD5\u5C31\u662F\u5178\u578B\u7684\u975E\u57FA\u672C\u64CD\u4F5C\uFF0C\u5373\u590D\u5408\u64CD\u4F5C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>obj<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B9E\u9645\u4E0A\uFF0C\u8C03\u7528\u5BF9\u8C61\u4E0B\u65B9\u6CD5\u7531<strong>\u4E24\u4E2A\u57FA\u672C\u8BED\u4E49</strong>\u7EC4\u6210\u3002\u5206\u522B\u662F\u5C5E\u6027\u7684 get \u548C\u51FD\u6570\u8C03\u7528\u3002</p><blockquote><p>\u51FD\u6570\u7684\u8C03\u7528\u662F\u57FA\u672C\u8BED\u4E49\u7684\u64CD\u4F5C\uFF0C\u800C\u5BF9\u8C61\u4E0B\u65B9\u6CD5\u7684\u8C03\u7528\u662F\u590D\u5408\u64CD\u4F5C</p></blockquote><h3 id="reflect" tabindex="-1"><a class="header-anchor" href="#reflect" aria-hidden="true">#</a> Reflect</h3><p>Reflect \u662F\u4E00\u4E2A\u5168\u5C40\u5BF9\u8C61\uFF0C\u5176\u4E0B\u6709\u5F88\u591A\u65B9\u6CD5\u3002<strong>\u4EFB\u4F55\u5728 Proxy \u7684\u62E6\u622A\u5668\u80FD\u627E\u5230\u7684\u65B9\u6CD5\uFF0C\u90FD\u80FD\u591F\u5728 Reflect \u4E2D\u627E\u5230\u540C\u540D\u51FD\u6570\u3002</strong></p><p>\u4E0D\u540C\u7684\u662F\uFF0C\u6BD4\u5982 Reflect \u7684 get \u65B9\u6CD5\u80FD\u591F\u63A5\u6536\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0CthisArg\u5373\u4E0A\u4E0B\u6587\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token keyword">get</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56E0\u4E3A get \u62E6\u622A\uFF1Areturn target[key]</span>
    <span class="token comment">// \u8FD9\u91CC this \u6307\u5411\u539F\u59CB\u5BF9\u8C61 obj</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token comment">// \u8FD9\u91CC\u662F\u4F7F\u7528 target \u4E5F\u5C31\u662F\u539F\u59CB\u5BF9\u8C61\u83B7\u53D6\u5C5E\u6027\uFF0C\u5373 obj[key]</span>
    <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/*...*/</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u666E\u901A\u5C5E\u6027 p[prop] \u901A\u8FC7\u4EE3\u7406\u5BF9\u8C61\u8BBF\u95EE\uFF0C\u89E6\u53D1 get \u62E6\u622A\uFF0C\u6536\u96C6\u4F9D\u8D56</span>
  <span class="token comment">// getter obj[prop] \u901A\u8FC7\u539F\u59CB\u5BF9\u8C61\u8BBF\u95EE\uFF0C\u65E0\u6CD5\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>  <span class="token comment">// obj getter[foo]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span>foo<span class="token operator">++</span> <span class="token comment">// \u526F\u4F5C\u7528\u51FD\u6570\u4E0D\u4F1A\u91CD\u65B0\u6267\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>bar \u5C5E\u6027\u4F5C\u4E3A\u8BBF\u95EE\u5668\u5C5E\u6027\uFF0C\u5F53\u6211\u4EEC\u901A\u8FC7 p.bar \u8BFB\u53D6\u65F6\uFF0Cobj getter \u7684\u6267\u884C\u83B7\u53D6\u4E86 foo \u5C5E\u6027\u3002</p><p>\u{1F41B} \u6211\u4EEC\u5E0C\u671B\u5C5E\u6027 foo \u4E5F\u80FD\u6536\u96C6\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\u6700\u7EC8\u6211\u4EEC\u662F\u7528 obj.foo \u5373<strong>\u539F\u59CB\u5BF9\u8C61</strong>\u5728\u526F\u4F5C\u7528\u51FD\u6570\u5F53\u4E2D\u8BBF\u95EE\u7684 foo\u5C5E\u6027\uFF0C\u6240\u4EE5\u8BF4\u4E0D\u4F1A\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB\u7684\u3002</p><p>\u{1F525} \u5982\u679C\u6211\u4EEC\u628A\u8BBF\u95EE\u5668\u5C5E\u6027 bar \u7684 getter \u51FD\u6570\u5185\u7684 this \u503C\u5411\u4EE3\u7406\u5BF9\u8C61 p\uFF0C\u95EE\u9898\u5C31\u89E3\u51B3\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u62E6\u622A\u8BFB\u53D6\u64CD\u4F5C\uFF0C\u6DFB\u52A0\u7B2C\u4E09\u4E2A\u53C2\u6570 receiver\uFF0C\u5373\u4EE3\u7406\u5BF9\u8C61</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/*...*/</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u4E8E\u8FD9\u4E2A\u539F\u56E0\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528 Reflect.* \u65B9\u6CD5\u6765\u4F20\u9012 thisArg\u3002</p><h2 id="javascript-\u5BF9\u8C61\u53CA-proxy-\u7684\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#javascript-\u5BF9\u8C61\u53CA-proxy-\u7684\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> JavaScript \u5BF9\u8C61\u53CA Proxy \u7684\u5DE5\u4F5C\u539F\u7406</h2><h3 id="javascript-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#javascript-\u5BF9\u8C61" aria-hidden="true">#</a> JavaScript \u5BF9\u8C61</h3><p>JavaScript \u4E2D\u4E00\u5207\u7686\u5BF9\u8C61\uFF0C\u5206\u522B\u662F\u5E38\u89C4\u5BF9\u8C61\uFF08ordinary object\uFF09\u548C\u5F02\u8D28\u5BF9\u8C61\uFF08exotic object\uFF09\u3002</p><p>\u{1F516} \u5185\u90E8\u65B9\u6CD5\u6216\u5185\u90E8\u69FD\uFF1A\u5728 JavaScript \u4E2D\uFF0C\u5BF9\u8C61\u7684\u5B9E\u9645\u8BED\u4E49\u662F\u7531\u5BF9\u8C61\u7684\u5185\u90E8\u65B9\u6CD5\uFF08internal method\uFF09\u6307\u5B9A\u7684\u3002\u6240\u8C13\u5185\u90E8\u65B9\u6CD5\uFF0C\u6307\u7684\u662F\u5F53\u6211\u4EEC\u5BF9\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u64CD\u4F5C\u65F6\u5728\u5F15\u64CE\u5185\u90E8\u8C03\u7528\u7684\u65B9\u6CD5\u3002</p><p><em>\u6BD4\u5982\u8BBF\u95EE\u5BF9\u8C61\u5C5E\u6027\u65F6\uFF0C\u5F15\u64CE\u5185\u90E8\u4F1A\u8C03\u7528 [[Get]] \u8FD9\u4E2A\u5185\u90E8\u65B9\u6CD5\u6765\u8BFB\u53D6\u5C5E\u6027\u503C\u3002ECMAScript \u4F7F\u7528 [[xxx]] \u6765\u4EE3\u8868\u5185\u90E8\u65B9\u6CD5\u6216\u5185\u90E8\u69FD</em></p>`,30),k=a("\u{1F310} "),r={href:"https://tc39.es/ecma262/#sec-invariants-of-the-essential-internal-methods",target:"_blank",rel:"noopener noreferrer"},d=a("JavaScript \u5BF9\u8C61\u5FC5\u987B\u90E8\u7F72\u768411\u4E2A\u5FC5\u8981\u7684\u548C\u989D\u5916\u7684\u5185\u90E8\u65B9\u6CD5 (opens new window)"),v=s(`<h3 id="\u533A\u5206\u666E\u901A\u5BF9\u8C61\u4E0E\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u533A\u5206\u666E\u901A\u5BF9\u8C61\u4E0E\u51FD\u6570" aria-hidden="true">#</a> \u533A\u5206\u666E\u901A\u5BF9\u8C61\u4E0E\u51FD\u6570</h3><p>\u{1F525} \u901A\u8FC7\u5185\u90E8\u65B9\u6CD5\u548C\u5185\u90E8\u69FD\u6765\u533A\u5206\u3002\u4F8B\u5982\u51FD\u6570\u5BF9\u8C61\u4F1A\u90E8\u7F72\u5185\u90E8\u65B9\u6CD5 [[Call]]\uFF0C\u800C\u666E\u901A\u5BF9\u8C61\u5219\u4E0D\u4F1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
a<span class="token punctuation">.</span>call <span class="token comment">// \u0192 call() { [native code] }</span>
b<span class="token punctuation">.</span>call <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u666E\u901A\u7684\u5BF9\u8C61\u4E0E\u5F02\u8D28\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u7684\u5BF9\u8C61\u4E0E\u5F02\u8D28\u5BF9\u8C61" aria-hidden="true">#</a> \u666E\u901A\u7684\u5BF9\u8C61\u4E0E\u5F02\u8D28\u5BF9\u8C61</h3><p>\u5185\u90E8\u65B9\u6CD5\u5177\u6709\u591A\u6001\u6027\uFF0C\u4F8B\u5982\u666E\u901A\u5BF9\u8C61\u548C Proxy \u5BF9\u8C61\u90FD\u90E8\u7F72\u4E86 [[Get]] \u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u4F46\u662F\u5B83\u4EEC\u7684\u903B\u8F91\u662F\u4E0D\u540C\u7684</p><div class="custom-container tip"><p class="custom-container-title">\u666E\u901A\u5BF9\u8C61</p><ul><li>\u5BF9\u4E8E11\u4E2A\u5FC5\u8981\u7684\u5185\u90E8\u65B9\u6CD5\uFF0C\u5FC5\u987B\u4F7F\u7528 ECMA \u89C4\u8303 10.1.x \u8282\u7ED9\u51FA\u7684\u5B9A\u4E49\u5B9E\u73B0\uFF1B</li><li>\u5BF9\u4E8E\u5185\u90E8\u65B9\u6CD5 [[Call]]\uFF0C\u5FC5\u987B\u4F7F\u7528 ECMA \u89C4\u8303 10.2.1 \u8282\u7ED9\u51FA\u7684\u5B9A\u4E49\u5B9E\u73B0\uFF1B</li><li>\u5BF9\u4E8E\u5185\u90E8\u65B9\u6CD5 [[Construct]]\uFF0C\u5FC5\u987B\u4F7F\u7528 ECMA \u89C4\u830310.2.2 \u8282\u7ED9\u51FA\u7684\u5B9A\u4E49\u5B9E\u73B0\uFF1B</li></ul></div><p>\u6240\u6709\u4E0D\u7B26\u5408\u8FD9\u4E09\u70B9\u8981\u6C42\u7684\u5BF9\u8C61\u90FD\u662F\u5F02\u8D28\u5BF9\u8C61\u3002\u4F8B\u5982 Proxy \u5BF9\u8C61\u7684\u5185\u90E8\u65B9\u6CD5 [[Get]] \u6CA1\u6709\u4F7F\u7528 ECMA \u89C4\u8303\u7684 10.1.8 \u8282\u7ED9\u51FA\u7684\u5B9A\u4E49\u5B9E\u73B0\uFF0C\u6240\u4EE5 Proxy \u662F\u4E00\u4E2A\u5F02\u8D28\u5BF9\u8C61\u3002</p><p>\u5982\u679C\u5728\u521B\u5EFA\u5BF9\u8C61\u65F6\u6CA1\u6709\u6307\u5B9A\u5BF9\u5E94\u7684\u62E6\u622A\u51FD\u6570\uFF0C\u4F8B\u5982\u6CA1\u6709\u6307\u5B9A get() \u62E6\u622A\u51FD\u6570\uFF0C\u90A3\u4E48\u5F53\u6211\u4EEC\u901A\u8FC7\u4EE3\u7406\u5BF9\u8C61\u8BBF\u95EE\u5C5E\u6027\u503C\u65F6\uFF0C\u4EE3\u7406\u5BF9\u8C61\u7684\u5185\u90E8\u65B9\u6CD5 [[Get]] \u4F1A\u8C03\u7528\u539F\u59CB\u5BF9\u8C61\u7684\u5185\u90E8\u65B9\u6CD5 [[Get]] \u6765\u83B7\u53D6\u5C5E\u6027\u503C\uFF0C\u8FD9\u5176\u5B9E\u5C31\u662F<strong>\u4EE3\u7406\u900F\u660E\u6027\u8D28</strong>\u3002</p><p>\u{1F525} \u6240\u4EE5\uFF0C\u4EE3\u7406\u5BF9\u8C61\u662F\u7528\u6765\u5B9A\u4E49<strong>\u4EE3\u7406\u5BF9\u8C61\u672C\u8EAB</strong>\u7684\u5185\u90E8\u65B9\u6CD5\u548C\u884C\u4E3A\uFF0C\u800C\u4E0D\u662F\u7528\u6765\u6307\u5B9A\u88AB\u4EE3\u7406\u5BF9\u8C61\uFF08\u539F\u59CB\u5BF9\u8C61\uFF09\u7684\u5185\u90E8\u65B9\u6CD5\u548C\u884C\u4E3A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>  <span class="token comment">// 1</span>
<span class="token keyword">delete</span> p<span class="token punctuation">.</span>foo
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>  <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5982\u4F55\u4EE3\u7406-object" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u4EE3\u7406-object" aria-hidden="true">#</a> \u5982\u4F55\u4EE3\u7406 Object</h2><h3 id="\u4EE3\u7406\u7684\u672C\u8D28" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7406\u7684\u672C\u8D28" aria-hidden="true">#</a> \u4EE3\u7406\u7684\u672C\u8D28</h3><ul><li>\u4EE3\u7406\u5BF9\u8C61\u7684\u672C\u8D28\uFF0C\u5C31\u662F\u67E5\u9605\u89C4\u8303\u5BF9\u5E94\u7684\u53EF\u62E6\u622A\u7684\u57FA\u672C\u65B9\u6CD5\uFF1B</li><li>\u8FD8\u8981\u5206\u6790\u590D\u5408\u64CD\u4F5C\u6240\u4F9D\u8D56\u7684\u57FA\u672C\u64CD\u4F5C\uFF0C\u901A\u8FC7\u57FA\u672C\u64CD\u4F5C\u7684\u62E6\u622A\u65B9\u6CD5\u95F4\u63A5\u5730\u5904\u7406\u590D\u5408\u64CD\u4F5C\u3002</li></ul><h3 id="\u5BF9\u8C61\u7684\u6240\u6709\u8BFB\u53D6\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u6240\u6709\u8BFB\u53D6\u64CD\u4F5C" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u6240\u6709\u8BFB\u53D6\u64CD\u4F5C</h3><div class="custom-container tip"><p class="custom-container-title">\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\u53EF\u80FD\u5B58\u5728\u7684\u8BFB\u53D6\u64CD\u4F5C\uFF1A</p><ol><li><p>\u8BBF\u95EE\u5C5E\u6027\uFF1Aobj.foo</p><p>\u901A\u8FC7 <strong>get</strong> \u62E6\u622A\u51FD\u6570\u5B9E\u73B0</p></li><li><p>\u5224\u65AD\u5BF9\u8C61\u6216\u539F\u578B\u4E0A\u662F\u5426\u5B58\u5728\u7ED9\u5B9A\u7684 key \uFF1Akey in obj</p><p>in \u64CD\u4F5C\u7B26\u7684\u8FD0\u7B97\u7ED3\u679C\u4E0A\u901A\u8FC7\u8C03\u7528\u4E00\u4E2A\u53EB\u505A <strong>HasProperty</strong> \u7684\u62BD\u8C61\u65B9\u6CD5\u5F97\u5230\u7684\uFF0C[[HasProperty]] \u5BF9\u5E94\u7684\u62E6\u622A\u51FD\u6570\u540D\u53EB has</p></li><li><p>\u4F7F\u7528 for...in \u5FAA\u73AF\u904D\u5386\u5BF9\u8C61\uFF1Afor (const key in obj) {}</p><p>\u5728 generator \u51FD\u6570\u4E2D\uFF0C\u901A\u8FC7 <strong>Reflect.ownkey</strong>s \u83B7\u53D6\u5230\u5BF9\u8C61\u81EA\u8EAB\u62E5\u6709\u7684\u952E\u540E\uFF0C\u6536\u96C6\u904D\u5386\uFF0C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\u3002</p></li></ol></div><h3 id="\u54CD\u5E94\u5F0F\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5F0F\u5904\u7406" aria-hidden="true">#</a> \u54CD\u5E94\u5F0F\u5904\u7406</h3><p>\u{1F525} \u5F53\u4E3A\u5BF9\u8C61\u6DFB\u52A0\u6216\u8005\u5220\u9664\u5C5E\u6027\u65F6\uFF0C<strong>key \u7684\u6570\u91CF</strong>\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u56E0\u6B64\u90FD\u8981\u91CD\u65B0\u6267\u884C for...in \u5BF9\u5E94\u7684 ITERATE_KEY \u6240\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570\u3002</p><p>\u{1F41B} \u4F46\u662F\u65E0\u8BBA\u65F6\u589E\u52A0\u8FD8\u662F\u8BBE\u7F6E\u5BF9\u8C61\u5C5E\u6027\u7684\u57FA\u672C\u8BED\u4E49\u90FD\u662F [[Set]] \uFF0C\u6240\u4EE5\u9700\u8981\u5728\u8C03\u7528 trigger \u51FD\u6570\u65F6\u4F20\u9012\u5BF9\u5E94\u7684\u64CD\u4F5C\u7C7B\u578B\u8FDB\u884C\u533A\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B58\u50A8\u526F\u4F5C\u7528\u51FD\u6570\u7684\u6876</span>
<span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5C5E\u6027\u4E0D\u5B58\u5728\uFF0C\u5219\u8BF4\u660E\u662F\u5728\u6DFB\u52A0\u65B0\u7684\u5C5E\u6027\uFF0C\u5426\u5219\u662F\u8BBE\u7F6E\u5DF2\u5B58\u5728\u7684\u5C5E\u6027</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token comment">// \u5C06 type \u4F5C\u4E3A\u7B2C\u4E09\u4E2A\u53C2\u6570\u4F20\u9012\u7ED9 trigger \u51FD\u6570</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// key in obj \u7684\u4F9D\u8D56\u6536\u96C6</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// for...in \u5FAA\u73AF\u7684\u4F9D\u8D56\u6536\u96C6</span>
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5220\u9664\u5BF9\u8C61\u952E\u7684\u62E6\u622A\uFF0C\u89E6\u53D1\u5FAA\u73AF\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activeEffect<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">let</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    bucket<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">(</span>depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> deps <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span>deps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  deps<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activeEffect<span class="token punctuation">)</span>
  activeEffect<span class="token punctuation">.</span>deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> effects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

  <span class="token keyword">const</span> effectsToRun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  effects <span class="token operator">&amp;&amp;</span> effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6DFB\u52A0\u6216\u5220\u9664\u5F71\u54CD\u4E86 key, \u53D1\u5FAA\u73AF\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  effectsToRun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span>scheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">scheduler</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> activeEffect
<span class="token keyword">const</span> effectStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">effectFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">cleanup</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    activeEffect <span class="token operator">=</span> effectFn
    effectStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    effectStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    activeEffect <span class="token operator">=</span> effectStack<span class="token punctuation">[</span>effectStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
  effectFn<span class="token punctuation">.</span>options <span class="token operator">=</span> options
  effectFn<span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> effectFn
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> effectFn<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> deps <span class="token operator">=</span> effectFn<span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    deps<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  effectFn<span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token comment">// =================================================================</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;key: &#39;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>  <span class="token comment">// key: foo</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

p<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">123</span>  <span class="token comment">// ADD bar\uFF0C\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\uFF0Ckey: foo, key: bar</span>
<span class="token keyword">delete</span> p<span class="token punctuation">.</span>foo  <span class="token comment">// DELETE foo\uFF0C\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\uFF0Ckey: bar</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5408\u7406\u5730\u89E6\u53D1\u54CD\u5E94" tabindex="-1"><a class="header-anchor" href="#\u5408\u7406\u5730\u89E6\u53D1\u54CD\u5E94" aria-hidden="true">#</a> \u5408\u7406\u5730\u89E6\u53D1\u54CD\u5E94</h2><p>\u526F\u4F5C\u7528\u51FD\u6570\u7684\u6267\u884C\u662F\u9700\u8981\u4F18\u5316\u7684\u3002</p><h3 id="\u503C\u53D8\u5316\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u503C\u53D8\u5316\u5224\u65AD" aria-hidden="true">#</a> \u503C\u53D8\u5316\u5224\u65AD</h3><p>\u9996\u5148\u662F\u503C\u5982\u679C\u4E3A\u771F\u6B63\u53D1\u751F\u53D8\u5316\u7684\u60C5\u51B5\uFF0C\u8FD9\u4E2A\u8FD8\u9700\u8981\u8003\u8651 NaN \u4E0D\u7B49\u4E8E\u81EA\u8EAB\u7684\u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span>  <span class="token comment">// false</span>
<span class="token number">NaN</span> <span class="token operator">!==</span> <span class="token number">NaN</span>  <span class="token comment">// true</span>

<span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
  <span class="token comment">// \u6BD4\u8F83\u65B0\u503C\u548C\u65E7\u503C\uFF0C\u53EA\u6709\u5B83\u4EEC\u4E0D\u5168\u7B49\uFF0C\u5E76\u4E14\u90FD\u4E0D\u662FNaN\u7684\u65F6\u5019\u624D\u89E6\u53D1\u54CD\u5E94</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> newVal <span class="token operator">===</span> newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u578B\u94FE\u5C5E\u6027\u8BBF\u95EE" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u94FE\u5C5E\u6027\u8BBF\u95EE" aria-hidden="true">#</a> \u539F\u578B\u94FE\u5C5E\u6027\u8BBF\u95EE</h3><p>\u4EE5\u53CA\u8BBF\u95EE\u539F\u578B\u94FE\u4E0A\u7684\u5C5E\u6027\u5BFC\u81F4\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\u4E24\u6B21\u7684\u95EE\u9898\u3002\uFF08\u4F7F\u7528\u4EE3\u7406\u5BF9\u8C61\u4F5C\u4E3A\u539F\u578B\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> proto <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> parent<span class="token punctuation">)</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Reflect.get(obj, &#39;bar&#39;, receiver)</span>
  <span class="token comment">// child \u4EE3\u7406\u7684\u5BF9\u8C61 obj \u672C\u8EAB\u6CA1\u6709\u8BE5\u5C5E\u6027\uFF0C\u4F1A\u627E\u539F\u578B parent\uFF0Cparent\u672C\u8EAB\u4E5F\u662F\u4EE3\u7406\u5BF9\u8C61</span>
  <span class="token comment">// \u6700\u7EC8\uFF0Cchild.bar \u548C paren.bar \u90FD\u4E0E\u526F\u4F5C\u7528\u51FD\u6570\u5EFA\u7ACB\u4E86\u54CD\u5E94\u5F0F\u8054\u7CFB</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>  <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// Reflect.set(obj, &#39;bar&#39;, 2, receiver\uFF09</span>
<span class="token comment">// \u8BBE\u7F6E\u7684 bar \u5C5E\u6027\u4E0D\u5B58\u4E8E\u5BF9\u8C61\u4E0A\uFF0C\u4F1A\u5728\u539F\u578B\u8C03\u7528\u5176parent [[Set]]\uFF0Cparent\u662F\u4EE3\u7406\u5BF9\u8C61\uFF0C\u62E6\u622A\u89E6\u53D1trigger</span>
child<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">//\u4F1A\u5BFC\u81F4\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\u4E24\u6B21 child.bar + parent.bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4EE3\u7406\u5BF9\u8C61\u7684 set \u62E6\u622A\u5BF9\u8C61\u89E6\u53D1\u65F6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728 child \u8FDB\u884C set </span>
<span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// target \u539F\u59CB\u5BF9\u8C61 obj</span>
  <span class="token comment">// receiver \u662F\u4EE3\u7406\u5BF9\u8C61 child</span>
<span class="token punctuation">}</span>

<span class="token comment">// child \u6CA1\u6709\u8BE5\u5C5E\u6027\uFF0C\u5728\u539F\u578B\u94FE\u7684 parent \u4E0A\u8FDB\u884C set</span>
<span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// target \u539F\u59CB\u5BF9\u8C61 proto</span>
  <span class="token comment">// receiver \u4ECD\u7136\u662F\u4EE3\u7406\u5BF9\u8C61 child</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F525} \u89E3\u51B3\u529E\u6CD5\uFF1A\u5224\u65AD receiver \u662F\u5426\u662F target \u7684\u4EE3\u7406\u5BF9\u8C61\u5373\u53EF\uFF0C\u53EA\u6709\u6EE1\u8DB3\u8FD9\u4E2A\u6761\u4EF6\u624D\u89E6\u53D1\u66F4\u65B0\uFF0C\u8FD9\u6837\u5C31\u80FD\u5C4F\u853D\u7531\u539F\u578B\u5F15\u8D77\u7684\u66F4\u65B0\u3002\u4E3A\u6B64\u6211\u4EEC\u9700\u8981\u5728\u4EE3\u7406\u5BF9\u8C61\u4E2D\u4FDD\u5B58\u4E00\u4EFD\u539F\u59CB\u5BF9\u8C61\u7684\u6570\u636E\uFF0C\u65B9\u4FBF\u540E\u7EED\u7684\u5224\u65AD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8865\u5145 raw \u5C5E\u6027\u83B7\u5F97\u539F\u59CB\u5BF9\u8C61</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target
      <span class="token punctuation">}</span>
      <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token comment">// \u5224\u65AD receiver \u662F\u5426\u4E3A target \u7684\u4EE3\u7406\u5BF9\u8C61\uFF0C\u6EE1\u8DB3\u624D\u89E6\u53D1\u66F4\u65B0</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> receiver<span class="token punctuation">.</span>raw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> newVal <span class="token operator">===</span> newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/*...*/</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// ==============================================================</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> parent<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> parent<span class="token punctuation">)</span>  <span class="token comment">// true</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>  <span class="token comment">// 2 child \u548C parent \u90FD\u4F1A\u6536\u96C6\u5F53\u524D\u526F\u4F5C\u7528\u51FD\u6570</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

child<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">3</span>  <span class="token comment">// \u89E6\u53D1\u4E00\u6B21 child \u7684\u4F9D\u8D56\u66F4\u65B0</span>
obj<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">3</span>  <span class="token comment">// \u4E0D\u662F\u64CD\u4F5C\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u4E0D\u4F1A\u89E6\u53D1 set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6D45\u54CD\u5E94\u4E0E\u6DF1\u54CD\u5E94" tabindex="-1"><a class="header-anchor" href="#\u6D45\u54CD\u5E94\u4E0E\u6DF1\u54CD\u5E94" aria-hidden="true">#</a> \u6D45\u54CD\u5E94\u4E0E\u6DF1\u54CD\u5E94</h2><p>\u76EE\u524D\u5B9E\u73B0\u7684reactive \u53EA\u662F\u6D45\u54CD\u5E94\uFF0C\u4E5F\u5C31\u662F\u5BF9\u8C61\u7684\u7B2C\u4E00\u5C42\u5C5E\u6027\u662F\u54CD\u5E94\u7684\uFF0C\u7B2C\u4E8C\u5C42\u53CA\u66F4\u6DF1\u5C42\u6B21\u7684\u5C5E\u6027\u5219\u4E0D\u662F\u54CD\u5E94\u5F0F\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">2</span>  <span class="token comment">// \u4FEE\u6539\u672A\u89E6\u53D1\u54CD\u5E94</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u9996\u5148\u4F7F\u7528 Reflect.get \u8BFB\u53D6 obj.foo \u7684\u503C\uFF0C\u83B7\u53D6\u5230\u7684\u662F\u666E\u901A\u5BF9\u8C61 { bar: 1 }\uFF0C\u56E0\u4E3A\u8FD9\u4E0D\u662F\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5728\u526F\u4F5C\u7528\u51FD\u6570\u5F53\u4E2D\u8BBF\u95EE obj.foo.bar \u4E0D\u4F1A\u5EFA\u7ACB\u54CD\u5E94\u5F0F\u8054\u7CFB\u3002\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u9700\u8981\u8FDB\u884C\u4E00\u5C42\u5305\u88C5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target
      <span class="token punctuation">}</span>
      <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
			<span class="token comment">// \u6D45\u54CD\u5E94\u76F4\u63A5\u8FD4\u56DE\u539F\u59CB\u503C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isShallow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> res
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6DF1\u54CD\u5E94\uFF1A \u5148\u5F97\u5230\u539F\u59CB\u503C\u7ED3\u679C</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> res <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8C03\u7528 reactive \u5C06\u7ED3\u679C\u5305\u88C5\u6210\u54CD\u5E94\u5F0F\u6570\u636E\u5E76\u8FD4\u56DE</span>
        <span class="token keyword">return</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\uFF0C\u4E5F\u6709\u9700\u8981\u6D45\u54CD\u5E94\u6548\u679C\u7684\u9700\u6C42\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">shallowReactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// obj.foo \u662F\u54CD\u5E94\u7684\uFF0C\u53EF\u4EE5\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C</span>
obj<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token comment">// obj.foo.bar \u4E0D\u662F\u54CD\u5E94\u7684\uFF0C\u4E0D\u80FD\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53EA\u8BFB\u4E0E\u6D45\u53EA\u8BFB" tabindex="-1"><a class="header-anchor" href="#\u53EA\u8BFB\u4E0E\u6D45\u53EA\u8BFB" aria-hidden="true">#</a> \u53EA\u8BFB\u4E0E\u6D45\u53EA\u8BFB</h2><p>\u5F53\u7528\u6237\u5C1D\u8BD5\u4FEE\u6539\u53EA\u8BFB\u6570\u636E\u65F6\uFF0C\u4F1A\u6536\u5230\u4E00\u6761\u8B66\u544A\u4FE1\u606F\u3002\u4F8B\u5982 props \u5BF9\u8C61\u5C31\u5E94\u8BE5\u662F\u4E00\u4E2A\u53EA\u8BFB\u6570\u636E\u3002</p><ul><li>\u53EA\u8BFB\u7684\u6570\u636E\uFF0C\u65E2\u4E0D\u80FD\u8BBE\u7F6E set\uFF0C\u4E5F\u4E0D\u80FD\u5220\u9664 deleteProperty</li><li>\u53EA\u8BFB\u6570\u636E\u65E0\u6CD5\u4FEE\u6539\uFF0C\u6240\u4EE5\u4E5F\u4E0D\u9700\u8981\u4E3A\u53EA\u8BFB\u6570\u636E\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6DF1\u54CD\u5E94</span>
<span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6D45\u54CD\u5E94</span>
<span class="token keyword">function</span> <span class="token function">shallowReactive</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6DF1\u53EA\u8BFB</span>
<span class="token keyword">function</span> <span class="token function">readonly</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6D45\u53EA\u8BFB</span>
<span class="token keyword">function</span> <span class="token function">shallowReadonly</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">createReactive</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target
      <span class="token punctuation">}</span>
      <span class="token comment">// \u53EA\u8BFB\u4E0D\u9700\u8981\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB\uFF0C\u56E0\u4E3A\u4E0D\u4F1A\u88AB\u4FEE\u6539</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isReadonly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isShallow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> res
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> res <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6DF1\u53EA\u8BFB/\u54CD\u5E94</span>
        <span class="token keyword">return</span> isReadonly <span class="token operator">?</span> <span class="token function">readonly</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u8BFB\u65F6\u5BF9 set \u64CD\u4F5C\u62E6\u622A\u5E76\u8B66\u544A</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isReadonly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5C5E\u6027 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u662F\u53EA\u8BFB\u7684</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> receiver<span class="token punctuation">.</span>raw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> newVal <span class="token operator">===</span> newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53EA\u8BFB\u5C5E\u6027\u4E0D\u80FD\u5220\u9664\uFF0C\u629B\u51FA\u8B66\u544A</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isReadonly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5C5E\u6027 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u662F\u53EA\u8BFB\u7684</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// =================================================================</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">readonly</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// \u6DF1\u53EA\u8BFB\uFF0C\u65E0\u6CD5\u4FEE\u6539\u5220\u9664\uFF0C\u4E0D\u4F1A\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span>  <span class="token comment">// 1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment">// warn\uFF1A\u5C5E\u6027 bar \u662F\u53EA\u8BFB\u7684\uFF0C\u6B64\u65F6 obj.foo.bar \u8FD8\u662F1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4EE3\u7406\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7406\u6570\u7EC4" aria-hidden="true">#</a> \u4EE3\u7406\u6570\u7EC4</h2><p>\u6570\u7EC4\u662F\u4E00\u4E2A\u5F02\u8D28\u5BF9\u8C61\uFF0C\u6570\u7EC4\u5BF9\u8C61\u7684 [[DefineOwnProperty]] \u5185\u90E8\u65B9\u6CD5\u4E0E\u5E38\u89C4\u5BF9\u8C61\u4E0D\u540C\u3002</p><p>\u4F46\u5176\u4ED6\u5185\u90E8\u65B9\u6CD5\u7684\u903B\u8F91\u4E0E\u5E38\u89C4\u5BF9\u8C61\u662F\u4E00\u6837\u7684\uFF0C\u56E0\u6B64\u4EE3\u7406\u666E\u901A\u5BF9\u8C61\u7684\u5927\u90E8\u5206\u65B9\u6CD5\u90FD\u662F\u53EF\u4EE5\u7EE7\u7EED\u4F7F\u7528\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// foo</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>  <span class="token comment">// \u80FD\u591F\u89E6\u53D1\u54CD\u5E94</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6240\u6709\u5BF9\u6570\u7EC4\u5143\u7D20\u6216\u5C5E\u6027\u7684\u201C\u8BFB\u53D6\u201D\u64CD\u4F5C\uFF1A</p><ul><li>\u901A\u8FC7\u7D22\u5F15\u8BBF\u95EE\u6570\u7EC4\u5143\u7D20\u503C\uFF1Aarr[0]</li><li>\u8BBF\u95EE\u6570\u7EC4\u957F\u5EA6\uFF1Aarr.length</li><li>\u628A\u6570\u7EC4\u4F5C\u4E3A\u5BF9\u8C61\uFF0C\u4F7F\u7528 for...in \u5FAA\u73AF\u904D\u5386</li><li>\u4F7F\u7528 for...of \u8FED\u4EE3\u6570\u7EC4\u904D\u5386</li><li>\u6570\u7EC4\u7684\u539F\u578B\u65B9\u6CD5\uFF0C\u5982concat/join/every/some/find/findIndex/includes\u7B49\uFF0C\u4EE5\u53CA\u5176\u4ED6\u6240\u6709\u4E0D\u6539\u53D8\u539F\u6570\u7EC4\u7684\u539F\u578B\u65B9\u6CD5</li></ul></div><div class="custom-container tip"><p class="custom-container-title">\u6240\u6709\u5BF9\u6570\u7EC4\u5143\u7D20\u6216\u5C5E\u6027\u7684\u201C\u8BBE\u7F6E\u201D\u64CD\u4F5C\uFF1A</p><ul><li>\u901A\u8FC7\u7D22\u5F15\u4FEE\u6539\u6570\u7EC4\u5143\u7D20\u503C\uFF1Aarr[1] = 3</li><li>\u4FEE\u6539\u6570\u7EC4\u957F\u5EA6\uFF1Aarr.length = 0</li><li>\u6570\u7EC4\u7684\u6808\u65B9\u6CD5\uFF1Apush/pop/shift/unshift</li><li>\u4FEE\u6539\u539F\u6570\u7EC4\u7684\u539F\u578B\u65B9\u6CD5\uFF1Asplice/fill/sort \u7B49</li></ul></div><h3 id="\u6570\u7EC4\u7684\u7D22\u5F15\u4E0E-length" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u7D22\u5F15\u4E0E-length" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u7D22\u5F15\u4E0E length</h3><p>\u4F7F\u7528\u7D22\u5F15\u8BBE\u7F6E\u6570\u7EC4\u5143\u7D20\u503C\u548C\u5BF9\u8C61\u8BBE\u7F6E\u5C5E\u6027\u503C\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F [[Set]] \uFF0C [[Set]] \u8FD9\u4E2A\u5185\u90E8\u65B9\u6CD5\u5176\u5B9E\u4F9D\u8D56\u4E8E [[DefineOwnProperty]] \u3002\u4F46\u662F\u6570\u7EC4\u5BF9\u8C61\u5185\u90E8\u90E8\u7F72\u7684 [[DefineOwnProperty]] \u4E0D\u540C\u4E8E\u5E38\u89C4\u5BF9\u8C61\u3002</p><h4 id="\u4F7F\u7528\u7D22\u5F15-set" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u7D22\u5F15-set" aria-hidden="true">#</a> \u4F7F\u7528\u7D22\u5F15 set</h4><p>\u5F53\u8BBE\u7F6E\u7684\u7D22\u5F15\u503C\u5927\u4E8E\u6570\u7EC4\u5F53\u524D\u7684\u957F\u5EA6\u65F6\uFF0C\u4F1A\u66F4\u65B0\u6570\u7EC4\u7684 length \u5C5E\u6027\u3002\u8FD9\u4E2A\u9690\u5F0F\u7684\u4FEE\u6539\u9700\u8981\u6211\u4EEC\u89E6\u53D1\u4E0E length \u5C5E\u6027\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// length \u5C5E\u6027\u6536\u96C6\u4E86\u5F53\u524D\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u800C\u8FD9\u4E2A\u4FEE\u6539\u4F7F length \u5C5E\u6027\u53D1\u751F\u4E86\u53D8\u5316</span>
arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u6240\u4EE5\u6211\u4EEC\u9700\u8981\u5728 set \u62E6\u622A\u4E2D\u533A\u5206\u5F53\u524D\u64CD\u4F5C\u7C7B\u578B\u662F SET \u8FD8\u662F ADD\uFF0C\u4EE5\u6B64\u5224\u65AD length \u5C5E\u6027\u662F\u5426\u4F1A\u53D7\u5F71\u54CD\u3002</p><h4 id="\u7D22\u5F15\u88AB\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u88AB\u4FEE\u6539" aria-hidden="true">#</a> \u7D22\u5F15\u88AB\u4FEE\u6539</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// length \u4FEE\u6539\u4E4B\u540E\uFF0C\u5927\u4E8E\u65B0\u7D22\u5F15\u503C\u5F53\u65E7\u5C5E\u6027\u5DF2\u7ECF\u88AB\u5220\u9664\uFF0C\u9700\u8981\u5BF9\u5E94\u89E6\u53D1\u54CD\u5E94</span>
arr<span class="token punctuation">[</span><span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u8FD9\u91CC\u5F53\u4FEE\u6539 length \u5C5E\u6027\u65F6\uFF0C\u53EA\u6709\u90A3\u4E9B\u7D22\u5F15\u503C\u5927\u4E8E\u6216\u7B49\u4E8E\u65B0\u7684 length \u5C5E\u6027\u503C\u5F53\u5143\u7D20\u624D\u9700\u8981\u89E6\u53D1\u54CD\u5E94\u3002</p><h4 id="\u4EE3\u7801\u8C03\u6574" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u8C03\u6574" aria-hidden="true">#</a> \u4EE3\u7801\u8C03\u6574</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9488\u5BF9\u6570\u7EC4\u62E6\u622A\u8BBE\u7F6E\u64CD\u4F5C\u7684\u8C03\u6574</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isReadonly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5C5E\u6027 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u662F\u53EA\u8BFB\u7684</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> oldVal <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      
      <span class="token keyword">const</span> type <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
      	<span class="token comment">// \u533A\u5206\u6570\u7EC4\u5F53\u524D\u7684 set \u64CD\u4F5C\u662F\u5728 SET \u8FD8\u662F ADD</span>
        <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
      	<span class="token comment">// \u5982\u679C\u5C5E\u6027\u4E0D\u5B58\u5728\uFF0C\u5219\u8BF4\u660E\u662F\u5728\u6DFB\u52A0\u65B0\u7684\u5C5E\u6027\uFF0C\u5426\u5219\u662F\u8BBE\u7F6E\u5DF2\u5B58\u5728\u7684\u5C5E\u6027</span>
        <span class="token operator">:</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;ADD&#39;</span>
      
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> receiver<span class="token punctuation">.</span>raw<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>oldVal <span class="token operator">===</span> oldVal <span class="token operator">||</span> newVal <span class="token operator">===</span> newVal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5C06\u64CD\u4F5C\u7C7B\u578B\u4F20\u9012\u7ED9 trigger \u51FD\u6570\u5904\u7406</span>
          <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/*...*/</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> depsMap <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> effects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

  <span class="token keyword">const</span> effectsToRun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  effects <span class="token operator">&amp;&amp;</span> effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
	<span class="token comment">// \u6570\u7EC4\u5728\u6DFB\u52A0\u65B0\u5143\u7D20\uFF0C\u89E6\u53D1 length \u76F8\u5173\u7684\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lengthEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span>
    lengthEffects <span class="token operator">&amp;&amp;</span> lengthEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
	<span class="token comment">// \u6570\u7EC4\u8BBE\u7F6E\u4E86\u65B0 length \uFF0C\u89E6\u53D1\u88AB\u5220\u9664\u7684 key \u76F8\u5173\u7684\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> key <span class="token operator">===</span> <span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    depsMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">effects<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">&gt;=</span> newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  effectsToRun<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span>scheduler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      effectFn<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">scheduler</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u904D\u5386\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u6570\u7EC4" aria-hidden="true">#</a> \u904D\u5386\u6570\u7EC4</h3><h4 id="for-in" tabindex="-1"><a class="header-anchor" href="#for-in" aria-hidden="true">#</a> for...in</h4><p>\u5BF9\u4E8E\u666E\u901A\u5BF9\u8C61\u6765\u8BF4\uFF0C\u901A\u8FC7\u5BF9 ownKeys \u7684\u62E6\u622A\u5DF2\u7ECF\u80FD\u591F\u6EE1\u8DB3 for...in \u904D\u5386\u8DDF\u8E2A\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86 ITERATE_KEY \u5B58\u50A8\u7740\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u53EA\u6709\u5F53\u5BF9\u8C61\u7684\u5C5E\u6027\u6DFB\u52A0\u6216\u8005\u5220\u9664\u65F6\u624D\u9700\u8981\u89E6\u53D1\u5B83\u4EEC\u91CD\u65B0\u6267\u884C\u3002\u800C\u5BF9\u4E8E\u6570\u7EC4\u6765\u8BF4\uFF0C\u6709\u4EE5\u4E0B\u4E24\u79CD\u60C5\u51B5\u4F1A\u5F71\u54CD\u5230\u5B83\u7684 for...in \u904D\u5386\u3002\uFF08<em>\u5E94\u5C3D\u91CF\u907F\u514D\u4F7F\u7528 for...in \u904D\u5386\u6570\u7EC4</em>\uFF09</p><ul><li>\u6DFB\u52A0\u65B0\u5143\u7D20\uFF1Aarr[100] = &#39;bar&#39;</li><li>\u4FEE\u6539\u6570\u7EC4\u957F\u5EA6\uFF1A arr.length = 0</li></ul><p>\u{1F680} \u8FD9\u4E9B\u64CD\u4F5C\u672C\u8D28\u4E0A\u90FD\u662F\u4FEE\u6539\u4E86\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u56E0\u6B64\u8C03\u6574\u5BF9\u5E94\u7684 ownKeys \u62E6\u622A\u51FD\u6570\u5373\u53EF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u64CD\u4F5C\u76EE\u6807\u662F\u6570\u7EC4\uFF0C\u5219\u5C06\u5F53\u524D\u526F\u4F5C\u7528\u51FD\u6570\u4E0E\u6570\u7EC4\u7684 length \u6570\u7EC4\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">:</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="for-of" tabindex="-1"><a class="header-anchor" href="#for-of" aria-hidden="true">#</a> for...of</h4><ul><li>for...of\uFF1A\u904D\u5386\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF08iterable object\uFF09</li><li>\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF1AES2015 \u4E3A JavaScript \u5B9A\u4E49\u4E86\u8FED\u4EE3<strong>\u534F\u8BAE</strong>\uFF08iteration protocol\uFF09</li></ul><p>\u{1F516} \u4E00\u4E2A\u5BF9\u8C61\u80FD\u5426\u88AB\u8FED\u4EE3\uFF0C\u53D6\u51B3\u4E8E\u8BE5\u5BF9\u8C61\u7684\u539F\u578B\u662F\u5426\u5B9E\u73B0\u4E86 @@iterator \u65B9\u6CD5\u3002\u8FD9\u4E2A\u7684 @@[name] \u6807\u5FD7\u5728ECMAScript \u89C4\u8303\u91CC\u7528\u6765\u4EE3\u6307 JavaScript \u5185\u5EFA\u7684 symbols\u3002\u4F8B\u5982 @@iterator \u6307\u7684\u5C31\u662F Symbol.iterator \u8FD9\u4E2A\u503C\u3002\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u73B0\u4E86 Symbol.iterator \u65B9\u6CD5\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u5BF9\u8C61\u5C31\u662F<strong>\u53EF\u8FED\u4EE3\u7684</strong>\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
			<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> <span class="token punctuation">{</span>
					<span class="token literal-property property">value</span><span class="token operator">:</span> obj<span class="token punctuation">.</span>val<span class="token operator">++</span><span class="token punctuation">,</span>
					<span class="token literal-property property">done</span><span class="token operator">:</span> obj<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">// 0 1 2 3 4 5 6 7 8 9</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u5185\u5EFA\u4E86 Symbol.iterator \u65B9\u6CD5\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token comment">// \u83B7\u53D6\u5E76\u8C03\u7528\u6570\u7EC4\u5185\u5EFA\u7684\u8FED\u4EE3\u5668\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668</span>
<span class="token keyword">const</span> itr <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// {value: 1, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// {value: 2, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// {value: 3, done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// {value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6A21\u62DF\u5B9E\u73B0\u6570\u7EC4\u8FED\u4EE3\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> target<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> index <span class="token operator">&lt;</span> len <span class="token operator">?</span> target<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        <span class="token literal-property property">done</span><span class="token operator">:</span> index <span class="token operator">++</span> <span class="token operator">&gt;=</span> len
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F680} \u53EF\u89C1\uFF0C\u8FED\u4EE3\u6570\u7EC4\u65F6\uFF0C\u53EA\u9700\u8981\u5728\u526F\u4F5C\u7528\u51FD\u6570\u4E0E\u6570\u7EC4\u7684\u957F\u5EA6\u548C\u7D22\u5F15\u76F4\u63A5\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB\uFF0C\u5C31\u80FD\u591F\u5B9E\u73B0\u54CD\u5E94\u5F0F\u7684 for...of \u8FED\u4EE3\u3002</p><p>\u6211\u4EEC\u4E0D\u9700\u8981\u589E\u52A0\u4EFB\u4F55\u4EE3\u7801\u5C31\u80FD\u591F\u4F7F\u5176\u6B63\u786E\u5DE5\u4F5C\uFF0C\u56E0\u4E3A\u6570\u7EC4\u7684\u957F\u5EA6\u548C\u5143\u7D20\u503C\u53D1\u751F\u6539\u53D8\uFF0C\u526F\u4F5C\u7528\u51FD\u6570\u81EA\u7136\u4F1A\u91CD\u65B0\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// for (const val of arr.values()) {...}</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> val <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// \u80FD\u591F\u89E6\u53D1\u54CD\u5E94</span>
arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// \u80FD\u591F\u89E6\u53D1\u54CD\u5E94</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u7684 values \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u5B9E\u9645\u4E0A\u5C31\u662F\u6570\u7EC4\u5185\u5EFA\u7684\u8FED\u4EE3\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>values <span class="token operator">===</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u{1F510} \u6700\u540E\uFF0C\u65E0\u8BBA\u662F\u4F7F\u7528 values \u65B9\u6CD5\u51FD\u6570\uFF0C\u6216\u8005\u4F7F\u7528 for...of \u76F4\u63A5\u5FAA\u73AF\u6570\u7EC4\uFF0C\u90FD\u4F1A\u8BBF\u95EE\u6570\u7EC4\u7684 Symbol.iterator \u5C5E\u6027\u3002\u4E3A\u4E86\u907F\u514D\u53D1\u751F\u610F\u5916\u7684\u9519\u8BEF\uFF0C\u4EE5\u53CA\u6027\u80FD\u4E0A\u7684\u8003\u8651\uFF0C\u6211\u4EEC\u4E0D\u5E94\u8BE5\u5728\u526F\u4F5C\u7528\u51FD\u6570\u4E0E Symbol.iterator \u8FD9\u7C7B symbol \u503C\u4E4B\u95F4\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB\uFF0C\u56E0\u6B64\u4FEE\u6539\u4FEE\u6539\u4E00\u4E0B get \u62E6\u622A\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target
      <span class="token punctuation">}</span>

      <span class="token comment">// \u6DFB\u52A0\u5224\u65AD\uFF0C\u5982\u679C key \u7684\u7C7B\u578B\u662F symbol\uFF0C\u5219\u4E0D\u8FDB\u884C\u8FFD\u8E2A</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isReadonly <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> key <span class="token operator">!==</span> <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isShallow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> res
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u5143\u7D20\u503C\u662F\u53EF\u4EE5\u88AB\u4EE3\u7406\u7684\uFF0C\u8FD4\u56DE\u4EE3\u7406\u5BF9\u8C61</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> res <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> isReadonly <span class="token operator">?</span> <span class="token function">readonly</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">reactive</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u7684\u67E5\u627E\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7684\u67E5\u627E\u65B9\u6CD5" aria-hidden="true">#</a> \u6570\u7EC4\u7684\u67E5\u627E\u65B9\u6CD5</h3><blockquote><p>includes / indexOf / lastIndexOf</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">incluides</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// \u4E0E length/\u6240\u6709\u7D22\u5F15 \u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>  <span class="token comment">// \u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u7684\u65B9\u6CD5\u5176\u5B9E\u90FD\u4F9D\u8D56\u4E86\u5BF9\u8C61\u7684\u57FA\u672C\u8BED\u4E49\uFF0C\u6BD4\u5982 includes \u65B9\u6CD5\u4F1A\u8BBF\u95EE\u6570\u7EC4\u7684 length \u548C\u7D22\u5F15\u8FDB\u884C\u67E5\u627E\uFF0C\u56E0\u6B64\u5F53\u6211\u4EEC\u4FEE\u6539\u67D0\u4E2A\u7D22\u5F15\u4E0B\u7684\u503C\u90FD\u80FD\u6B63\u786E\u89E6\u53D1\u54CD\u5E94\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span>obj<span class="token punctuation">]</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false \u4EE3\u7406\u5BF9\u8C61\u76F4\u63A5\u7684\u6BD4\u8F83</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false \u4EE3\u7406\u5BF9\u8C61\u4E0E\u539F\u59CB\u503C\u7684\u6BD4\u8F83</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u{1F680} \u6570\u7EC4\u67E5\u627E\u65B9\u6CD5\u7684\u5206\u6790</p><ul><li>includes \u65B9\u6CD5\u5728\u67E5\u8BE2\u503C\u7684\u65F6\u5019\uFF0Cthis \u6307\u5411\u4EE3\u7406\u5BF9\u8C61 arr\uFF1B</li><li>arr[0] \u8BBF\u95EE\u4EE3\u7406\u5BF9\u8C61\u7684\u5143\u7D20\u503C\uFF0C\u8FD9\u4E2A\u503C obj \u4ECD\u7136\u662F\u53EF\u4EE5\u88AB\u4EE3\u7406\u7684\uFF0C\u8FD9\u91CC\u8FD4\u56DE\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\u800C\u975E\u539F\u59CB\u5BF9\u8C61\uFF1B</li><li>includes \u65B9\u6CD5\u5185\u90E8\u4E5F\u4F1A\u53D6\u5230 arr \u4EE3\u7406\u5BF9\u8C61\u4E0B\u7684\u5143\u7D20\u503C\uFF0C\u4ECE\u800C\u5F97\u5230\u4E00\u4E2A\u65B0\u7684\u4EE3\u7406\u5BF9\u8C61\uFF1B</li></ul><ol><li>\u6240\u4EE5\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u4EE3\u7406\u8FC7\u7684\u5BF9\u8C61\u7F13\u5B58\u8D77\u6765\u4FDD\u8BC1\u591A\u6B21\u4EE3\u7406\u540E\u5F97\u5230\u7684\u5BF9\u8C61\u662F\u76F8\u540C\u7684\uFF1B</li><li>\u540C\u65F6\uFF0C\u5BF9\u4E8E\u4E0E\u539F\u59CB\u503C\u6BD4\u8F83\u7684\u60C5\u51B5\uFF0C\u8981\u91CD\u5199\u5982 includes \u8FD9\u4E9B\u6839\u636E\u7ED9\u5B9A\u503C\u67E5\u627E\u7ED3\u679C\u7684\u65B9\u6CD5\u3002</li></ol></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arrayInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;includes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;indexOf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lastIndexOf&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">method</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> originMethod <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span>
  arrayInstrumentations<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this \u662F\u4EE3\u7406\u5BF9\u8C61\uFF0C\u5148\u5728\u4EE3\u7406\u5BF9\u8C61\u4E2D\u67E5\u627E\uFF0C\u5C06\u7ED3\u679C\u5B58\u50A8\u5230 res \u4E2D</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">originMethod</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// res \u4E3A false \u8BF4\u660E\u6CA1\u627E\u5230\uFF0C\u5728\u901A\u8FC7 this.raw \u62FF\u5230\u539F\u59CB\u6570\u7EC4\uFF0C\u518D\u53BB\u539F\u59CB\u6570\u7EC4\u4E2D\u67E5\u627E\uFF0C\u5E76\u66F4\u65B0 res \u503C</span>
      res <span class="token operator">=</span> <span class="token function">originMethod</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>raw<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE\u6700\u7EC8\u7684\u7ED3\u679C</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u62E6\u622A\u8BFB\u53D6\u64CD\u4F5C</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/*...*/</span>
      <span class="token comment">// \u4F7F\u7528\u91CD\u5199\u540E\u7684\u6570\u7EC4\u65B9\u6CD5</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arrayInstrumentations<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/*...*/</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9690\u5F0F\u4FEE\u6539\u6570\u7EC4\u957F\u5EA6\u7684\u539F\u578B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u9690\u5F0F\u4FEE\u6539\u6570\u7EC4\u957F\u5EA6\u7684\u539F\u578B\u65B9\u6CD5" aria-hidden="true">#</a> \u9690\u5F0F\u4FEE\u6539\u6570\u7EC4\u957F\u5EA6\u7684\u539F\u578B\u65B9\u6CD5</h3><blockquote><p>\u6808\u65B9\u6CD5\uFF1Apush / pop / shift / unshift + splice</p></blockquote><p>\u{1F516} push \u65B9\u6CD5\u5728\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u8BFB\u53D6\u6570\u7EC4\u7684 length \u5C5E\u6027\u503C\uFF0C\u4E5F\u4F1A\u8BBE\u7F6E length\u3002\u6211\u4EEC\u867D\u7136\u5904\u7406\u4E86 set \u4E0D\u4F1A\u89E6\u53D1\u5F53\u524D\u6FC0\u6D3B\u7684\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\u5BFC\u81F4\u7684\u6808\u6EA2\u51FA\u95EE\u9898\uFF0C\u4F46\u662F\u4EE5\u4E0B\u8FD9\u4E2A\u60C5\u51B5\u4ECD\u7136\u4F1A\u51FA\u73B0\u6808\u6EA2\u51FA\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u7B2C\u4E00\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C\uFF0C\u6267\u884C\u5B8C\u6BD5\u4E4B\u540E\u6570\u7EC4\u7684 length \u6570\u7EC4\u4F1A\u4E0E \u526F\u4F5C\u7528\u51FD\u6570\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</p></li><li><p>\u7B2C\u4E8C\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C\uFF0C\u540C\u6837\u5EFA\u7ACB\u4E86\u54CD\u5E94\u5F0F\u8054\u7CFB\uFF0C\u4F46\u662F push \u8FD8\u4F1A\u8BBE\u7F6E length</p></li><li><p>\u7B2C\u4E8C\u4E2A\u51FD\u6570\u7684 length \u8BBE\u7F6E\u89E6\u53D1\u54CD\u5E94\uFF0C\u628A\u4E24\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u90FD\u53D6\u51FA\u91CD\u65B0\u6267\u884C\u3002</p><p>\u6B64\u65F6\u7B2C\u4E8C\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u8FD8\u6CA1\u6267\u884C\u5B8C\uFF0C\u5C31\u8981\u518D\u6267\u884C\u7B2C\u4E00\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u4E86\u3002</p></li><li><p>\u540C\u6837\u7B2C\u4E00\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\u8FD8\u5728\u8BBE\u7F6E length \u7684\u65F6\u5019\uFF0C\u53C8\u5F00\u59CB\u4E86\u4F9D\u8D56\u89E6\u53D1\u66F4\u65B0</p></li><li><p>\u5982\u6B64\u5FAA\u73AF\u5F80\u590D\uFF0C\u6700\u7EC8\u5BFC\u81F4\u8C03\u52A8\u6808\u6EA2\u51FA</p></li></ul><p>\u{1F680} \u56E0\u4E3A push \u5185\u5BF9 length \u7684\u8BFB\u53D6\u64CD\u4F5C\u662F\u8FD9\u4E2A\u95EE\u9898\u7684\u539F\u56E0\uFF0C\u6240\u4EE5\u6211\u4EEC\u5E94\u8BE5\u5C4F\u853D\u8FD9\u4E2A\u8FC7\u7A0B\u5BF9 length \u5EFA\u7ACB\u54CD\u5E94\u5F0F\u8054\u7CFB\u3002push \u7684\u8BED\u4E49\u662F\u4FEE\u6539\u64CD\u4F5C\uFF0C\u800C\u4E0D\u662F\u8BFB\u53D6\u64CD\u4F5C\u3002\u56E0\u6B64\u6211\u4EEC\u9700\u8981\u91CD\u5199 push \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">method</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> originMethod <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span>
  arrayInstrumentations<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    shouldTrack <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token comment">// \u53D6\u5F97\u539F\u59CB\u65B9\u6CD5</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">originMethod</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    <span class="token comment">// \u8C03\u7528\u540E\u6062\u590D\u539F\u6765\u7684\u884C\u4E3A\uFF0C\u5373\u5141\u8BB8\u8FFD\u8E2A</span>
    shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">/*...*/</span>

<span class="token keyword">function</span> <span class="token function">track</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u6807\u8BB0\u53D8\u91CF\u4E0D\u5141\u8BB8\u8FFD\u8E2A\u65F6\uFF0Creturn</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activeEffect <span class="token operator">||</span> <span class="token operator">!</span>shouldTrack<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token comment">/*...*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4EE3\u7406-set-\u548C-map" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7406-set-\u548C-map" aria-hidden="true">#</a> \u4EE3\u7406 Set \u548C Map</h2><blockquote><p>\u96C6\u5408\u7C7B\u578B\u6570\u636E\uFF1AMap / Set, WeakSet / WeakMap</p></blockquote><p>\u{1F525} Map \u548C Set \u4E24\u4E2A\u6570\u636E\u7C7B\u578B\u7684\u64CD\u4F5C\u65B9\u6CD5\u7C7B\u4F3C\u3002\u5B83\u4EEC\u4E4B\u95F4\u6700\u5927\u7684\u4E0D\u540C\u4F53\u73B0\u5728\uFF0CSet \u6570\u636E\u7C7B\u578B\u4F7F\u7528 add(value) \u65B9\u6CD5\u6DFB\u52A0\u5143\u7D20\uFF0C\u800C Map \u7C7B\u4F3C\u4F7F\u7528 set(key, value) \u65B9\u6CD5\u8BBE\u7F6E\u952E\u503C\u5BF9\uFF0C\u5E76\u4E14 Map \u7C7B\u4F3C\u53EF\u4EE5\u4F7F\u7528 get(key) \u65B9\u6CD5\u8BFB\u53D6\u54CD\u5E94\u7684\u503C\u3002</p><h3 id="\u5982\u4F55\u4EE3\u7406-set-\u548C-map" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u4EE3\u7406-set-\u548C-map" aria-hidden="true">#</a> \u5982\u4F55\u4EE3\u7406 Set \u548C Map</h3><div class="custom-container tip"><p class="custom-container-title">Set \u6570\u636E\u7C7B\u578B\u7684\u4EE3\u7406</p><ul><li>\u867D\u7136\u64CD\u4F5C\u65B9\u6CD5\u548C\u666E\u901A\u5BF9\u8C61\u4E0D\u4E00\u81F4\uFF0C\u4F46\u662F\u6574\u4F53\u7684\u601D\u8DEF\u662F\u4E0D\u53D8\u7684\uFF0C\u5373\u5728\u8BFB\u53D6\u64CD\u4F5C\u53D1\u751F\u65F6\u8C03\u7528 track \u51FD\u6570\u5EFA\u7ACB\u54CD\u5E94\u5F0F\u8054\u7CFB\uFF1B\u5F53\u8BBE\u7F6E\u64CD\u4F5C\u53D1\u751F\u65F6\uFF0C\u8C03\u7528 trigger \u51FD\u6570\u89E6\u53D1\u54CD\u5E94\uFF1B</li><li>Set.prototype.size \u662F\u4E00\u4E2A<strong>\u8BBF\u95EE\u5668\u5C5E\u6027</strong>\uFF0C\u5185\u90E8\u901A\u8FC7 this \u7684\u62BD\u8C61\u65B9\u6CD5 RequireInternalSlot(s, [[SetData]]) \u6765\u68C0\u67E5 s \u662F\u5426\u5B58\u5728\u5185\u90E8\u69FD [[SetData]]\uFF0C\u8FD9\u662F\u4EE3\u7406\u4E4B\u540E\u7684\u5BF9\u8C61\u6CA1\u6709\u7684\uFF0C\u9700\u8981\u901A\u8FC7 Reflect \u6307\u5B9A\uFF1B</li><li>\u4F7F\u7528 delete <strong>\u65B9\u6CD5</strong>\u65F6\uFF0C\u5148\u8BBF\u95EE p.delete \uFF0C\u518D\u6267\u884C p.delete(val) \u65B9\u6CD5\u3002\u65E0\u8BBA\u600E\u4E48\u4FEE\u6539 receicer\uFF0Cdelete \u65B9\u6CD5\u6267\u884C\u65F6\u7684 this \u90FD\u4F1A\u6307\u5411\u4EE3\u7406\u5BF9\u8C61 p\uFF0C\u800C\u4E0D\u4F1A\u6307\u5411 Set \u5BF9\u8C61\uFF0C\u56E0\u6B64\u9700\u8981\u628A delete \u65B9\u6CD5\u4E0E\u539F\u59CB\u6570\u636E\u5BF9\u8C61\u7ED1\u5B9A\uFF1B</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;size&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C5E\u6027\u8BBF\u95EE\u5668\u7684\u4E0A\u4E0B\u6587\u7ED1\u5B9A\uFF0C\u83B7\u53D6\u5230\u6B63\u786E\u7684\u62BD\u8C61\u65B9\u6CD5</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> target<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
			<span class="token comment">// \u5C06\u65B9\u6CD5\u4E0E\u539F\u59CB\u6570\u636E\u5BF9\u8C61 target \u5BF9\u8C61\u7ED1\u5B9A\u540E\u8FD4\u56DE</span>
      <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB" aria-hidden="true">#</a> \u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</h3><ul><li>add / delete \u65B9\u6CD5\u4F1A\u95F4\u63A5\u4FEE\u6539 size \u5C5E\u6027\uFF0C\u9700\u8981\u89E6\u53D1\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C</li><li>add \u65B9\u6CD5\u6DFB\u52A0\u7684\u5143\u7D20\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4E8E Set \u96C6\u5408\u5F53\u4E2D\uFF0C\u5C31\u4E0D\u518D\u9700\u8981\u89E6\u53D1\u54CD\u5E94\u4E86</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mutableInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token comment">// \u503C\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u7684\u5224\u65AD\uFF0C\u63D0\u5347\u6027\u80FD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;ADD&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token keyword">const</span> hadKey <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> isShallow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> isReadonly <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;raw&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> target
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;size&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BFB\u53D6 size \u7684\u526F\u4F5C\u7528\u51FD\u6570\u88AB\u6536\u96C6\u5230 ITERATE_KEY \u7684\u5173\u8054\u6876\u4E2D</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> target<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> mutableInstrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6DFB\u52A0\u3001\u5220\u9664\u8FD9\u4E9B\u5F71\u54CD size \u7684\u65B9\u6CD5\u90FD\u4F1A\u89E6\u53D1\u5BF9\u5E94\u7684\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
	<span class="token comment">/*...*/</span>
<span class="token punctuation">}</span>

<span class="token comment">/*...*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u907F\u514D\u6C61\u67D3\u539F\u59CB\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u907F\u514D\u6C61\u67D3\u539F\u59CB\u6570\u636E" aria-hidden="true">#</a> \u907F\u514D\u6C61\u67D3\u539F\u59CB\u6570\u636E</h3><p>\u{1F680} \u8981\u4FDD\u8BC1\u539F\u59CB\u6570\u636E\u4E0D\u5177\u6709\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u80FD\u529B\uFF0C\u5426\u5219\u5C31\u610F\u5473\u7740\u7528\u6237\u53EF\u4EE5\u540C\u65F6\u64CD\u4F5C\u4E24\u79CD\u6570\u636E\uFF0C\u8FD9\u6837\u4EE3\u7801\u5C31\u4E71\u5957\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u901A\u8FC7\u539F\u59CB\u6570\u636E m \u8BBF\u95EE p2</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8FD9\u91CC\u4F7F\u7528\u539F\u59CB\u6570\u636E m \u8C03\u7528 set \u65B9\u6CD5\uFF0C\u8FD9\u91CC\u4F1A\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\uFF0C\u4E0D\u7B26\u5408\u671F\u671B</span>
m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F516} \u539F\u6765\u7684 set \u65B9\u6CD5\u5185\uFF0C\u628A value \u539F\u6837\u8BBE\u7F6E\u5230\u4E86\u539F\u59CB\u6570\u636E target \u4E0A\u3002\u5982\u679C value \u662F\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u5C31\u610F\u5473\u7740\u8BBE\u7F6E\u5230\u539F\u59CB\u5BF9\u8C61\u4E0A\u7684\u4E5F\u662F\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u6211\u4EEC\u628A<strong>\u54CD\u5E94\u5F0F\u6570\u636E\u8BBE\u7F6E\u5230\u539F\u59CB\u6570\u636E\u4E0A\u7684\u884C\u4E3A\u79F0\u4E3A\u6570\u636E\u6C61\u67D3</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
  <span class="token keyword">const</span> had <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

  <span class="token keyword">const</span> oldValue <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token comment">// target.set(key, value) </span>
  <span class="token comment">// \u83B7\u53D6\u539F\u59CB\u6570\u636E\uFF0C\u7531\u4E8E value \u672C\u8EAB\u53EF\u80FD\u5DF2\u7ECF\u4E0A\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u6240\u4EE5\u6B64\u65F6 value.raw \u4E0D\u5B58\u5728\uFF0C\u5219\u76F4\u63A5\u4F7F\u7528 value</span>
  <span class="token keyword">const</span> rawValue <span class="token operator">=</span> value<span class="token punctuation">.</span>raw <span class="token operator">||</span> value
  target<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> rawValue<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>had<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;ADD&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldValue <span class="token operator">!==</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>oldValue <span class="token operator">===</span> oldValue <span class="token operator">&amp;&amp;</span> value <span class="token operator">===</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;SET&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>\u4F7F\u7528 raw \u8BBF\u95EE\u53EF\u80FD\u4E0E\u7528\u6237\u81EA\u5B9A\u4E49\u7684 raw \u5C5E\u6027\u51B2\u7A81\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528 Symbol \u7C7B\u578B\u6765\u4EE3\u66FF</em></p><h3 id="\u5904\u7406-foreach" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406-foreach" aria-hidden="true">#</a> \u5904\u7406 forEach</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  m<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> m</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>  <span class="token comment">// {key: 1}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>  <span class="token comment">// {value: 1}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u96C6\u5408\u7C7B\u578B\u7684 forEach \u4EE3\u7406</p><ul><li><p>\u904D\u5386\u64CD\u4F5C\u53EA\u4E0E\u952E\u503C\u5BF9\u7684\u6570\u91CF\u6709\u5173\uFF0C\u56E0\u6B64\u4EFB\u4F55\u4F1A\u4FEE\u6539 Map \u5BF9\u8C61\u952E\u503C\u5BF9\u6570\u91CF(size)\u7684\u64CD\u4F5C\u90FD\u5E94\u8BE5\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\u3002</p></li><li><p>forEach \u56DE\u8C03\u51FD\u6570\u5185\u7684\u6570\u636E\u4E5F\u8981\u662F\u54CD\u5E94\u5F0F\u7684\uFF0C\u624D\u80FD\u6B63\u5E38\u6536\u96C6\u4F9D\u8D56</p></li><li><p>forEach \u56DE\u8C03\u51FD\u6570\u80FD\u591F\u63A5\u53D7 thisArg \u4F5C\u4E3A\u6267\u884C\u65F6\u7684 this \u503C</p></li><li><p>forEach \u4E0E for...in \u7684\u54CD\u5E94\u5F0F\u8054\u7CFB\u90FD\u5EFA\u7ACB\u5728 ITERATE_KEY \u4E0E\u526F\u4F5C\u7528\u51FD\u6570\u4E4B\u95F4</p></li><li><p>\u4F7F\u7528 for...in \u904D\u5386\u96C6\u5408\u7C7B\u578B\uFF0C\u5B83\u53EA\u5173\u5FC3\u5BF9\u8C61\u7684\u952E\uFF0C\u53EA\u6709\u589E\u51CF\u5BF9\u8C61\u7684 key \u624D\u9700\u8981\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C\uFF1BMap \u7C7B\u578B forEach \u904D\u5386\u65F6\uFF0C\u56DE\u8C03\u51FD\u6570\u80FD\u591F\u53D6\u5230<strong>\u952E\u548C\u503C</strong>\uFF0C\u6240\u4EE5\u5373\u4F7F\u662F SET \u64CD\u4F5C\uFF0C\u4E5F\u8981\u80FD\u89E6\u53D1\u54CD\u5E94</p></li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*...*/</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span>
    type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span> <span class="token operator">||</span>
    <span class="token comment">// \u5982\u679C\u64CD\u4F5C\u7C7B\u578B\u662F SET\uFF0C\u5E76\u4E14\u76EE\u6807\u5BF9\u8C61\u662F Map \u7C7B\u578B\u7684\u6570\u636E</span>
    <span class="token comment">// \u4E5F\u5E94\u8BE5\u89E6\u53D1\u90A3\u4E9B\u4E0E ITERATE_KEY \u76F8\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570\u91CD\u65B0\u6267\u884C</span>
    <span class="token punctuation">(</span>
      type <span class="token operator">===</span> <span class="token string">&#39;SET&#39;</span> <span class="token operator">&amp;&amp;</span>
      <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Map]&#39;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/*...*/</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> mutableInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">/*...*/</span>
  <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
    <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
    <span class="token comment">// \u4F20\u9012\u7ED9\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u4E5F\u8981\u662F\u54CD\u5E94\u5F0F\u7684\uFF0C\u624D\u80FD\u6536\u96C6\u4F9D\u8D56</span>
    target<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// forEach \u65B9\u6CD5\u80FD\u591F\u6307\u5B9A\u6267\u884C\u65F6\u7684 this</span>
      <span class="token function">callback</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> <span class="token function">wrap</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">wrap</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*...*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8FED\u4EE3\u5668\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u65B9\u6CD5" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
	<span class="token punctuation">[</span><span class="token string">&#39;key1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token punctuation">[</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> m<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> itr <span class="token operator">=</span> m<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// { value: [&#39;key1&#39;, &#39;value1&#39;], done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// { value: [&#39;key2&#39;, &#39;value2&#39;], done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// { value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u96C6\u5408\u7C7B\u578B\u7684\u8FED\u4EE3\u5668\u65B9\u6CD5\u4EE3\u7406</p><ul><li>\u96C6\u5408\u7C7B\u578B\u6709\u4E09\u4E2A\u8FED\u4EE3\u5668<strong>\u65B9\u6CD5</strong>\uFF1Aentries\u3001keys\u3001value</li><li>Map \u6216 Set \u7C7B\u578B\u672C\u8EAB\u90E8\u7F72\u4E86 Symbol.iterator \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u4F7F\u7528 for...of \u8FDB\u884C\u8FED\u4EE3\uFF0C\u4E5F\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u8BE5\u65B9\u6CD5\u751F\u6210\u8FED\u4EE3\u5668</li><li>\u4E3A\u4E86\u4F7F\u7528\u4EE3\u7406\u5BF9\u8C61\u80FD\u591F\u6B63\u5E38\u8FED\u4EE3\uFF0C\u8981\u62E6\u622A Symbol.iterator \u5C5E\u6027\u8FD4\u56DE\u539F\u8FED\u4EE3\u5668\u65B9\u6CD5\uFF08\u6EE1\u8DB3\u8FED\u4EE3\u534F\u8BAE\u624D\u80FD\u8FED\u4EE3\uFF09</li><li>\u8FED\u4EE3\u4EA7\u751F\u7684\u503C\u5982\u679C\u662F\u53EF\u4EE3\u7406\u7684\uFF0C\u4E5F\u8981\u5C06\u5176\u5C01\u88C5\u6210\u54CD\u5E94\u5F0F\u6570\u636E</li><li>\u4E3A\u4E86\u8FFD\u8E2A for...of \u5BF9\u6570\u636E\u7684\u8FED\u4EE3\u64CD\u4F5C\uFF0C\u9700\u8981\u8C03\u7528 track \u51FD\u6570\uFF0C\u8BA9\u526F\u4F5C\u7528\u51FD\u6570\u4E5F ITERATE_KEY \u5EFA\u7ACB\u8054\u7CFB</li><li>\u56E0\u4E3A p.entries \u4E0E p[Symbol.iterator] \u7B49\u4EF7\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E00\u6837\u7684\u65B9\u5F0F\u5904\u7406</li><li>\u53EF\u8FED\u4EE3\u6307\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u73B0\u4E86 Symbol.iterator \u65B9\u6CD5\uFF0C\u800C\u8FED\u4EE3\u5668\u534F\u8BAE\u6307\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u73B0\u4E86 next \u65B9\u6CD5\u3002\u4E00\u4E2A\u5BF9\u8C61\u53EF\u4EE5\u540C\u65F6\u5B9E\u73B0\u53EF\u8FED\u4EE3\u534F\u8BAE\u548C\u8FED\u4EE3\u5668\u534F\u8BAE</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mutableInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> iterationMethod<span class="token punctuation">,</span>
  <span class="token literal-property property">entries</span><span class="token operator">:</span> iterationMethod<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">iterationMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u539F\u59CB\u6570\u636E\u5BF9\u8C61 target</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
  <span class="token comment">// \u83B7\u53D6\u5230\u539F\u59CB\u8FED\u4EE3\u5668\u65B9\u6CD5</span>
  <span class="token keyword">const</span> itr <span class="token operator">=</span> target<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val
	<span class="token comment">// \u5BF9\u4E8E\u8FED\u4EE3\u64CD\u4F5C\u7684\u4F9D\u8D56\u6536\u96C6</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>

  <span class="token comment">// \u5C06\u5176\u8FD4\u56DE</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FED\u4EE3\u5668\u534F\u8BAE\uFF1A\u5BF9\u8C61\u5B9E\u73B0 next \u65B9\u6CD5</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token comment">// callback \u53C2\u6570\u54CD\u5E94\u5904\u7406</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> value <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token function">wrap</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">wrap</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">:</span> value<span class="token punctuation">,</span>
        done
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u53EF\u8FED\u4EE3\u534F\u8BAE\uFF1A\u5BF9\u8C61\u5B9E\u73B0\u4E86 Symbol.iterator \u65B9\u6CD5</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="values-\u4E0E-keys-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#values-\u4E0E-keys-\u65B9\u6CD5" aria-hidden="true">#</a> values \u4E0E keys \u65B9\u6CD5</h3><div class="custom-container tip"><p class="custom-container-title">\u96C6\u5408\u7C7B\u578B values\u3001keys \u8FED\u4EE3\u5668\u65B9\u6CD5\u4EE3\u7406</p><ul><li>values \u548C keys \u65B9\u6CD5\u662F\u7C7B\u4F3C\u7684\uFF0C\u4E0D\u540C\u5728\u4E8E\u5904\u7406\u7684\u662F\u952E\u8FD8\u662F\u503C</li><li>Map\u6570\u636E\u7C7B\u578B\u4E0B\uFF0CSET \u64CD\u4F5C\u4F1A\u89E6\u53D1\u4E0E ITERATE_KEY \u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570\u3002\u5BF9\u4E8E values \u6216 entries \u65B9\u6CD5\u662F\u5FC5\u9700\u7684\uFF0C\u4F46\u662F\u5BF9\u4E8E keys \u65B9\u6CD5\u6765\u8BF4\u662F\u6CA1\u6709\u5FC5\u8981\u7684\u3002 SET \u64CD\u4F5C\u4E0D\u4F1A\u4F7F keys \u65B9\u6CD5\u6709\u4EFB\u4F55\u526F\u4F5C\u7528\u53D1\u751F\u3002\uFF08\u4F7F\u7528 MAP_KEY_ITERATE_KEY \u5EFA\u7ACB keys \u7684\u54CD\u5E94\u5F0F\u5173\u8054\uFF09</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">MAP_KEY_ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">trigger</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>
    <span class="token comment">// \u64CD\u4F5C\u7C7B\u578B\u4E3A ADD \u6216 DELETE</span>
    type <span class="token operator">===</span> <span class="token string">&#39;ADD&#39;</span> <span class="token operator">||</span> type <span class="token operator">===</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token comment">// \u5E76\u4E14\u662F Map \u7C7B\u578B\u7684\u6570\u636E</span>
    <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Map]&#39;</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D6\u51FA\u90A3\u4E9B\u4E0E MAP_KEY_ITERATE_KEY \u76F8\u5173\u8054\u7684\u526F\u4F5C\u7528\u51FD\u6570\u5E76\u6267\u884C</span>
    <span class="token keyword">const</span> iterateEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">MAP_KEY_ITERATE_KEY</span><span class="token punctuation">)</span>
    iterateEffects <span class="token operator">&amp;&amp;</span> iterateEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectFn <span class="token operator">!==</span> activeEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        effectsToRun<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>effectFn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> mutableInstrumentations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">keys</span><span class="token operator">:</span> keysIterationMethod<span class="token punctuation">,</span>
  <span class="token literal-property property">values</span><span class="token operator">:</span> valuesIterationMethod<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">valuesIterationMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
  <span class="token comment">// \u83B7\u53D6\u539F\u59CB\u7684 values \u65B9\u6CD5\u8FD4\u56DE\u7684\u8FED\u4EE3\u5668</span>
  <span class="token keyword">const</span> itr <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val
  <span class="token comment">// entries\u3001values \u65B9\u6CD5\u4F9D\u65E7\u4E0E ITERATE_KEY \u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token function">wrap</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
        done
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">keysIterationMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raw
  <span class="token comment">// \u83B7\u53D6\u539F\u59CB\u7684 keys \u65B9\u6CD5\u8FD4\u56DE\u7684\u8FED\u4EE3\u5668</span>
  <span class="token keyword">const</span> itr <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">wrap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> <span class="token function">reactive</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">:</span> val
  <span class="token comment">// keys \u65B9\u6CD5\u4E0E MAP_KEY_ITERATE_KEY \u5EFA\u7ACB\u54CD\u5E94\u8054\u7CFB</span>
  <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">MAP_KEY_ITERATE_KEY</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> itr<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token function">wrap</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
        done
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*...*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,120);function m(b,f){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[k,n("a",r,[d,l(t)])]),v])}var g=p(i,[["render",m],["__file","chapter5.html.vue"]]);export{g as default};
