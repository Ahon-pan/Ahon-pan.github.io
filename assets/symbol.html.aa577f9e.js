import{_ as n,o as s,c as a,d as t}from"./app.ede35192.js";const p={},o=t(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><h2 id="\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E" aria-hidden="true">#</a> \u58F0\u660E</h2><p><code>Symbol()</code>\u4EA7\u751F\u4E00\u4E2A\u552F\u4E00\u7684\u6570\u636E\uFF0C\u7C7B\u4F3C\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>         <span class="token comment">// a: Symbol(a)</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>     <span class="token comment">// b: Symbol(b)</span>

<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>      	  <span class="token comment">// c: Symbol(a)</span>
<span class="token keyword">const</span> d <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>     <span class="token comment">// d: Symbol(b)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token operator">==</span>c<span class="token punctuation">)</span>  <span class="token comment">// false \u666E\u901A\u58F0\u660E\u7684\u53C2\u6570\u53EA\u662F\u4E2A\u63CF\u8FF0\uFF0C\u65E0\u5176\u4ED6\u4F5C\u7528</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token operator">==</span>d<span class="token punctuation">)</span>  
<span class="token comment">// true  Symbol.for(key)\u4F1A\u5728\u5168\u5C40\u5185\u5B58\u4E2D\u8BB0\u5F55\u8FD9\u4E2Akey\u7684Symbol,\u518D\u6B21\u58F0\u660E\u4F1A\u76F4\u63A5\u8FD4\u56DE\u539F\u6765\u58F0\u660E\u8FC7\u7684</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">// b  Symbol.keyFor\u83B7\u53D6key</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol\u4F5Ckey" tabindex="-1"><a class="header-anchor" href="#symbol\u4F5Ckey" aria-hidden="true">#</a> Symbol\u4F5Ckey</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> u1 <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jerry&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> u2 <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Jerry&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> grade <span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token punctuation">[</span>u1<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">js</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>u2<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">js</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span>u2<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">//  {js: 60, css: 80}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C5E\u6027\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u904D\u5386" aria-hidden="true">#</a> \u5C5E\u6027\u904D\u5386</h2><p>Symbol\u7C7B\u578B\u4F5Ckey\u662F\u4E0D\u80FD\u88ABfor in/of\u904D\u5386\u5230\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;haha&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">one</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">two</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [&quot;one&quot;]</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [&quot;one&quot;, &quot;two&quot;]</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [Symbol()]</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// [&quot;one&quot;, &quot;two&quot;, Symbol()]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Object.keys</code>\uFF1A\u83B7\u53D6\u81EA\u8EAB\u4E0A\u7684\u53EF\u679A\u4E3E\u5C5E\u6027</li><li><code>Object.getOwnPropertyNames</code>\uFF1A\u83B7\u53D6\u81EA\u8EAB\u4E0A\u7684\u5C5E\u6027</li><li><code>Object.getOwnPropertySymbols</code>: \u83B7\u53D6\u81EA\u8EAB\u4E0A\u7684Symbol\u5C5E\u6027</li><li><code>Reflect.ownKeys(a)</code></li></ul>`,10),e=[o];function c(l,i){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","symbol.html.vue"]]);export{r as default};
